{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd \ud83d\udca8 \u6b64\u9879\u76ee\u81f4\u529b\u4e8e\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u7684\u7406\u89e3\u548c\u5feb\u901f\u4e0a\u624b Jetpack Compose \u6846\u67b6\uff0c\u4ece\u800c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u9879\u76ee\u4f1a\u5305\u542b\u5f88\u591a\u5173\u4e8e Jetpack Compose \u7684 \u6559\u7a0b/ \u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 / \u7ecf\u5386\u7684\u5751 \u672a\u6765\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6837\u4f8b app\uff08\u5f00\u53d1\u4e2d\uff09 1. Jetpack Composes \u662f\u4ec0\u4e48 \uff1f Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f\u754c\u9762\u7684\u6700\u65b0\u7684 Android \u5de5\u5177\u5305\uff0c\u91c7\u7528\u58f0\u660e\u5f0f UI \u7684\u8bbe\u8ba1\uff0c\u62e5\u6709\u66f4\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u548c\u5b9e\u65f6\u7684\u4ea4\u4e92\u9884\u89c8\u529f\u80fd\uff0c\u7531 Android \u5b98\u65b9\u56e2\u961f\u5168\u65b0\u6253\u9020\u7684 UI \u6846\u67b6","title":"\u6982\u8ff0"},{"location":"#_1","text":"\u6b64\u9879\u76ee\u81f4\u529b\u4e8e\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u7684\u7406\u89e3\u548c\u5feb\u901f\u4e0a\u624b Jetpack Compose \u6846\u67b6\uff0c\u4ece\u800c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u9879\u76ee\u4f1a\u5305\u542b\u5f88\u591a\u5173\u4e8e Jetpack Compose \u7684 \u6559\u7a0b/ \u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 / \u7ecf\u5386\u7684\u5751 \u672a\u6765\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6837\u4f8b app\uff08\u5f00\u53d1\u4e2d\uff09","title":"\u4ecb\u7ecd \ud83d\udca8"},{"location":"#1-jetpack-composes","text":"Jetpack Compose \u662f\u7528\u4e8e\u6784\u5efa\u539f\u751f\u754c\u9762\u7684\u6700\u65b0\u7684 Android \u5de5\u5177\u5305\uff0c\u91c7\u7528\u58f0\u660e\u5f0f UI \u7684\u8bbe\u8ba1\uff0c\u62e5\u6709\u66f4\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u548c\u5b9e\u65f6\u7684\u4ea4\u4e92\u9884\u89c8\u529f\u80fd\uff0c\u7531 Android \u5b98\u65b9\u56e2\u961f\u5168\u65b0\u6253\u9020\u7684 UI \u6846\u67b6","title":"1. Jetpack Composes \u662f\u4ec0\u4e48 \uff1f"},{"location":"codelabs/","text":"Codelabs \u4e3b\u8981\u662f\u5e2e\u52a9\u5927\u5bb6\u80fd\u591f\u5b9e\u73b0\u4e00\u4e9b\u7b80\u5355/\u6709\u7528/\u597d\u73a9\u7684\u4e1c\u897f \u6b22\u8fce\u5927\u5bb6\u7ed9\u81ea\u5df1\u7684 APP \u5199\u4e0a\u6b65\u9aa4\u5e76\u4e0a\u4f20\u5230\u8fd9\u91cc\uff01 Codelabs \u4e3b\u9875 \u5b9e\u9a8c\u5ba4 \u4ecb\u7ecd \u8bd7\u53e5\u5361\u7247 \u5b9e\u73b0\u7b80\u5355\u7684\u7ed3\u6784\u5e03\u5c40 \u5173\u4e8e\u5982\u4f55\u8d21\u732e Codelabs \u6216\u8005\u4fee\u6539\u9519\u8bef Fork Codelabs \u7684\u9879\u76ee \u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7684\u73af\u5883 Go Node.js \u548c npm Claat \uff0c\u63a8\u8350\u7528 go \u547d\u4ee4\u6765\u5b89\u88c5 \u63a5\u4e0b\u6765 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u8fd0\u884c npm install \u8fd0\u884c gulp serve --codelabs-dir=codelabs \u5728 http://localhost:8000/ \u4e2d\u67e5\u770b\u7f51\u9875 \u4fee\u6539 \u8fdb\u5165 codelabs \u6587\u4ef6\u5939\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u8bb8\u591a\u6587\u4ef6\u5939\u548c .md \u6587\u4ef6 \u4fee\u6539\u5bf9\u5e94\u7684 .md \u6587\u4ef6 \u6267\u884c claat export xxxx.md \uff0c\u6210\u529f\u7684\u8bdd\u4f1a\u770b\u5230 ok ----- \u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u5939(\u5982\u679c\u5df2\u6709\u7684\u8bdd\u4f1a\u8986\u76d6) \u5237\u65b0 http://localhost:8000/ \u6ce8\u610f \u5982\u679c\u662f windows \u7cfb\u7edf\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528 Unix LF \u884c\u5c3e\u6765\u4fdd\u5b58\u6587\u4ef6\uff0c\u5426\u5219\u5728\u7f51\u9875\u4e0a\u4f1a\u6709\u5f88\u591a\u9519\u8bef \u6bcf\u6b21\u66f4\u65b0\u4e86 .md \u9700\u8981\u624b\u52a8\u8f93\u5165 claat export xxxx.md \u6587\u4ef6\uff0c\u76ee\u524d claat \u4f3c\u4e4e\u8fd8\u4e0d\u652f\u6301\u70ed\u66f4\u65b0 TAT \u63d0\u4ea4\u66f4\u6539 pr \u5230 -> gh-pages \u5206\u652f \u63d0\u4ea4 issue \u5982\u679c\u89c9\u5f97\u81ea\u5df1\u4fee\u6539\u6709\u70b9\u9ebb\u70e6\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5230 \u8fd9\u91cc \u63d0\u4ea4 issue \uff0c\u5c3d\u91cf\u63d0\u4f9b\u662f\u54ea\u4e9b\u9875\u9762/\u4ee3\u7801\u6709\u9519\u8bef","title":"\u4ee3\u7801\u5b9e\u9a8c\u5ba4"},{"location":"codelabs/#codelabs","text":"Fork Codelabs \u7684\u9879\u76ee","title":"\u5173\u4e8e\u5982\u4f55\u8d21\u732e Codelabs \u6216\u8005\u4fee\u6539\u9519\u8bef"},{"location":"codelabs/#_1","text":"Go Node.js \u548c npm Claat \uff0c\u63a8\u8350\u7528 go \u547d\u4ee4\u6765\u5b89\u88c5","title":"\u4f60\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u7684\u73af\u5883"},{"location":"codelabs/#_2","text":"\u5728\u9879\u76ee\u6839\u76ee\u5f55\u8fd0\u884c npm install \u8fd0\u884c gulp serve --codelabs-dir=codelabs \u5728 http://localhost:8000/ \u4e2d\u67e5\u770b\u7f51\u9875","title":"\u63a5\u4e0b\u6765"},{"location":"codelabs/#_3","text":"\u8fdb\u5165 codelabs \u6587\u4ef6\u5939\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u8bb8\u591a\u6587\u4ef6\u5939\u548c .md \u6587\u4ef6 \u4fee\u6539\u5bf9\u5e94\u7684 .md \u6587\u4ef6 \u6267\u884c claat export xxxx.md \uff0c\u6210\u529f\u7684\u8bdd\u4f1a\u770b\u5230 ok ----- \u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u5939(\u5982\u679c\u5df2\u6709\u7684\u8bdd\u4f1a\u8986\u76d6) \u5237\u65b0 http://localhost:8000/ \u6ce8\u610f \u5982\u679c\u662f windows \u7cfb\u7edf\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528 Unix LF \u884c\u5c3e\u6765\u4fdd\u5b58\u6587\u4ef6\uff0c\u5426\u5219\u5728\u7f51\u9875\u4e0a\u4f1a\u6709\u5f88\u591a\u9519\u8bef \u6bcf\u6b21\u66f4\u65b0\u4e86 .md \u9700\u8981\u624b\u52a8\u8f93\u5165 claat export xxxx.md \u6587\u4ef6\uff0c\u76ee\u524d claat \u4f3c\u4e4e\u8fd8\u4e0d\u652f\u6301\u70ed\u66f4\u65b0 TAT","title":"\u4fee\u6539"},{"location":"codelabs/#_4","text":"pr \u5230 -> gh-pages \u5206\u652f","title":"\u63d0\u4ea4\u66f4\u6539"},{"location":"codelabs/#issue","text":"\u5982\u679c\u89c9\u5f97\u81ea\u5df1\u4fee\u6539\u6709\u70b9\u9ebb\u70e6\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5230 \u8fd9\u91cc \u63d0\u4ea4 issue \uff0c\u5c3d\u91cf\u63d0\u4f9b\u662f\u54ea\u4e9b\u9875\u9762/\u4ee3\u7801\u6709\u9519\u8bef","title":"\u63d0\u4ea4 issue"},{"location":"contributing/","text":"Jetpack Compose \u5982\u679c\u4f60\u60f3\u4e3a Jetpack Compose \u505a\u8d21\u732e\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u5165 Kotlin \u7684 Slack \u9891\u9053 #Compose , \u6216\u8005\u5728 https://issuetracker.google.com/issues?q=componentid:612128 \u4e2d\u63d0\u4ea4 Compose \u7684 Bug \u6216\u8005\u9519\u8bef \u5173\u4e8e Codelabs \u672c\u9879\u76ee \u6211\u4eec\u975e\u5e38\u6b22\u8fce\u5404\u79cd\u7684 PR \u8bf7\u6c42\uff0c_(:\u0437)\u2220)_\u672c\u9879\u76ee\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u975e\u5e38\u9700\u8981\u5404\u4f4d\u5927\u4f6c\u7684\u5b8c\u5584\u548c\u7ea0\u9519 \u6587\u6863\u91c7\u7528 Material \u4e3b\u9898\u7684 MkDocs \u6765\u7f16\u8f91\uff0c\u975e\u5e38\u597d\u4e0a\u624b,\u4f60\u53ea\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5b89\u88c5\u63d2\u4ef6 pip3 install mkdocs-minify-plugin pip3 install mkdocs-git-revision-date-localized-plugin pip3 install mkdocs-minify-plugin pip3 install mkdocs-macros-plugin \u5728\u672c\u5730\u8fd0\u884c\u548c\u6d4b\u8bd5 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u7ec8\u7aef\u6267\u884c mkdocs serve \uff0c\u5c06\u4f1a\u5728 http://localhost:8000/ \u770b\u5230\u6587\u6863 \u5982\u4f55\u6dfb\u52a0/\u66f4\u6539\u6587\u6863\uff1f \u6587\u6863\u90fd\u662f\u7531 Markdown \u8bed\u6cd5\u6765\u7f16\u5199\u7684\uff0c\u6240\u6709\u6587\u6863\u4f4d\u4e8e /docs \u4e2d, \u5982\u679c\u9700\u8981\u6269\u5c55\u5de6\u8fb9\u7684\u5bfc\u822a\u4fa7\u680f\uff0c\u8bf7\u5728 mkdocs.yml \u66f4\u65b0 nav \u56fe\u7247\u6dfb\u52a0\u9700\u8981\u5728 /assets/ \u4e0b\uff0c\u548c\u6587\u6863\u540c\u7b49\u8def\u5f84\u540d\u5b57\u6dfb\u52a0\uff0c \u4f8b\u5982\u5982\u679c\u6211\u4fee\u6539\u4e86 Text \u7684\u6587\u6863\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u5f20\u4f8b\u56fe \u90a3\u4e48\u5c31\u662f\u653e\u5728 /assets/elements/text/xxx.png \u6700\u540e \u606d\u559c\u4f60\uff0c\u5f53\u4f60\u540c\u6b65\u4e86\u672c\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\u5e76\u4e14\u6dfb\u52a0\u4e86\u4f60\u6240\u60f3\u7684\u4e1c\u897f\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4ea4 PR \u5373\u53ef\uff0c\u6211\u4eec\u5728\u5ba1\u6838\u901a\u8fc7\u4f1a\u81ea\u52a8\u540c\u6b65\u5230\u7f51\u7ad9\u4e0a \u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 \u9996\u5148\uff0c\u60a8\u9700\u8981 fork \u4e00\u4efd\u672c\u9879\u76ee\uff0c\u7136\u540e\u540c\u6b65\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff08\u63a8\u8350\uff01\uff09 \u5728 github \u7f51\u9875\u4e2d\uff0c\u5728\u4f60\u7684 fork \u4ed3\u5e93\u91cc\uff0c\u70b9\u51fb Fetch upstream \u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c git pull origin main ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR \u7b2c\u4e8c\u79cd\u65b9\u6cd5 git remote add fork git@github.com:compose-museum/compose-tutorial.git (\u6216\u4f7f\u7528 HTTPS) git remote -v git fetch fork //\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 git merge fork/main //\u5408\u5e76\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u5173\u4e8e\u8d21\u732e"},{"location":"contributing/#jetpack-compose","text":"\u5982\u679c\u4f60\u60f3\u4e3a Jetpack Compose \u505a\u8d21\u732e\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u5165 Kotlin \u7684 Slack \u9891\u9053 #Compose , \u6216\u8005\u5728 https://issuetracker.google.com/issues?q=componentid:612128 \u4e2d\u63d0\u4ea4 Compose \u7684 Bug \u6216\u8005\u9519\u8bef","title":"Jetpack Compose"},{"location":"contributing/#codelabs","text":"","title":"\u5173\u4e8e Codelabs"},{"location":"contributing/#_1","text":"\u6211\u4eec\u975e\u5e38\u6b22\u8fce\u5404\u79cd\u7684 PR \u8bf7\u6c42\uff0c_(:\u0437)\u2220)_\u672c\u9879\u76ee\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u975e\u5e38\u9700\u8981\u5404\u4f4d\u5927\u4f6c\u7684\u5b8c\u5584\u548c\u7ea0\u9519 \u6587\u6863\u91c7\u7528 Material \u4e3b\u9898\u7684 MkDocs \u6765\u7f16\u8f91\uff0c\u975e\u5e38\u597d\u4e0a\u624b,\u4f60\u53ea\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5b89\u88c5\u63d2\u4ef6 pip3 install mkdocs-minify-plugin pip3 install mkdocs-git-revision-date-localized-plugin pip3 install mkdocs-minify-plugin pip3 install mkdocs-macros-plugin \u5728\u672c\u5730\u8fd0\u884c\u548c\u6d4b\u8bd5 \u5728\u9879\u76ee\u6839\u76ee\u5f55\u7ec8\u7aef\u6267\u884c mkdocs serve \uff0c\u5c06\u4f1a\u5728 http://localhost:8000/ \u770b\u5230\u6587\u6863 \u5982\u4f55\u6dfb\u52a0/\u66f4\u6539\u6587\u6863\uff1f \u6587\u6863\u90fd\u662f\u7531 Markdown \u8bed\u6cd5\u6765\u7f16\u5199\u7684\uff0c\u6240\u6709\u6587\u6863\u4f4d\u4e8e /docs \u4e2d, \u5982\u679c\u9700\u8981\u6269\u5c55\u5de6\u8fb9\u7684\u5bfc\u822a\u4fa7\u680f\uff0c\u8bf7\u5728 mkdocs.yml \u66f4\u65b0 nav \u56fe\u7247\u6dfb\u52a0\u9700\u8981\u5728 /assets/ \u4e0b\uff0c\u548c\u6587\u6863\u540c\u7b49\u8def\u5f84\u540d\u5b57\u6dfb\u52a0\uff0c \u4f8b\u5982\u5982\u679c\u6211\u4fee\u6539\u4e86 Text \u7684\u6587\u6863\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u5f20\u4f8b\u56fe \u90a3\u4e48\u5c31\u662f\u653e\u5728 /assets/elements/text/xxx.png \u6700\u540e \u606d\u559c\u4f60\uff0c\u5f53\u4f60\u540c\u6b65\u4e86\u672c\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\u5e76\u4e14\u6dfb\u52a0\u4e86\u4f60\u6240\u60f3\u7684\u4e1c\u897f\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4ea4 PR \u5373\u53ef\uff0c\u6211\u4eec\u5728\u5ba1\u6838\u901a\u8fc7\u4f1a\u81ea\u52a8\u540c\u6b65\u5230\u7f51\u7ad9\u4e0a","title":"\u672c\u9879\u76ee"},{"location":"contributing/#_2","text":"\u9996\u5148\uff0c\u60a8\u9700\u8981 fork \u4e00\u4efd\u672c\u9879\u76ee\uff0c\u7136\u540e\u540c\u6b65\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5ea6\uff1a","title":"\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6"},{"location":"contributing/#_3","text":"\u5728 github \u7f51\u9875\u4e2d\uff0c\u5728\u4f60\u7684 fork \u4ed3\u5e93\u91cc\uff0c\u70b9\u51fb Fetch upstream \u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u6267\u884c git pull origin main ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff08\u63a8\u8350\uff01\uff09"},{"location":"contributing/#_4","text":"git remote add fork git@github.com:compose-museum/compose-tutorial.git (\u6216\u4f7f\u7528 HTTPS) git remote -v git fetch fork //\u540c\u6b65\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 git merge fork/main //\u5408\u5e76\u9879\u76ee\u6700\u65b0\u8fdb\u5ea6 ... // \u5199\u65b0\u5185\u5bb9 git push // push \u5230\u81ea\u5df1\u7684\u5206\u652f pr // \u5728\u7f51\u9875\u4e0a\u63d0\u4ea4 PR","title":"\u7b2c\u4e8c\u79cd\u65b9\u6cd5"},{"location":"pay/","text":"\u5982\u679c\u89c9\u5f97\u8fd9\u4e2a\u9879\u76ee\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u8bdd\u6216\u8005\u89c9\u5f97\u4f5c\u8005\u5f88\u8f9b\u82e6\u7684\u8bdd\u6b22\u8fce\u6295\u5582\uff0c \u0311\u0311\u0e05( \u02c3\u0336\u02d9\u03c9\u02d9\u02c2\u0336 \u0e05) \u200b\u200b\u200b \u6211\u4f1a\u5c06\u5404\u4f4d\u5927\u4f6c\u7684\u6350\u8d60\u8bb0\u5f55\u5199\u5728\u5e95\u4e0b \u0e05( \u02c3\u0336\u02d9\u03c9\u02d9\u02c2\u0336 \u0e05) \u200b\u200b\u200b \u8bb0\u5f97\u5199\u540d\u5b57\u5440\u5440\u5440\uff01\uff01\u4e0d\u60f3\u5199\u7684\u8bdd\u4e5f\u6ca1\u5173\u7cfb\uff0c\u6211\u4f1a\u533f\u540d\u5907\u6ce8\u54d2\uff01 \u540d\u5b57 \u91d1\u989d \u5907\u6ce8 Icyrockton 38.00 sasaju 38.00 \u533f\u540d 8.88 \u52a0\u4e2a\u9e21\u817f","title":"\u5173\u4e8e\u6295\u5582"},{"location":"resources/","text":"\u4e00\u4e9b\u5bf9 Compose \u9879\u76ee\u5f00\u53d1\u6709\u5e2e\u52a9\u7684\u8d44\u6e90 \u5e93 \u9879\u76ee\u540d \u4ecb\u7ecd Ucrop \u53ef\u4ee5\u5b8c\u6210\u56fe\u7247\u7684\u88c1\u526a\uff0c\u5bf9\u7528\u6237\u7684\u56fe\u7247\u4e0a\u4f20\u529f\u80fd\u6709\u5e2e\u52a9(\u5df2\u77e5 Bilibili \u5728\u7528) Material Design \u5b89\u5353\u5e94\u7528\u7684\u8bbe\u8ba1\u6807\u51c6\uff0c\u5185\u6db5\u4e30\u5bcc\u7684\u56fe\u6807\u6309\u94ae\u8d44\u6e90 Intent \u5b89\u5353\u5e94\u7528\u7684\u5206\u4eab\u529f\u80fd Material Dialog \u542b\u6709\u989c\u8272\u3001\u65f6\u95f4\u9009\u62e9\u5bf9\u8bdd\u6846\u7b49\u7b49 accompanist \u4e00\u4e9b\u8fd8\u6ca1\u6b63\u5f0f\u5e94\u7528\u5728 Compose \u4e2d\u7684\u4e00\u4e9b\u975e\u5e38\u597d\u7528\u7684\u5e93 Material Motion for Jetpack Compose \u4e00\u4e9b\u7528\u4e8e Compose \u5f88\u4e0d\u9519\u7684\u8fc7\u6e21\u52a8\u753b","title":"\u8d44\u6e90"},{"location":"resources/#compose","text":"","title":"\u4e00\u4e9b\u5bf9 Compose \u9879\u76ee\u5f00\u53d1\u6709\u5e2e\u52a9\u7684\u8d44\u6e90"},{"location":"resources/#_1","text":"\u9879\u76ee\u540d \u4ecb\u7ecd Ucrop \u53ef\u4ee5\u5b8c\u6210\u56fe\u7247\u7684\u88c1\u526a\uff0c\u5bf9\u7528\u6237\u7684\u56fe\u7247\u4e0a\u4f20\u529f\u80fd\u6709\u5e2e\u52a9(\u5df2\u77e5 Bilibili \u5728\u7528) Material Design \u5b89\u5353\u5e94\u7528\u7684\u8bbe\u8ba1\u6807\u51c6\uff0c\u5185\u6db5\u4e30\u5bcc\u7684\u56fe\u6807\u6309\u94ae\u8d44\u6e90 Intent \u5b89\u5353\u5e94\u7528\u7684\u5206\u4eab\u529f\u80fd Material Dialog \u542b\u6709\u989c\u8272\u3001\u65f6\u95f4\u9009\u62e9\u5bf9\u8bdd\u6846\u7b49\u7b49 accompanist \u4e00\u4e9b\u8fd8\u6ca1\u6b63\u5f0f\u5e94\u7528\u5728 Compose \u4e2d\u7684\u4e00\u4e9b\u975e\u5e38\u597d\u7528\u7684\u5e93 Material Motion for Jetpack Compose \u4e00\u4e9b\u7528\u4e8e Compose \u5f88\u4e0d\u9519\u7684\u8fc7\u6e21\u52a8\u753b","title":"\u5e93"},{"location":"start/","text":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u7531\u4e8e\u5939\u85cf\u79c1\u8d27\uff0c\u4e0d\u59a8\u5148\u6765\u542c\u4e00\u9996\u4f5c\u8005\u63a8\u8350\u7684\u4e00\u9996\u6b4c\u5427\uff01 \u5728\u5f00\u59cb\u7528 Jetpack Compose \u6765\u7f16\u5199\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u9700\u8981 1. \u4e00\u53f0\u53ef\u4ee5 \u8054\u7f51 \u7684\u7535\u8111 2. \u5b89\u88c5 \u6700\u65b0 Canary \u7248\u7684 Android Studio \u9884\u89c8\u7248 3. \u9009\u62e9\u521b\u5efa Empty Compose Activity 4. \u4fdd\u6301\u7248\u672c\u66f4\u65b0 \u5c1d\u8bd5\u4f7f\u7528\u6700\u65b0\u7684 Compose \u7248\u672c\u548c Kotlin \u7248\u672c build.gralde.kts (Project) buildscript { val compose_version by extra ( \"1.0.0-beta06\" ) // Compose \u7248\u672c repositories { google () mavenCentral () } dependencies { classpath ( \"com.android.tools.build:gradle:7.0.0-alpha12\" ) // Kotlin \u7248\u672c\uff0c\u6ce8\u610f\uff1aCompose \u7248\u672c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42 Kotlin \u5230\u8fbe\u4e00\u5b9a\u7684\u7248\u672c\uff0c\u8bf7\u540c\u6b65\u66f4\u65b0 classpath ( \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.32\" ) // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle.kts files } } build.gradle (Project) buildscript { ext { compose_version = '1.0.0-beta06' } repositories { google() mavenCentral() } dependencies { classpath \"com.android.tools.build:gradle:7.0.0-alpha12\" classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.32\" // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files } } 5. \u914d\u7f6e Gradle\uff08\u53ef\u5ffd\u7565\uff09 \u60a8\u9700\u8981\u5c06\u5e94\u7528\u7684\u6700\u4f4e API \u7ea7\u522b\u8bbe\u7f6e\u4e3a 21 \u6216\u66f4\u9ad8\u7ea7\u522b\uff0c\u5e76\u5728\u5e94\u7528\u7684 build.gradle \u6587\u4ef6\u4e2d\u542f\u7528 Jetpack Compose\uff0c\u5982\u4e0b\u6240\u793a\u3002\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e Kotlin \u7f16\u8bd1\u5668\u63d2\u4ef6\u7684\u7248\u672c\u3002 build.gradle android { compileSdk 30 buildToolsVersion \"30.0.3\" defaultConfig { applicationId \"your id\" minSdk 23 targetSdk 30 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } kotlinOptions { jvmTarget = '1.8' useIR = true } buildFeatures { compose true } composeOptions { kotlinCompilerExtensionVersion compose_version kotlinCompilerVersion '1.4.32' } } 6. \u7f16\u5199\u7b2c\u4e00\u4e2a Compose \u7a0b\u5e8f \u73b0\u5728\uff0c\u5982\u679c\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c MainActivity.kt \u4e0a\u663e\u793a\u4ee5\u4e0b\u4ee3\u7801 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { // \u6ce8\u610f\uff1a\u8fd9\u91cc\u4f1a\u6839\u636e\u4f60\u521b\u5efa\u7684\u9879\u76ee\u540d\u800c\u4e0d\u540c // A surface container using the 'background' color from the theme Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } @Composable fun Greeting ( name : String ) { Text ( text = \"Hello $ name !\" ) } @Preview ( showBackground = true ) @Composable fun DefaultPreview () { MyApplicationTheme { Greeting ( \"Android\" ) } } \u73b0\u5728\uff0c\u6211\u4eec\u5c06 MainActivity.kt \u4fee\u6539\u6210\u4ee5\u4e0b\uff1a class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { Greeting () } } } } @Composable fun Greeting () { Text ( text = \"Hello World\" ) } \u5c1d\u8bd5\u8fd0\u884c\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 Hello World \u663e\u793a\u5728\u60a8\u7684 \u865a\u62df\u673a/\u624b\u673a \u4e0a 7. \u5173\u4e8e Composable \u4e00\u4e2a\u57fa\u672c\u7684 Compose \u89c6\u56fe\u662f\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u7684 Kotlin \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u6ce8\u89e3\u4e3a @Composable \uff0c \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Compose \u5f53\u4e2d\u7684\u4e1c\u897f\u65f6\uff0c\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a @Composable","title":"\u5728\u5f00\u59cb\u4e4b\u524d"},{"location":"start/#_1","text":"\u5728\u5f00\u59cb\u7528 Jetpack Compose \u6765\u7f16\u5199\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u9700\u8981","title":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u7531\u4e8e\u5939\u85cf\u79c1\u8d27\uff0c\u4e0d\u59a8\u5148\u6765\u542c\u4e00\u9996\u4f5c\u8005\u63a8\u8350\u7684\u4e00\u9996\u6b4c\u5427\uff01"},{"location":"start/#1","text":"","title":"1. \u4e00\u53f0\u53ef\u4ee5 \u8054\u7f51 \u7684\u7535\u8111"},{"location":"start/#2-canary-android-studio","text":"","title":"2. \u5b89\u88c5 \u6700\u65b0 Canary \u7248\u7684 Android Studio \u9884\u89c8\u7248"},{"location":"start/#3-empty-compose-activity","text":"","title":"3. \u9009\u62e9\u521b\u5efa Empty Compose Activity"},{"location":"start/#4","text":"\u5c1d\u8bd5\u4f7f\u7528\u6700\u65b0\u7684 Compose \u7248\u672c\u548c Kotlin \u7248\u672c build.gralde.kts (Project) buildscript { val compose_version by extra ( \"1.0.0-beta06\" ) // Compose \u7248\u672c repositories { google () mavenCentral () } dependencies { classpath ( \"com.android.tools.build:gradle:7.0.0-alpha12\" ) // Kotlin \u7248\u672c\uff0c\u6ce8\u610f\uff1aCompose \u7248\u672c\u6709\u65f6\u5019\u9700\u8981\u8981\u6c42 Kotlin \u5230\u8fbe\u4e00\u5b9a\u7684\u7248\u672c\uff0c\u8bf7\u540c\u6b65\u66f4\u65b0 classpath ( \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.32\" ) // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle.kts files } } build.gradle (Project) buildscript { ext { compose_version = '1.0.0-beta06' } repositories { google() mavenCentral() } dependencies { classpath \"com.android.tools.build:gradle:7.0.0-alpha12\" classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.32\" // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files } }","title":"4. \u4fdd\u6301\u7248\u672c\u66f4\u65b0"},{"location":"start/#5-gradle","text":"\u60a8\u9700\u8981\u5c06\u5e94\u7528\u7684\u6700\u4f4e API \u7ea7\u522b\u8bbe\u7f6e\u4e3a 21 \u6216\u66f4\u9ad8\u7ea7\u522b\uff0c\u5e76\u5728\u5e94\u7528\u7684 build.gradle \u6587\u4ef6\u4e2d\u542f\u7528 Jetpack Compose\uff0c\u5982\u4e0b\u6240\u793a\u3002\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e Kotlin \u7f16\u8bd1\u5668\u63d2\u4ef6\u7684\u7248\u672c\u3002 build.gradle android { compileSdk 30 buildToolsVersion \"30.0.3\" defaultConfig { applicationId \"your id\" minSdk 23 targetSdk 30 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\" } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' } } compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } kotlinOptions { jvmTarget = '1.8' useIR = true } buildFeatures { compose true } composeOptions { kotlinCompilerExtensionVersion compose_version kotlinCompilerVersion '1.4.32' } }","title":"5. \u914d\u7f6e Gradle\uff08\u53ef\u5ffd\u7565\uff09"},{"location":"start/#6-compose","text":"\u73b0\u5728\uff0c\u5982\u679c\u4e00\u5207\u90fd\u6b63\u5e38\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c MainActivity.kt \u4e0a\u663e\u793a\u4ee5\u4e0b\u4ee3\u7801 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { // \u6ce8\u610f\uff1a\u8fd9\u91cc\u4f1a\u6839\u636e\u4f60\u521b\u5efa\u7684\u9879\u76ee\u540d\u800c\u4e0d\u540c // A surface container using the 'background' color from the theme Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } @Composable fun Greeting ( name : String ) { Text ( text = \"Hello $ name !\" ) } @Preview ( showBackground = true ) @Composable fun DefaultPreview () { MyApplicationTheme { Greeting ( \"Android\" ) } } \u73b0\u5728\uff0c\u6211\u4eec\u5c06 MainActivity.kt \u4fee\u6539\u6210\u4ee5\u4e0b\uff1a class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { MyApplicationTheme { Greeting () } } } } @Composable fun Greeting () { Text ( text = \"Hello World\" ) } \u5c1d\u8bd5\u8fd0\u884c\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 Hello World \u663e\u793a\u5728\u60a8\u7684 \u865a\u62df\u673a/\u624b\u673a \u4e0a","title":"6. \u7f16\u5199\u7b2c\u4e00\u4e2a Compose \u7a0b\u5e8f"},{"location":"start/#7-composable","text":"\u4e00\u4e2a\u57fa\u672c\u7684 Compose \u89c6\u56fe\u662f\u4f7f\u7528\u4e00\u4e2a\u666e\u901a\u7684 Kotlin \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u6ce8\u89e3\u4e3a @Composable \uff0c \u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Compose \u5f53\u4e2d\u7684\u4e1c\u897f\u65f6\uff0c\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a @Composable","title":"7. \u5173\u4e8e Composable"},{"location":"animation/animationvisibility/","text":"1. \u57fa\u7840\u7528\u6cd5 var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } } 2. \u8fdb\u573a\u52a8\u753b \u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5 AnimatedVisibility \u4e2d\u7684 Enter \u53c2\u6570\u7684\u7b80\u5355\u4f7f\u7528\u5427\uff01 var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } enter : EnterTransition = fadeIn () + expandVertically () sealed class EnterTransition EnterTransition \u5b9a\u4e49\u4e86\u5f53\u4e00\u4e2a AnimatedVisibility Composable \u53d8\u5f97\u53ef\u89c1\u65f6\uff0c\u5b83\u662f\u5982\u4f55\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684 \u73b0\u53ef\u7528\u7684 3 \u79cd EnterTransition \u7684\u7c7b\u522b\u5206\u522b\u662f\uff1a fade fadeIn slide\uff1a slideIn , slideInHorizontally , slideInVertically expand\uff1a expandIn , expandHorizontally , expandVertically \u5e76\u4e14\uff0c\u5b83\u4eec\u4e4b\u95f4\u80fd\u591f\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) + fadeIn ( animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } \u6ce8\u610f fadeIn \u548c slideIn \u4e0d\u5f71\u54cd AnimatedVisibility Composable \u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c expandIn \u5c06\u6269\u5927\u526a\u8f91\u8303\u56f4\u4ee5\u663e\u793a\u6574\u4e2a\u5185\u5bb9\u3002\u8fd9\u5c06\u81ea\u52a8\u5730\u5c06\u5176\u4ed6\u7684\u5e03\u5c40\u52a8\u753b\u5316\uff0c\u975e\u5e38\u50cf Modifier.animateContentSize 3. \u66f4\u591a AnimatedVisibility \u53c2\u6570\u8be6\u60c5","title":"AnimationVisibility"},{"location":"animation/animationvisibility/#1","text":"var state by remember { mutableStateOf ( true )} Column ( modifier = Modifier . fillMaxSize (), horizontalAlignment = Alignment . CenterHorizontally , verticalArrangement = Arrangement . Center ){ AnimatedVisibility ( visible = state ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } Spacer ( Modifier . padding ( vertical = 50. dp )) Button ( onClick = { state = ! state }) { Text ( if ( state ) \"\u9690\u85cf\" else \"\u663e\u793a\" ) } }","title":"1. \u57fa\u7840\u7528\u6cd5"},{"location":"animation/animationvisibility/#2","text":"\u8ba9\u6211\u4eec\u6765\u8bd5\u8bd5 AnimatedVisibility \u4e2d\u7684 Enter \u53c2\u6570\u7684\u7b80\u5355\u4f7f\u7528\u5427\uff01 var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } enter : EnterTransition = fadeIn () + expandVertically () sealed class EnterTransition EnterTransition \u5b9a\u4e49\u4e86\u5f53\u4e00\u4e2a AnimatedVisibility Composable \u53d8\u5f97\u53ef\u89c1\u65f6\uff0c\u5b83\u662f\u5982\u4f55\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684 \u73b0\u53ef\u7528\u7684 3 \u79cd EnterTransition \u7684\u7c7b\u522b\u5206\u522b\u662f\uff1a fade fadeIn slide\uff1a slideIn , slideInHorizontally , slideInVertically expand\uff1a expandIn , expandHorizontally , expandVertically \u5e76\u4e14\uff0c\u5b83\u4eec\u4e4b\u95f4\u80fd\u591f\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a var state by remember { mutableStateOf ( true )} AnimatedVisibility ( visible = state , enter = slideInVertically ( initialOffsetY = { - 1000 }, animationSpec = tween ( durationMillis = 1200 ) ) + fadeIn ( animationSpec = tween ( durationMillis = 1200 ) ) ) { Text ( text = \"\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6b63\u6587\" , fontWeight = FontWeight . W900 , style = MaterialTheme . typography . h5 ) } \u6ce8\u610f fadeIn \u548c slideIn \u4e0d\u5f71\u54cd AnimatedVisibility Composable \u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c expandIn \u5c06\u6269\u5927\u526a\u8f91\u8303\u56f4\u4ee5\u663e\u793a\u6574\u4e2a\u5185\u5bb9\u3002\u8fd9\u5c06\u81ea\u52a8\u5730\u5c06\u5176\u4ed6\u7684\u5e03\u5c40\u52a8\u753b\u5316\uff0c\u975e\u5e38\u50cf Modifier.animateContentSize","title":"2. \u8fdb\u573a\u52a8\u753b"},{"location":"animation/animationvisibility/#3","text":"AnimatedVisibility \u53c2\u6570\u8be6\u60c5","title":"3. \u66f4\u591a"},{"location":"animation/overview/","text":"Jetpack Compose \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u3001\u53ef\u6269\u5c55\u7684 API\uff0c\u4f7f\u5f97\u5728\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u4e0a\u5b9e\u73b0\u5404\u79cd\u52a8\u753b\u53d8\u5f97\u5bb9\u6613\u3002\u672c\u6587\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b API\uff0c\u4ee5\u53ca\u6839\u636e\u4f60\u7684\u52a8\u753b\u573a\u666f\u4f7f\u7528\u54ea\u4e2a API\u3002 1. \u6982\u8ff0 \u4e3a\u4e86\u5b9e\u73b0\u6d41\u7545\u548c\u53ef\u7406\u89e3\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u52a8\u753b\u5728\u73b0\u4ee3\u79fb\u52a8\u5e94\u7528\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8bb8\u591a Jetpack Compose \u52a8\u753b API \u5c31\u50cf\u5e03\u5c40\u548c\u5176\u4ed6 UI \u5143\u7d20\u4e00\u6837\uff0c\u53ef\u4ee5\u4f5c\u4e3a Composable \u51fd\u6570\uff0c\u5b83\u4eec\u7531\u7528 Kotlin coroutine suspend \u51fd\u6570\u6784\u5efa\u7684\u4f4e\u7ea7API \u652f\u6301\u3002\u672c\u6307\u5357\u4ece\u5728\u8bb8\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u5f88\u6709\u7528\u7684\u9ad8\u7ea7 API \u5f00\u59cb\uff0c\u63a5\u7740\u89e3\u91ca\u7ed9\u4f60\u8fdb\u4e00\u6b65\u63a7\u5236\u548c\u5b9a\u5236\u7684\u4f4e\u7ea7 API\u3002 \u4e0b\u9762\u8fd9\u4e2a\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u4f60\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48 API \u6765\u5b9e\u73b0\u4f60\u7684\u52a8\u753b\u3002 API \u529f\u80fd AnimationVisibility \u8fdb\u5165/\u9000\u51fa\u7684\u8fc7\u6e21\u52a8\u753b Modifier.contentSize \u5185\u5bb9\u5927\u5c0f\u7684\u53d8\u5316\u8fc7\u6e21\u52a8\u753b Crossfade \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 rememberInfiniteTransition \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 updateTransition \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 animate*AsState \u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u53d8\u5316\u52a8\u753b","title":"\u6982\u8ff0"},{"location":"animation/overview/#1","text":"\u4e3a\u4e86\u5b9e\u73b0\u6d41\u7545\u548c\u53ef\u7406\u89e3\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u52a8\u753b\u5728\u73b0\u4ee3\u79fb\u52a8\u5e94\u7528\u4e2d\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u8bb8\u591a Jetpack Compose \u52a8\u753b API \u5c31\u50cf\u5e03\u5c40\u548c\u5176\u4ed6 UI \u5143\u7d20\u4e00\u6837\uff0c\u53ef\u4ee5\u4f5c\u4e3a Composable \u51fd\u6570\uff0c\u5b83\u4eec\u7531\u7528 Kotlin coroutine suspend \u51fd\u6570\u6784\u5efa\u7684\u4f4e\u7ea7API \u652f\u6301\u3002\u672c\u6307\u5357\u4ece\u5728\u8bb8\u591a\u5b9e\u9645\u573a\u666f\u4e2d\u5f88\u6709\u7528\u7684\u9ad8\u7ea7 API \u5f00\u59cb\uff0c\u63a5\u7740\u89e3\u91ca\u7ed9\u4f60\u8fdb\u4e00\u6b65\u63a7\u5236\u548c\u5b9a\u5236\u7684\u4f4e\u7ea7 API\u3002 \u4e0b\u9762\u8fd9\u4e2a\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u4f60\u51b3\u5b9a\u4f7f\u7528\u4ec0\u4e48 API \u6765\u5b9e\u73b0\u4f60\u7684\u52a8\u753b\u3002 API \u529f\u80fd AnimationVisibility \u8fdb\u5165/\u9000\u51fa\u7684\u8fc7\u6e21\u52a8\u753b Modifier.contentSize \u5185\u5bb9\u5927\u5c0f\u7684\u53d8\u5316\u8fc7\u6e21\u52a8\u753b Crossfade \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 rememberInfiniteTransition \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 updateTransition \u6682\u65f6\u8fd8\u6ca1\u63a2\u7d22 animate*AsState \u6307\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u53d8\u5316\u52a8\u753b","title":"1. \u6982\u8ff0"},{"location":"api/elements/text/","text":"1. Text @Composable fun Text ( text : String , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u663e\u793a\u6587\u672c\u5e76\u63d0\u4f9b\u8bed\u4e49/\u53ef\u8bfb\u6027\u4fe1\u606f\u7684\u9ad8\u7ea7\u5143\u7d20\u3002 \u9ed8\u8ba4\u6837\u5f0f\u4f7f\u7528 MaterialTheme /\u7ec4\u4ef6\u63d0\u4f9b\u7684 LocalTextStyle \u3002\u5982\u679c\u4f60\u8981\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u4f60\u53ef\u80fd\u8981\u8003\u8651\u9996\u5148\u68c0\u7d22 LocalTextStyle \uff0c\u5e76\u4f7f\u7528 TextStyle.copy \u6765\u4fdd\u7559\u4efb\u4f55\u4e3b\u9898\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u53ea\u4fee\u6539\u4f60\u8981\u8986\u76d6\u7684\u7279\u5b9a\u5c5e\u6027\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\uff0c TextStyle \u7684\u5e38\u7528\u53c2\u6570\u4e5f\u5728\u8fd9\u91cc\u51fa\u73b0\uff0c\u4f18\u5148\u987a\u5e8f\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u88ab\u660e\u786e\u5730\u8bbe\u7f6e\u5728\u8fd9\u91cc\uff08\u5373\u5b83\u4e0d\u662f null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u5c06\u603b\u662f\u88ab\u4f7f\u7528\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u8bbe\u7f6e\uff0c\uff08 null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48 style \u4e2d\u7684\u76f8\u5e94\u503c\u5c06\u88ab\u66ff\u4ee3\u4f7f\u7528\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u989c\u8272\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u5e76\u4e14 style \u6ca1\u6709\u989c\u8272\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528 LocalContentColor \u548c LocalContentAlpha \u7684 alpha --\u8fd9\u5141\u8bb8\u8fd9\u4e2a\u6587\u672c\u6216\u5305\u542b\u8fd9\u4e2a\u6587\u672c\u7684\u5143\u7d20\u9002\u5e94\u4e0d\u540c\u7684\u80cc\u666f\u989c\u8272\uff0c\u4ecd\u7136\u4fdd\u6301\u5bf9\u6bd4\u5ea6\u548c\u548c\u53ef\u8bfb\u6027\u3002 \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 | onTextLayout: (TextLayoutResult) -> Unit = {} | \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 | | style: TextStyle = LocalTextStyle.current | \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49 | 2. Text @Composable fun Text ( text : AnnotatedString , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , inlineContent : Map < String , InlineTextContent > = mapOf (), onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 inlineContent: Map < String , InlineTextContent > = mapOf() \u4e00\u4e2a Map \u5b58\u50a8 Composables\uff0c\u53d6\u4ee3\u4e86\u6587\u672c\u7684\u67d0\u4e9b\u8303\u56f4\u3002\u5b83\u7528\u4e8e\u5728\u6587\u672c\u5e03\u5c40\u4e2d\u63d2\u5165 Composables\u3002\u67e5\u770b InlineTextContent \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49","title":"Text"},{"location":"api/elements/text/#1-text","text":"@Composable fun Text ( text : String , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u663e\u793a\u6587\u672c\u5e76\u63d0\u4f9b\u8bed\u4e49/\u53ef\u8bfb\u6027\u4fe1\u606f\u7684\u9ad8\u7ea7\u5143\u7d20\u3002 \u9ed8\u8ba4\u6837\u5f0f\u4f7f\u7528 MaterialTheme /\u7ec4\u4ef6\u63d0\u4f9b\u7684 LocalTextStyle \u3002\u5982\u679c\u4f60\u8981\u8bbe\u7f6e\u4f60\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u4f60\u53ef\u80fd\u8981\u8003\u8651\u9996\u5148\u68c0\u7d22 LocalTextStyle \uff0c\u5e76\u4f7f\u7528 TextStyle.copy \u6765\u4fdd\u7559\u4efb\u4f55\u4e3b\u9898\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u53ea\u4fee\u6539\u4f60\u8981\u8986\u76d6\u7684\u7279\u5b9a\u5c5e\u6027\u3002 \u4e3a\u4e86\u4fbf\u4e8e\u4f7f\u7528\uff0c TextStyle \u7684\u5e38\u7528\u53c2\u6570\u4e5f\u5728\u8fd9\u91cc\u51fa\u73b0\uff0c\u4f18\u5148\u987a\u5e8f\u5982\u4e0b\uff1a \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u88ab\u660e\u786e\u5730\u8bbe\u7f6e\u5728\u8fd9\u91cc\uff08\u5373\u5b83\u4e0d\u662f null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u5c06\u603b\u662f\u88ab\u4f7f\u7528\u3002 \u5982\u679c\u4e00\u4e2a\u53c2\u6570\u6ca1\u6709\u88ab\u8bbe\u7f6e\uff0c\uff08 null \u6216 TextUnit.Unspecified \uff09\uff0c\u90a3\u4e48 style \u4e2d\u7684\u76f8\u5e94\u503c\u5c06\u88ab\u66ff\u4ee3\u4f7f\u7528\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u989c\u8272\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u5e76\u4e14 style \u6ca1\u6709\u989c\u8272\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528 LocalContentColor \u548c LocalContentAlpha \u7684 alpha --\u8fd9\u5141\u8bb8\u8fd9\u4e2a\u6587\u672c\u6216\u5305\u542b\u8fd9\u4e2a\u6587\u672c\u7684\u5143\u7d20\u9002\u5e94\u4e0d\u540c\u7684\u80cc\u666f\u989c\u8272\uff0c\u4ecd\u7136\u4fdd\u6301\u5bf9\u6bd4\u5ea6\u548c\u548c\u53ef\u8bfb\u6027\u3002 \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 | onTextLayout: (TextLayoutResult) -> Unit = {} | \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 | | style: TextStyle = LocalTextStyle.current | \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49 |","title":"1. Text"},{"location":"api/elements/text/#2-text","text":"@Composable fun Text ( text : AnnotatedString , modifier : Modifier = Modifier , color : Color = Color . Unspecified , fontSize : TextUnit = TextUnit . Unspecified , fontStyle : FontStyle? = null , fontWeight : FontWeight? = null , fontFamily : FontFamily? = null , letterSpacing : TextUnit = TextUnit . Unspecified , textDecoration : TextDecoration? = null , textAlign : TextAlign? = null , lineHeight : TextUnit = TextUnit . Unspecified , overflow : TextOverflow = TextOverflow . Clip , softWrap : Boolean = true , maxLines : Int = Int . MAX_VALUE , inlineContent : Map < String , InlineTextContent > = mapOf (), onTextLayout : ( TextLayoutResult ) -> Unit = {}, style : TextStyle = LocalTextStyle . current ): @Composable Unit \u53c2\u6570 text: AnnotatedString \u8981\u663e\u793a\u7684\u6587\u672c modifier: Modifier = Modifier \u5e94\u7528\u4e8e\u8be5\u5e03\u5c40\u8282\u70b9\u7684 Modifier color: Color = Color.Unspecified \u5e94\u7528\u4e8e\u6587\u672c\u7684\u989c\u8272\u3002\u5982\u679c\u662f Color.Unspecified \uff0c\u5e76\u4e14 style \u6ca1\u6709\u8bbe\u7f6e\u989c\u8272\uff0c\u90a3\u4e48\u5c31\u662f LocalContentColor fontSize: TextUnit = TextUnit.Unspecified \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u5f62\u5927\u5c0f\u3002\u53c2\u89c1 TextStyle.fontSize fontStyle: FontStyle? = null \u7ed8\u5236\u5b57\u6bcd\u65f6\u4f7f\u7528\u7684\u5b57\u4f53\u53d8\u4f53\uff08\u4f8b\u5982\uff0c\u659c\u4f53\uff09\u3002\u53c2\u89c1 TextStyle.fontStyle fontWeight: FontWeight? = null \u7ed8\u5236\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684\u5b57\u4f53\u539a\u5ea6\uff08\u4f8b\u5982\uff0c FontWeight.Bold \uff09 fontFamily: FontFamily? = null \u6e32\u67d3\u6587\u672c\u65f6\u8981\u4f7f\u7528\u7684 font.family \u3002\u53c2\u89c1 TextStyle.fontFamily letterSpacing: TextUnit = TextUnit.Unspecified \u6bcf\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u8981\u589e\u52a0\u7684\u7a7a\u95f4\u3002\u53c2\u89c1 TextStyle.letterSpacing textDecoration: TextDecoration? = null \u5728\u6587\u672c\u4e0a\u7684\u88c5\u9970\uff08\u4f8b\u5982\uff0c\u4e0b\u5212\u7ebf\uff09\u3002\u53c2\u89c1 TextStyle.textDecoration textAlign: TextAlign? = null \u6bb5\u843d\u5185\u5404\u884c\u6587\u5b57\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002\u53c2\u89c1 TextStyle.textAlign lineHeight: TextUnit = TextUnit.Unspecified \u6bb5\u843d\u7684\u884c\u9ad8\uff0c\u4ee5 TextUnit \u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982 SP \u6216 EM \u3002\u53c2\u89c1 TxtStyle.lineHeight overflow: TextOverflow = TextOverflow.Clip \u5904\u7406\u89c6\u89c9\u6ea2\u51fa\u7684\u95ee\u9898 softWrap: Boolean = true \u6587\u672c\u662f\u5426\u5e94\u5728\u8f6f\u6362\u884c\u65f6\u65ad\u5f00\u3002\u5982\u679c\u662f false \uff0c\u6587\u672c\u4e2d\u7684\u5b57\u5f62\u5c06\u88ab\u5b9a\u4f4d\uff0c\u5c31\u50cf\u6709\u65e0\u9650\u7684\u6c34\u5e73\u7a7a\u95f4\u4e00\u6837\u3002\u5982\u679c softWrap \u4e3a false \uff0c overflow \u548c TextAlign \u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u7684\u6548\u679c maxLines: Int = Int.MAX_VALUE \u53ef\u9009\u7684\u6587\u672c\u8de8\u5ea6\u7684\u6700\u5927\u884c\u6570\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u5305\u88c5\u3002\u5982\u679c\u6587\u672c\u8d85\u8fc7\u4e86\u7ed9\u5b9a\u7684\u884c\u6570\uff0c\u5b83\u5c06\u6839\u636e overflow \u548c softWrap \u88ab\u622a\u65ad\u3002\u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u5927\u4e8e\u96f6 inlineContent: Map < String , InlineTextContent > = mapOf() \u4e00\u4e2a Map \u5b58\u50a8 Composables\uff0c\u53d6\u4ee3\u4e86\u6587\u672c\u7684\u67d0\u4e9b\u8303\u56f4\u3002\u5b83\u7528\u4e8e\u5728\u6587\u672c\u5e03\u5c40\u4e2d\u63d2\u5165 Composables\u3002\u67e5\u770b InlineTextContent \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f onTextLayout: (TextLayoutResult) -> Unit = {} \u5f53\u8ba1\u7b97\u4e00\u4e2a\u65b0\u7684\u6587\u672c\u5e03\u5c40\u65f6\u6267\u884c\u7684\u56de\u8c03 style: TextStyle = LocalTextStyle.current \u6587\u672c\u7684\u98ce\u683c\u914d\u7f6e\uff0c\u5982\u989c\u8272\u3001\u5b57\u4f53\u3001\u884c\u9ad8\u7b49","title":"2. Text"},{"location":"code/elements/text/%E7%94%A8%E6%88%B7%E5%8D%8F%E8%AE%AE/","text":"< resources > < string name = \"content\" > \u5982\u679c\u4f60\u770b\u5230\u4e86\u8fd9\u4e2a\u754c\u9762\uff0c\u5c31\u9ed8\u8ba4\u4ee3\u8868\u4f60\u540c\u610f\u6211\u4eec\u7684\u6240\u6709\u7528\u6237\u534f\u8bae\uff08 bushi \uff09 </ string > </ resources > var content by remember { mutableStateOf ( \"\" )} val openDialog = remember { mutableStateOf ( false ) } val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = stringResource ( id = R . string . content ) ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } Box ( modifier = Modifier . fillMaxSize () . padding ( bottom = 15. dp ), contentAlignment = Alignment . BottomCenter ){ ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> openDialog . value = true content = annotation . item } } ) } if ( openDialog . value ){ AlertDialog ( onDismissRequest = { openDialog . value = false }, title = { Box ( Modifier . fillMaxWidth (), contentAlignment = Alignment . Center ){ Text ( text = \"\u7528\u6237\u534f\u8bae\" , style = MaterialTheme . typography . h6 , ) } }, text = { Text ( content ) }, confirmButton = { Button ( onClick = { openDialog . value = false } ) { Text ( \"\u786e\u8ba4\" ) } }, dismissButton = { Button ( onClick = { openDialog . value = false } ) { Text ( \"\u53d6\u6d88\" ) } } ) }","title":"\u7528\u6237\u534f\u8bae"},{"location":"code/layout/scaffold/bottomNavigation/bottomNavigation/","text":"import androidx.compose.animation.AnimatedVisibility import androidx.compose.animation.ExperimentalAnimationApi import androidx.compose.foundation.clickable import androidx.compose.foundation.interaction.MutableInteractionSource import androidx.compose.foundation.layout.* import androidx.compose.foundation.shape.CircleShape import androidx.compose.material.* import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Home import androidx.compose.material.icons.filled.Settings import androidx.compose.runtime.Composable import androidx.compose.runtime.CompositionLocalProvider import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.Color import androidx.compose.ui.res.painterResource import androidx.compose.ui.unit.dp @ExperimentalAnimationApi @Composable fun BottomNavigationItem ( viewModel : UiState ){ BottomNavigation ( backgroundColor = Color . White ) { for ( index in 0. . 2 ){ Column ( modifier = Modifier . fillMaxHeight () . weight ( 1f ) . clickable ( onClick = { viewModel . selectedItem = index }, indication = null , interactionSource = MutableInteractionSource () ), verticalArrangement = Arrangement . Center , horizontalAlignment = Alignment . CenterHorizontally ) { NavigationIcon ( index , viewModel ) Spacer ( Modifier . padding ( top = 2. dp )) AnimatedVisibility ( visible = index == viewModel . selectedItem ) { Surface ( shape = CircleShape , modifier = Modifier . size ( 5. dp ), color = Color ( 0 xFF252527 )) { } } } } } } @Composable fun NavigationIcon ( index : Int , viewModel : UiState ){ val alpha = if ( viewModel . selectedItem != index ){ 0.5f } else 1f CompositionLocalProvider ( LocalContentAlpha provides alpha ) { when ( index ){ 0 -> Icon ( Icons . Filled . Home , contentDescription = null ) 1 -> Icon ( painterResource ( R . drawable . musicnote ), contentDescription = null ) else -> Icon ( Icons . Filled . Settings , contentDescription = null ) } } }","title":"bottomNavigation"},{"location":"elements/button/","text":"Compose \u7684 Button \u662f\u57fa\u4e8e Material Design \u5b9e\u73b0\u7684\uff0c\u548c\u4f20\u7edf\u7684 XML Button \u622a\u7136\u4e0d\u540c \u4ee5\u4e0b\u662f\u7b80\u5355\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684 Button \u4ee3\u7801\uff1a import androidx.compose.material.Button import androidx.compose.material.Text @Composable fun ButtonDemo () { Button ( onClick = { /*TODO*/ }) { Text ( \"\u786e\u8ba4\" ) } } \u6548\u679c\u5982\u56fe\u6240\u793a\uff1a \u4e5f\u8bb8\u60a8\u60f3\u6dfb\u52a0\u56fe\u6807\u5728\u6587\u5b57\u7684\u65c1\u8fb9\uff0c\u4e5f\u53ea\u9700\uff1a @Composable fun ButtonDemo () { Button ( onClick = { /*TODO*/ }) { Icon ( // Material \u5e93\u4e2d\u7684\u56fe\u6807\uff0c\u6709 Filled, Outlined, Rounded, Sharp, Two Tone \u7b49 Icons . Filled . Favorite , contentDescription = null , modifier = Modifier . size ( ButtonDefaults . IconSize ) ) // \u6dfb\u52a0\u95f4\u9694 Spacer ( Modifier . size ( ButtonDefaults . IconSpacing )) Text ( \"\u559c\u6b22\" ) } } \u66f4\u591a Button \u53c2\u6570\u8be6\u60c5","title":"Button"},{"location":"elements/button/#_1","text":"Button \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"elements/card/","text":"Card \u662f Compose \u4e2d\u4e00\u4e2a\u5e03\u5c40\u7ec4\u4ef6\uff0c\u6211\u4eec\u7528\u5b83\u53ef\u4ee5\u6765\u521b\u9020\u51fa\u4e00\u4e9b\u597d\u770b\u7684\u754c\u9762 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ExamplesTheme () { // \u548c\u6bcf\u4e2a\u4eba\u7684\u9879\u76ee\u540d\u4e0d\u540c CardDemo () } } } } @Composable fun CardDemo () { Card ( modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, // \u8bbe\u7f6e\u70b9\u51fb\u6ce2\u7eb9\u6548\u679c\uff0c\u6ce8\u610f\u5982\u679c CardDemo() \u51fd\u6570\u4e0d\u5728 ExamplesTheme() {} \u4e0b\u8c03\u7528 // \u5c06\u65e0\u6cd5\u663e\u793a\u6ce2\u7eb9\u6548\u679c elevation = 10. dp // \u8bbe\u7f6e\u9634\u5f71 ) { Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } } } \u66f4\u591a Card \u53c2\u6570\u8be6\u60c5","title":"Card"},{"location":"elements/card/#_1","text":"Card \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"elements/icon/","text":"\u4e00\u4e2a\u56fe\u6807\u7ec4\u4ef6\uff0c\u4f7f\u7528 tint \u6765\u7ed9 imageVector \u4e0a\u8272\uff0c\u9ed8\u8ba4\u4e3a LocalContentColor \u3002\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\uff0c\u8bf7\u67e5\u9605 IconButton \u3002 Row { Icon ( Icons . Filled . ArrowBack , contentDescription = null ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Gray ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Red ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . DarkGray ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Magenta ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Yellow ) Icon ( Icons . Filled . ArrowBack , contentDescription = null , tint = Color . Cyan ) }","title":"Icon"},{"location":"elements/iconbutton/","text":"IconButton \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\u6309\u94ae IconButton \u662f\u4e00\u4e2a\u53ef\u70b9\u51fb\u7684\u56fe\u6807\uff0c\u7528\u4e8e\u8868\u793a\u52a8\u4f5c\uff08\u590d\u5236\uff0c\u7c98\u8d34\uff0c\u4fdd\u5b58\uff0c\u7b49\u7b49\uff09\u3002 IconButton \u7684\u6574\u4f53\u6700\u5c0f\u89e6\u6478\u76ee\u6807\u5c3a\u5bf8\u4e3a 48 x 48dp \uff0c\u4ee5\u6ee1\u8db3\u65e0\u969c\u788d\u51c6\u5219\u3002 content \u4f1a\u5728 IconButton \u5185\u5c45\u4e2d\u3002 \u8fd9\u4e2a\u7ec4\u4ef6\u901a\u5e38\u7528\u4e8e\u5e94\u7528\u680f\u5185\u7684\u5bfc\u822a\u56fe\u6807/\u52a8\u4f5c\u3002 content \u901a\u5e38\u5e94\u8be5\u662f\u4e00\u4e2a\u56fe\u6807\uff0c\u4f7f\u7528 androidx.compose.material.icons.Icons \u4e2d\u7684\u4e00\u4e2a\u56fe\u6807\u3002\u5982\u679c\u4f7f\u7528\u81ea\u5b9a\u4e49\u56fe\u6807\uff0c\u8bf7\u6ce8\u610f\u5185\u90e8\u56fe\u6807\u7684\u5178\u578b\u5c3a\u5bf8\u662f 24 x 24 dp \u3002 @Composable fun IconButtonDemo () { Row { IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Search , null ) } IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . ArrowBack , null ) } IconButton ( onClick = { /*TODO*/ }) { Icon ( Icons . Filled . Done , null ) } } } 1. \u53d6\u6d88\u6ce2\u7eb9 \u6709\u4e9b\u65f6\u5019\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u6309\u94ae\u70b9\u51fb\u6240\u4ea7\u751f\u7684\u6ce2\u7eb9\u8981\u600e\u4e48\u529e\uff1f IconButton \u7684\u6e90\u7801\u4e2d\u5176\u5b9e\u5c06 Box \u91cc\u7684 modifier.clickable \u53c2\u6570 Indication \u8bbe\u7f6e\u6210\u6ce2\u7eb9\u4e86 @Composable fun IconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = rememberRipple ( bounded = false , radius = RippleRadius ) ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u90a3\u6211\u4eec\u53ea\u9700\u8981\u590d\u5236\u6e90\u7801\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5c06 indication \u8bbe\u7f6e\u4e3a null \u5c31\u597d\u4e86 @Composable fun MyIconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { // \u8fd9\u4e5f\u662f\u6e90\u7801\u7684\u4e00\u90e8\u5206 val IconButtonSizeModifier = Modifier . size ( 48. dp ) Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = null ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } }","title":"IconButton"},{"location":"elements/iconbutton/#1","text":"\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u6309\u94ae\u70b9\u51fb\u6240\u4ea7\u751f\u7684\u6ce2\u7eb9\u8981\u600e\u4e48\u529e\uff1f IconButton \u7684\u6e90\u7801\u4e2d\u5176\u5b9e\u5c06 Box \u91cc\u7684 modifier.clickable \u53c2\u6570 Indication \u8bbe\u7f6e\u6210\u6ce2\u7eb9\u4e86 @Composable fun IconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = rememberRipple ( bounded = false , radius = RippleRadius ) ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } } \u90a3\u6211\u4eec\u53ea\u9700\u8981\u590d\u5236\u6e90\u7801\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\uff0c\u5e76\u4e14\u5c06 indication \u8bbe\u7f6e\u4e3a null \u5c31\u597d\u4e86 @Composable fun MyIconButton ( onClick : () -> Unit , modifier : Modifier = Modifier , enabled : Boolean = true , interactionSource : MutableInteractionSource = remember { MutableInteractionSource () }, content : @Composable () -> Unit ) { // \u8fd9\u4e5f\u662f\u6e90\u7801\u7684\u4e00\u90e8\u5206 val IconButtonSizeModifier = Modifier . size ( 48. dp ) Box ( modifier = modifier . clickable ( onClick = onClick , enabled = enabled , role = Role . Button , interactionSource = interactionSource , indication = null ) . then ( IconButtonSizeModifier ), contentAlignment = Alignment . Center ) { content () } }","title":"1. \u53d6\u6d88\u6ce2\u7eb9"},{"location":"elements/image/","text":"\u6ce8\u610f \u76ee\u524d\u5728 Compose \u4e2d Image \u6709\u4e09\u79cd\uff0c\u8be6\u60c5\u53ef\u5148\u5728 \u5e95\u90e8 \u627e\u5230 Image \u53ef\u4ee5\u5e2e\u6211\u4eec\u52a0\u8f7d\u4e00\u5f20\u56fe\u7247\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null ) } 1. \u56fe\u7247\u5927\u5c0f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Modifier.size() \u6765\u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } 2. \u56fe\u7247\u5f62\u72b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Surface \u6765\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u5f62\u72b6\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } } \u662f\u4e0d\u662f\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\uff1f\u4f3c\u4e4e\u53ea\u6709\u5de6\u53f3\u4e24\u8fb9\u53d8\u6210\u4e86\u5706\u5f62\uff0c\u800c\u4e0a\u4e0b\u5e76\u6ca1\u6709\u3002 \u8fd9\u662f\u56e0\u4e3a Image \u4e2d\u6e90\u7801\u7684 contentScale \u53c2\u6570\u9ed8\u8ba4\u662f ContentScale.Fit \uff0c \u4e5f\u5c31\u662f\u4fdd\u6301\u56fe\u7247\u7684\u5bbd\u9ad8\u6bd4\uff0c\u7f29\u5c0f\u5230\u53ef\u4ee5\u5b8c\u6574\u663e\u793a\u6574\u5f20\u56fe\u7247\u3002 \u800c ContentScale.Crop \u4e5f\u662f\u4fdd\u6301\u5bbd\u9ad8\u6bd4\uff0c\u4f46\u662f\u5c3d\u91cf\u8ba9\u5bbd\u5ea6 \u6216\u8005 \u9ad8\u5ea6\u5b8c\u6574\u7684\u5360\u6ee1\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 contentScale \u8bbe\u7f6e\u6210 ContentScale.Crop \u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } } 3. \u56fe\u50cf\u8fb9\u6846 \u4f60\u53ef\u4ee5\u5229\u7528 Surface \u4e2d\u7684 border \u53c2\u6570\u6765\u8bbe\u7f6e\u8fb9\u6846\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape , border = BorderStroke ( 5. dp , Color . Gray ) ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } } 4. \u66f4\u591a Image \u53c2\u6570\u8be6\u60c5 Ucrop \u4e00\u4e2a\u56fe\u7247\u88c1\u526a\u5e93 Surface \u8be6\u60c5","title":"Image"},{"location":"elements/image/#1","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Modifier.size() \u6765\u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002 @Composable fun ImageDemo () { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) }","title":"1. \u56fe\u7247\u5927\u5c0f"},{"location":"elements/image/#2","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Surface \u6765\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u5f62\u72b6\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ) ) } } \u662f\u4e0d\u662f\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\uff1f\u4f3c\u4e4e\u53ea\u6709\u5de6\u53f3\u4e24\u8fb9\u53d8\u6210\u4e86\u5706\u5f62\uff0c\u800c\u4e0a\u4e0b\u5e76\u6ca1\u6709\u3002 \u8fd9\u662f\u56e0\u4e3a Image \u4e2d\u6e90\u7801\u7684 contentScale \u53c2\u6570\u9ed8\u8ba4\u662f ContentScale.Fit \uff0c \u4e5f\u5c31\u662f\u4fdd\u6301\u56fe\u7247\u7684\u5bbd\u9ad8\u6bd4\uff0c\u7f29\u5c0f\u5230\u53ef\u4ee5\u5b8c\u6574\u663e\u793a\u6574\u5f20\u56fe\u7247\u3002 \u800c ContentScale.Crop \u4e5f\u662f\u4fdd\u6301\u5bbd\u9ad8\u6bd4\uff0c\u4f46\u662f\u5c3d\u91cf\u8ba9\u5bbd\u5ea6 \u6216\u8005 \u9ad8\u5ea6\u5b8c\u6574\u7684\u5360\u6ee1\u3002 \u6240\u4ee5\u6211\u4eec\u5c06 contentScale \u8bbe\u7f6e\u6210 ContentScale.Crop \u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } }","title":"2. \u56fe\u7247\u5f62\u72b6"},{"location":"elements/image/#3","text":"\u4f60\u53ef\u4ee5\u5229\u7528 Surface \u4e2d\u7684 border \u53c2\u6570\u6765\u8bbe\u7f6e\u8fb9\u6846\u3002 @Composable fun ImageDemo () { Surface ( shape = CircleShape , border = BorderStroke ( 5. dp , Color . Gray ) ) { Image ( painter = painterResource ( id = R . drawable . wallpaper ), contentDescription = null , modifier = Modifier . size ( 350. dp ), contentScale = ContentScale . Crop ) } }","title":"3. \u56fe\u50cf\u8fb9\u6846"},{"location":"elements/image/#4","text":"Image \u53c2\u6570\u8be6\u60c5 Ucrop \u4e00\u4e2a\u56fe\u7247\u88c1\u526a\u5e93 Surface \u8be6\u60c5","title":"4. \u66f4\u591a"},{"location":"elements/slider/","text":"Slider \u5141\u8bb8\u7528\u6237\u4ece\u4e00\u5b9a\u8303\u56f4\u7684\u6570\u503c\u4e2d\u8fdb\u884c\u9009\u62e9\u3002 Slider \u53cd\u6620\u4e86\u4e00\u4e2a\u6cbf\u6761\u7684\u6570\u503c\u8303\u56f4\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u4e2d\u9009\u62e9\u4e00\u4e2a\u5355\u4e00\u7684\u6570\u503c\u3002\u5b83\u4eec\u662f\u8c03\u6574\u97f3\u91cf\u3001\u4eae\u5ea6\u6216\u5e94\u7528\u56fe\u50cf\u8fc7\u6ee4\u5668\u7b49\u8bbe\u7f6e\u7684\u7406\u60f3\u9009\u62e9\u3002 Material Design Slider \u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u7528\u6cd5\uff1a var progress by remember { mutableStateOf ( 0f )} Slider ( value = progress , colors = SliderDefaults . colors ( thumbColor = Color . White , // \u5706\u5708\u7684\u989c\u8272 activeTrackColor = Color ( 0 xFF0079D3 ) ), onValueChange = { progress = it }, ) @Composable fun colors ( thumbColor : Color = MaterialTheme . colors . primary , disabledThumbColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = ContentAlpha . disabled ) . compositeOver ( MaterialTheme . colors . surface ), activeTrackColor : Color = MaterialTheme . colors . primary , inactiveTrackColor : Color = activeTrackColor . copy ( alpha = InactiveTrackAlpha ), disabledActiveTrackColor : Color = MaterialTheme . colors . onSurface . copy ( alpha = DisabledActiveTrackAlpha ), disabledInactiveTrackColor : Color = disabledActiveTrackColor . copy ( alpha = DisabledInactiveTrackAlpha ), activeTickColor : Color = contentColorFor ( activeTrackColor ). copy ( alpha = TickAlpha ), inactiveTickColor : Color = activeTrackColor . copy ( alpha = TickAlpha ), disabledActiveTickColor : Color = activeTickColor . copy ( alpha = DisabledTickAlpha ), disabledInactiveTickColor : Color = disabledInactiveTrackColor . copy ( alpha = DisabledTickAlpha ) ) // \u6ed1\u6761\u672a\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val InactiveTrackAlpha = 0.24f // \u5f53\u6ed1\u6761\u88ab\u7981\u7528\u7684\u72b6\u6001\u4e0b\u5df2\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val DisabledInactiveTrackAlpha = 0.12f // \u5f53\u6ed1\u6761\u88ab\u7981\u7528\u7684\u72b6\u6001\u4e0b\u672a\u7ecf\u8fc7\u90e8\u5206\u7684\u9ed8\u8ba4 alpha \u503c const val DisabledActiveTrackAlpha = 0.32f // \u5728\u6ed1\u6761\u4e0a\u65b9\u663e\u793a\u7684\u523b\u5ea6\u7684\u9ed8\u8ba4\u7684 alpha \u503c const val TickAlpha = 0.54f // \u5f53\u523b\u5ea6\u7ebf\u88ab\u7981\u7528\u65f6\uff0c\u9ed8\u8ba4\u7684 alpha \u503c const val DisabledTickAlpha = 0.12f \u4ece\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8bbe\u7f6e\u6ed1\u6761\u989c\u8272\u7684\u662f activeTrackColor , \u800c\u6ed1\u6761\u4e2d\u672a\u7ecf\u8fc7\u7684\u5730\u65b9\u662f inactiveTrackColor \uff0c\u5b83\u5c06 activeTrackColor \u590d\u5236\uff0c\u5e76\u4e14\u8bbe\u7f6e\u4e86 0.24f \u7684\u900f\u660e\u5ea6 \u6240\u4ee5\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e activeTrackColor \u7684\u503c\u5c31\u53ef\u4ee5\u6539\u53d8\u6ed1\u6761\u7684\u603b\u4f53\u989c\u8272\uff08\u7ecf\u8fc7\u548c\u672a\u7ecf\u8fc7\u7684\u533a\u57df\uff09","title":"Slider"},{"location":"elements/surface/","text":"@Composable fun Surface ( modifier : Modifier = Modifier , shape : Shape = RectangleShape , color : Color = MaterialTheme . colors . surface , contentColor : Color = contentColorFor ( color ), border : BorderStroke? = null , elevation : Dp = 0. dp , content : () -> Unit ): @Composable Unit Material Surface \u662f Material Design \u7684\u6838\u5fc3\u9690\u55bb\uff0c\u6bcf\u4e2a\u5e73\u9762\u90fd\u5b58\u5728\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u9ad8\u5ea6\uff0c\u8fd9\u5f71\u54cd\u4e86\u8fd9\u5757\u5e73\u9762\u5728\u89c6\u89c9\u4e0a\u4e0e\u5176\u4ed6\u5e73\u9762\u7684\u5173\u7cfb\u4ee5\u53ca\u8be5\u5e73\u9762\u5982\u4f55\u6295\u5c04\u9634\u5f71\u3002 \u53ef\u4ee5\u5c06 Surface \u7406\u89e3\u6210\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u6bcf\u4e2a\u754c\u9762\u5143\u7d20\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u5bb9\u5668\uff0c\u5bb9\u5668\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u9ad8\u5ea6\uff0c\u53ef\u4ee5\u4f4d\u4e8e\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002 Surface \u4e3b\u8981\u8d1f\u8d23\uff1a \u526a\u88c1\uff1a Surface \u4f1a\u6839\u636e shape \u5c5e\u6027\u6240\u63cf\u8ff0\u7684\u5f62\u72b6\u6765\u88c1\u526a\u5b83\u7684\u5b50\u5143\u7d20\u3002 \u9ad8\u5ea6\uff1a Surface \u4f1a\u7ed8\u5236\u9634\u5f71\u6765\u8868\u793a\u5e73\u9762\u7684\u6df1\u5ea6\uff0c\u800c\u8fd9\u4e2a\u6df1\u5ea6\u7531\u9ad8\u5ea6\u5c5e\u6027 (Elevation) \u8868\u793a\u3002\u5982\u679c\u4f20\u9012\u7684\u5f62\u72b6\u662f\u51f9\u8fdb\u53bb\u7684\uff0c\u90a3\u4e48\u5728 Android \u7248\u672c\u5c0f\u4e8e 10 \u7684\u60c5\u51b5\u4e0b\uff0c\u9634\u5f71\u4e0d\u4f1a\u88ab\u753b\u51fa\u6765\u3002 \u8fb9\u6846\uff1a\u5982\u679c\u5f62\u72b6\u6709\u8fb9\u6846\uff0c\u90a3\u4e48\u5b83\u4e5f\u4f1a\u88ab\u753b\u51fa\u6765\u3002 \u80cc\u666f\uff1a Surface \u5728 shape \u6307\u5b9a\u7684\u5f62\u72b6\u4e0a\u586b\u5145\u989c\u8272\u3002\u5982\u679c\u989c\u8272\u662f Colors.surface \uff0c\u5c06\u4f7f\u7528 LocalElevationOverlay \u4e2d\u7684 ElevationOverlay \u6765\u8fdb\u884c\u53e0\u52a0--\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53ea\u4f1a\u53d1\u751f\u5728\u6df1\u8272\u4e3b\u9898\u4e2d\u3002\u8986\u76d6\u7684\u989c\u8272\u53d6\u51b3\u4e8e\u8fd9\u4e2a Surface \u7684\u9ad8\u5ea6\uff0c\u4ee5\u53ca\u4efb\u4f55\u7236\u7ea7 Surface \u8bbe\u7f6e\u7684 LocalAbsolutelevation \u3002\u8fd9\u53ef\u4ee5\u786e\u4fdd\u4e00\u4e2a Surface \u7684\u53e0\u52a0\u9ad8\u5ea6\u6c38\u8fdc\u4e0d\u4f1a\u6bd4\u5b83\u7684\u7956\u5148\u4f4e\uff0c\u56e0\u4e3a\u5b83\u662f\u6240\u6709\u5148\u524d Surface \u7684\u9ad8\u5ea6\u7684\u603b\u548c \u5185\u5bb9\u989c\u8272\uff1a Surface \u4f7f\u7528 contentColor \u4e3a\u8fd9\u4e2a\u5e73\u9762\u7684\u5185\u5bb9\u6307\u5b9a\u4e00\u4e2a\u9996\u9009\u7684\u989c\u8272--\u8fd9\u4e2a\u989c\u8272\u88ab\u6587\u672c\u548c\u56fe\u6807\u7ec4\u4ef6\u4f5c\u4e3a\u9ed8\u8ba4\u989c\u8272\u4f7f\u7528 \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e contentColor \uff0c\u8fd9\u4e2a\u5e73\u9762\u5c06\u5c1d\u8bd5\u5c06\u5176\u80cc\u666f\u989c\u8272\u4e0e\u4e3b\u9898 Colors \u4e2d\u5b9a\u4e49\u7684\u989c\u8272\u76f8\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\u989c\u8272\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u5e73\u9762\u7684\u989c\u8272\u662f Colors.surface \uff0c contentColor \u5c06\u88ab\u8bbe\u7f6e\u4e3a Colors.onSurface \u3002\u5982\u679c\u989c\u8272\u4e0d\u662f\u4e3b\u9898\u8c03\u8272\u677f\u7684\u4e00\u90e8\u5206\uff0c contentColor \u5c06\u4fdd\u6301\u8fd9\u4e2a Surface \u4e0a\u9762\u8bbe\u7f6e\u7684\u76f8\u540c\u503c 1. \u6765\u8bd5\u8bd5\u7528 Surface \u5b9e\u73b0 Card \u7684\u6548\u679c Surface ( shape = RoundedCornerShape ( 10. dp ), elevation = 10. dp , modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, ){ Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } } 2. \u66f4\u591a Surface \u53c2\u6570\u8be6\u60c5","title":"Surface"},{"location":"elements/surface/#1-surface-card","text":"Surface ( shape = RoundedCornerShape ( 10. dp ), elevation = 10. dp , modifier = Modifier . fillMaxWidth () . padding ( 15. dp ) // \u5916\u8fb9\u8ddd . clickable { }, ){ Column ( modifier = Modifier . padding ( 15. dp ) // \u5185\u8fb9\u8ddd ) { Text ( buildAnnotatedString { append ( \"\u6b22\u8fce\u6765\u5230 \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 , color = Color ( 0 xFF4552B8 )) ) { append ( \"Jetpack Compose \u535a\u7269\u9986\" ) } } ) Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Card\" ) } } ) } }","title":"1. \u6765\u8bd5\u8bd5\u7528 Surface \u5b9e\u73b0 Card \u7684\u6548\u679c"},{"location":"elements/surface/#2","text":"Surface \u53c2\u6570\u8be6\u60c5","title":"2. \u66f4\u591a"},{"location":"elements/text/","text":"Text \u662f Compose \u4e2d\u6700\u57fa\u672c\u7684\u5e03\u5c40\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u6587\u5b57 @Composable fun TextDemo () { Text ( \"Hello World\" ) } \u4ece res \u4e2d\u52a0\u8f7d\u6587\u5b57 @Composable fun TextDemo () { Text ( stringResource ( id = R . string . content )) } < resources > < string name = \"app_name\" > examples </ string > < string name = \"content\" > \u6843\u4e4b\u592d\u592d\uff0c\u707c\u707c\u5176\u534e\u3002\u4e4b\u5b50\u4e8e\u5f52\uff0c\u5b9c\u5176\u5ba4\u5bb6\u3002 </ string > </ resources > 1. style \u53c2\u6570 \u5f53\u7136\uff0c\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u9700\u8981\u66f4\u6362\u5b57\u4f53\u7684\u5927\u5c0f Compose \u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u5f88\u591a\u4e13\u95e8\u7684\u5b57\u4f53\u5927\u5c0f, \u4ece h1 \u5230 overline @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\" , style = MaterialTheme . typography . h6 ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } \u6587\u5b57\u95f4\u8ddd \u5f53\u7136\u6709\u7684\u65f6\u5019\u6211\u4eec\u60f3\u81ea\u5df1\u81ea\u5b9a\u4e49\u5b57\u4f53\u7684\u95f4\u9694\u548c\u5927\u5c0f\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u6539\u4e3a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( text = \"\u4f60\u597d\u964c\u751f\u4eba\" , style = TextStyle ( fontWeight = FontWeight . W900 , //\u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 fontSize = 20. sp , letterSpacing = 7. sp ) ) } } \u5b83\u5c06\u4f1a\u663e\u793a\u6210 \u5b57\u4f53\u5927\u5c0f Tips \u5982\u679c\u53ea\u662f\u60f3\u7b80\u5355\u7684\u4fee\u6539\u5b57\u4f53\u5927\u5c0f\u800c\u4e0d\u8003\u8651\u95f4\u9694\u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 fontSize = xx.sp \u6765\u8bbe\u7f6e\u5927\u5c0f 2. maxLines \u53c2\u6570 \u4f7f\u7528 maxLines \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6587\u672c\u9650\u5236\u5728\u6307\u5b9a\u7684\u884c\u6570\u4e4b\u95f4\uff0c\u5982\u679c\u6587\u672c\u8db3\u591f\u77ed\u5219\u4e0d\u4f1a\u751f\u6548\uff0c\u5982\u679c\u6587\u672c\u8d85\u8fc7 maxLines \u6240\u89c4\u5b9a\u7684\u884c\u6570\uff0c\u5219\u4f1a\u8fdb\u884c\u622a\u65ad @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } overflow \u5904\u7406\u6ea2\u51fa \u4f7f\u7528 overflow \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u6ea2\u51fa\u7684\u89c6\u89c9\u6548\u679c @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , overflow = TextOverflow . Ellipsis ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } } 3. textAlign \u53c2\u6570 \u5f53\u6211\u4eec\u5728 Text \u4e2d\u8bbe\u7f6e\u4e86 fillMaxWidth() \u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a Text \u7684\u5bf9\u9f50\u65b9\u5f0f @Composable fun TextDemo () { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u533a\u5206\u7684\u662f\uff0c TextAlign \u8bbe\u7f6e\u7684\u662f\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u65b9\u5411 \u5982\u679c\u9700\u8981\u5b9e\u73b0 TextAlign.Right \u4e2d\u7684\u65b9\u5411\uff0c\u8bf7\u4f7f\u7528 Modifier.align(Alignment.End) \uff0c\u8be6\u60c5\u4f7f\u7528\u65b9\u6cd5\u5728 \u8fd9\u91cc 4. lineHeight \u53c2\u6570 \u4f7f\u7528 lineHeight \u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u6307\u5b9a Text \u4e2d\u6bcf\u884c\u7684\u884c\u9ad8\u95f4\u8ddd Column { Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), ) Spacer ( Modifier . padding ( vertical = 15. dp )) Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), lineHeight = 30. sp ) } 5. \u53ef\u70b9\u51fb\u7684 Text \u6709\u7684\u65f6\u5019\u4e5f\u8bb8\u60a8\u9700\u8981\u5c06\u6587\u672c\u5f53\u4f5c\u6309\u94ae\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6dfb\u52a0 Modifier.clickable \u5373\u53ef \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun TextDemo () { Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // TODO }, ) ) } \u53d6\u6d88\u70b9\u51fb\u6ce2\u7eb9 \u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c clickable \u6709\u81ea\u5e26\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\uff1a @Composable fun TextDemo () { // \u83b7\u53d6 context val context = LocalContext . current Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // \u901a\u77e5\u4e8b\u4ef6 Toast . makeText ( context , \"\u4f60\u70b9\u51fb\u4e86\u6b64\u6587\u672c\" , Toast . LENGTH_LONG ). show () }, indication = null , interactionSource = MutableInteractionSource () ) ) } \u6548\u679c\u5982\u4e0b\uff1a 6. \u7279\u5b9a\u7684\u6587\u5b57\u663e\u793a \u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u6bd4\u5982\u7c97\u4f53\u63d0\u9192\uff0c\u7279\u6b8a\u989c\u8272 \u5219\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 AnnotatedString AnnotatedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\uff1a \u4e00\u4e2a Text \u7684\u503c \u4e00\u4e2a SpanStyleRange \u7684 List \uff0c\u7b49\u540c\u4e8e\u4f4d\u7f6e\u8303\u56f4\u5728\u6587\u5b57\u503c\u5185\u7684\u5185\u5d4c\u6837\u5f0f \u4e00\u4e2a ParagraphStyleRange \u7684 List \uff0c\u7528\u4e8e\u6307\u5b9a\u6587\u5b57\u5bf9\u9f50\u3001\u6587\u5b57\u65b9\u5411\u3001\u884c\u9ad8\u548c\u6587\u5b57\u7f29\u8fdb\u6837\u5f0f inline fun < R : Any > AnnotatedString . Builder . withStyle ( style : SpanStyle , block : AnnotatedString . Builder .() -> crossinline R ): R \u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6f14\u793a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Text\" ) } } ) } } \u6548\u679c\u5982\u4e0b\uff1a 7. \u6587\u5b57\u8d85\u94fe\u63a5\uff1f\uff08ClickableText\uff09 \u5728\u7b2c #6 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 AnnotatedString \u6765\u5b8c\u6210\u5728\u4e00\u4e2a Text \u4e2d\u7ed9\u4e0d\u540c\u7684\u6587\u5b57\u5e94\u7528\u4e0d\u540c\u7684\u6837\u5f0f \u5728\u7b2c #5 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 Modifier.Clickable() \u6765\u5b8c\u6210\u68c0\u6d4b Text \u7684\u70b9\u51fb \u4f46\u662f Modifier.Clickable() \u65e0\u6cd5\u68c0\u6d4b Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\uff0c\u90a3\u5982\u679c\u6211\u4eec\u9700\u8981\u68c0\u6d4b\u4e00\u4e2a Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\u4e8b\u4ef6\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5c31\u50cf\u6211\u4eec\u7ecf\u5e38\u5728 App \u5e95\u4e0b\u770b\u5230\u7684\u7528\u6237\u534f\u8bae\u7b49 \u5176\u5b9e\u5f88\u7b80\u5355\uff0c Compose \u4e5f\u7ed9\u6211\u4eec\u51c6\u5907\u4e86 ClickableText \uff0c\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5427\uff01 val text = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } } ClickableText ( text = text , onClick = { offset -> Log . d ( TAG , \"Hi\uff0c\u4f60\u6309\u5230\u4e86\u7b2c $ offset \u4f4d\u7684\u6587\u5b57\" ) } ) \u4f46\u662f...\u600e\u4e48\u624d\u80fd\u68c0\u6d4b \u7528\u6237\u534f\u8bae \u8fd9\u56db\u4e2a\u5b57\u7b26\u7684\u70b9\u51fb\u4e8b\u4ef6\u5462\uff1f \u4e5f\u4e0d\u7528\u6015\uff0c Compose \u8fd8\u5728 buildAnnotatedString \u548c ClickableText \u4e2d\u5f15\u5165\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5 \u5148\u6765\u770b\u770b\u4ee3\u7801\u5427\uff01 val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = \"\u4e00\u4e2a\u7528\u6237\u534f\u8bae\u5566\u5566\u5566\uff0c\u5185\u5bb9\u5185\u5bb9\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> Log . d ( TAG , \"\u4f60\u5df2\u7ecf\u70b9\u5230 ${ annotation . item } \u5566\" ) } } ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d \u591a\u4e86\u4e00\u4e2a pushStringAnnotation() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u5c06\u7ed9\u5b9a\u7684\u6ce8\u91ca\u9644\u52a0\u5230\u4efb\u4f55\u9644\u52a0\u7684\u6587\u672c\u4e0a\uff0c\u76f4\u5230\u76f8\u5e94\u7684 pop \u88ab\u8c03\u7528 getStringAnnotations() \u65b9\u6cd5\u662f\u67e5\u8be2\u9644\u52a0\u5728\u8fd9\u4e2a AnnotatedString \u4e0a\u7684\u5b57\u7b26\u4e32\u6ce8\u91ca\u3002\u6ce8\u91ca\u662f\u9644\u52a0\u5728 AnnotatedString \u4e0a\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d \"tag\" \u662f\u9644\u52a0\u5728\u67d0\u4e2a\u8303\u56f4\u4e0a\u7684\u5b57\u7b26\u4e32\u5143\u6570\u636e\u3002\u6ce8\u91ca\u4e5f\u4e0e\u6837\u5f0f\u4e00\u8d77\u5b58\u50a8\u5728 Range \u4e2d \u5c0f\u8bd5\u725b\u5200 \u90a3\u4e48\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49 Text \u4e2d\u7684\u6837\u5f0f\u548c\u70b9\u51fb\u4e8b\u4ef6\uff0c\u6765\u5c1d\u8bd5\u505a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u6548\u679c\uff1f \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github 8. \u590d\u5236\u6587\u5b57 \u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextDemo () { SelectionContainer { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } } 9. \u6587\u5b57\u5f3a\u8c03\u6548\u679c \u6587\u5b57\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6765\u786e\u5b9a\u6587\u5b57\u7684\u5f3a\u8c03\u7a0b\u5ea6\uff0c\u4ee5\u7a81\u51fa\u91cd\u70b9\u5e76\u4f53\u73b0\u51fa\u89c6\u89c9\u4e0a\u7684\u5c42\u6b21\u611f\u3002 Material Design \u5efa\u8bae\u91c7\u7528\u4e0d\u540c\u7684\u4e0d\u900f\u660e\u5ea6\u6765\u4f20\u8fbe\u8fd9\u4e9b\u4e0d\u540c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 LocalContentAlpha \u5b9e\u73b0\u6b64\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6b64 CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u6765\u4e3a\u5c42\u6b21\u7ed3\u6784\u6307\u5b9a\u5185\u5bb9 Alpha \u503c\u3002\uff08 CompositionLocal \u662f\u4e00\u4e2a\u7528\u4e8e\u9690\u5f0f\u7684\u4f20\u9012\u53c2\u6570\u7684\u7ec4\u4ef6\uff0c\u540e\u7eed\u4f1a\u8bb2\u5230\uff09 // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u9ad8 // \u6ce8\u610f: MaterialTheme \u5df2\u7ecf\u9ed8\u8ba4\u5c06\u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a high CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . high ) { Text ( \"\u8fd9\u91cc\u662fhigh\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u4e2d CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . medium ) { Text ( \"\u8fd9\u91cc\u662fmedium\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u7981\u7528 CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . disabled ) { Icon ( \"\u8fd9\u91cc\u662f\u7981\u7528\u540e\u7684\u6548\u679c\" ) } \u8fd9\u662f\u8fd0\u884c\u6548\u679c: \u8fd9\u5f20\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8bf4\u660e\u8fd9\u4e2a\u6548\u679c 10. \u66f4\u591a Text \u53c2\u6570\u8be6\u60c5 Text \u4e00\u4e9b\u7528\u6cd5","title":"Text"},{"location":"elements/text/#1-style","text":"\u5f53\u7136\uff0c\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u9700\u8981\u66f4\u6362\u5b57\u4f53\u7684\u5927\u5c0f Compose \u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u5f88\u591a\u4e13\u95e8\u7684\u5b57\u4f53\u5927\u5c0f, \u4ece h1 \u5230 overline @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\" , style = MaterialTheme . typography . h6 ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"1. style \u53c2\u6570"},{"location":"elements/text/#_1","text":"\u5f53\u7136\u6709\u7684\u65f6\u5019\u6211\u4eec\u60f3\u81ea\u5df1\u81ea\u5b9a\u4e49\u5b57\u4f53\u7684\u95f4\u9694\u548c\u5927\u5c0f\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u5c06\u4ee3\u7801\u6539\u4e3a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( text = \"\u4f60\u597d\u964c\u751f\u4eba\" , style = TextStyle ( fontWeight = FontWeight . W900 , //\u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6 fontSize = 20. sp , letterSpacing = 7. sp ) ) } } \u5b83\u5c06\u4f1a\u663e\u793a\u6210","title":"\u6587\u5b57\u95f4\u8ddd"},{"location":"elements/text/#_2","text":"Tips \u5982\u679c\u53ea\u662f\u60f3\u7b80\u5355\u7684\u4fee\u6539\u5b57\u4f53\u5927\u5c0f\u800c\u4e0d\u8003\u8651\u95f4\u9694\u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 fontSize = xx.sp \u6765\u8bbe\u7f6e\u5927\u5c0f","title":"\u5b57\u4f53\u5927\u5c0f"},{"location":"elements/text/#2-maxlines","text":"\u4f7f\u7528 maxLines \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6587\u672c\u9650\u5236\u5728\u6307\u5b9a\u7684\u884c\u6570\u4e4b\u95f4\uff0c\u5982\u679c\u6587\u672c\u8db3\u591f\u77ed\u5219\u4e0d\u4f1a\u751f\u6548\uff0c\u5982\u679c\u6587\u672c\u8d85\u8fc7 maxLines \u6240\u89c4\u5b9a\u7684\u884c\u6570\uff0c\u5219\u4f1a\u8fdb\u884c\u622a\u65ad @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"2. maxLines \u53c2\u6570"},{"location":"elements/text/#overflow","text":"\u4f7f\u7528 overflow \u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5904\u7406\u6ea2\u51fa\u7684\u89c6\u89c9\u6548\u679c @Composable fun TextDemo () { Column { Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\uff0c\u4e0d\u662f\u5f88\u957f\uff0c\u56e0\u4e3a\u6211\u60f3\u4e0d\u51fa\u5176\u4ed6\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u6807\u9898\u4e86\" , style = MaterialTheme . typography . h6 , maxLines = 1 , overflow = TextOverflow . Ellipsis ) Text ( text = \"\u4f60\u597d\u5440\u964c\u751f\u4eba\uff0c\u6211\u662f\u5185\u5bb9\" , style = MaterialTheme . typography . body2 ) } }","title":"overflow \u5904\u7406\u6ea2\u51fa"},{"location":"elements/text/#3-textalign","text":"\u5f53\u6211\u4eec\u5728 Text \u4e2d\u8bbe\u7f6e\u4e86 fillMaxWidth() \u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a Text \u7684\u5bf9\u9f50\u65b9\u5f0f @Composable fun TextDemo () { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } \u6ce8\u610f \u9700\u8981\u6ce8\u610f\u533a\u5206\u7684\u662f\uff0c TextAlign \u8bbe\u7f6e\u7684\u662f\u6587\u672c\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u65b9\u5411 \u5982\u679c\u9700\u8981\u5b9e\u73b0 TextAlign.Right \u4e2d\u7684\u65b9\u5411\uff0c\u8bf7\u4f7f\u7528 Modifier.align(Alignment.End) \uff0c\u8be6\u60c5\u4f7f\u7528\u65b9\u6cd5\u5728 \u8fd9\u91cc","title":"3. textAlign \u53c2\u6570"},{"location":"elements/text/#4-lineheight","text":"\u4f7f\u7528 lineHeight \u53c2\u6570\u53ef\u4ee5\u8ba9\u6211\u4eec\u6307\u5b9a Text \u4e2d\u6bcf\u884c\u7684\u884c\u9ad8\u95f4\u8ddd Column { Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), ) Spacer ( Modifier . padding ( vertical = 15. dp )) Text ( text = \"\u4e24\u9762\u5305\u5939\u829d\u58eb\" . repeat ( 15 ), lineHeight = 30. sp ) }","title":"4. lineHeight \u53c2\u6570"},{"location":"elements/text/#5-text","text":"\u6709\u7684\u65f6\u5019\u4e5f\u8bb8\u60a8\u9700\u8981\u5c06\u6587\u672c\u5f53\u4f5c\u6309\u94ae\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6dfb\u52a0 Modifier.clickable \u5373\u53ef \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun TextDemo () { Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // TODO }, ) ) }","title":"5. \u53ef\u70b9\u51fb\u7684 Text"},{"location":"elements/text/#_3","text":"\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c clickable \u6709\u81ea\u5e26\u7684\u6ce2\u7eb9\u6548\u679c\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u53d6\u6d88\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\uff1a @Composable fun TextDemo () { // \u83b7\u53d6 context val context = LocalContext . current Text ( text = \"\u786e\u8ba4\u7f16\u8f91\" , modifier = Modifier . clickable ( onClick = { // \u901a\u77e5\u4e8b\u4ef6 Toast . makeText ( context , \"\u4f60\u70b9\u51fb\u4e86\u6b64\u6587\u672c\" , Toast . LENGTH_LONG ). show () }, indication = null , interactionSource = MutableInteractionSource () ) ) } \u6548\u679c\u5982\u4e0b\uff1a","title":"\u53d6\u6d88\u70b9\u51fb\u6ce2\u7eb9"},{"location":"elements/text/#6","text":"\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a Text \u8bed\u53e5\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u6837\u5f0f\uff0c\u6bd4\u5982\u7c97\u4f53\u63d0\u9192\uff0c\u7279\u6b8a\u989c\u8272 \u5219\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 AnnotatedString AnnotatedString \u662f\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\uff1a \u4e00\u4e2a Text \u7684\u503c \u4e00\u4e2a SpanStyleRange \u7684 List \uff0c\u7b49\u540c\u4e8e\u4f4d\u7f6e\u8303\u56f4\u5728\u6587\u5b57\u503c\u5185\u7684\u5185\u5d4c\u6837\u5f0f \u4e00\u4e2a ParagraphStyleRange \u7684 List \uff0c\u7528\u4e8e\u6307\u5b9a\u6587\u5b57\u5bf9\u9f50\u3001\u6587\u5b57\u65b9\u5411\u3001\u884c\u9ad8\u548c\u6587\u5b57\u7f29\u8fdb\u6837\u5f0f inline fun < R : Any > AnnotatedString . Builder . withStyle ( style : SpanStyle , block : AnnotatedString . Builder .() -> crossinline R ): R \u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u6f14\u793a\uff1a @Composable fun TextDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( buildAnnotatedString { append ( \"\u4f60\u73b0\u5728\u89c2\u770b\u7684\u7ae0\u8282\u662f \" ) withStyle ( style = SpanStyle ( fontWeight = FontWeight . W900 )) { append ( \"Text\" ) } } ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"6. \u7279\u5b9a\u7684\u6587\u5b57\u663e\u793a"},{"location":"elements/text/#7-clickabletext","text":"\u5728\u7b2c #6 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 AnnotatedString \u6765\u5b8c\u6210\u5728\u4e00\u4e2a Text \u4e2d\u7ed9\u4e0d\u540c\u7684\u6587\u5b57\u5e94\u7528\u4e0d\u540c\u7684\u6837\u5f0f \u5728\u7b2c #5 \u90e8\u5206\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u901a\u8fc7 Modifier.Clickable() \u6765\u5b8c\u6210\u68c0\u6d4b Text \u7684\u70b9\u51fb \u4f46\u662f Modifier.Clickable() \u65e0\u6cd5\u68c0\u6d4b Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\uff0c\u90a3\u5982\u679c\u6211\u4eec\u9700\u8981\u68c0\u6d4b\u4e00\u4e2a Text \u4e2d\u7684\u90e8\u5206\u70b9\u51fb\u4e8b\u4ef6\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5c31\u50cf\u6211\u4eec\u7ecf\u5e38\u5728 App \u5e95\u4e0b\u770b\u5230\u7684\u7528\u6237\u534f\u8bae\u7b49 \u5176\u5b9e\u5f88\u7b80\u5355\uff0c Compose \u4e5f\u7ed9\u6211\u4eec\u51c6\u5907\u4e86 ClickableText \uff0c\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u5427\uff01 val text = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } } ClickableText ( text = text , onClick = { offset -> Log . d ( TAG , \"Hi\uff0c\u4f60\u6309\u5230\u4e86\u7b2c $ offset \u4f4d\u7684\u6587\u5b57\" ) } ) \u4f46\u662f...\u600e\u4e48\u624d\u80fd\u68c0\u6d4b \u7528\u6237\u534f\u8bae \u8fd9\u56db\u4e2a\u5b57\u7b26\u7684\u70b9\u51fb\u4e8b\u4ef6\u5462\uff1f \u4e5f\u4e0d\u7528\u6015\uff0c Compose \u8fd8\u5728 buildAnnotatedString \u548c ClickableText \u4e2d\u5f15\u5165\u4e86\u76f8\u5e94\u7684\u65b9\u6cd5 \u5148\u6765\u770b\u770b\u4ee3\u7801\u5427\uff01 val annotatedText = buildAnnotatedString { append ( \"\u52fe\u9009\u5373\u4ee3\u8868\u540c\u610f\" ) pushStringAnnotation ( tag = \"tag\" , annotation = \"\u4e00\u4e2a\u7528\u6237\u534f\u8bae\u5566\u5566\u5566\uff0c\u5185\u5bb9\u5185\u5bb9\" ) withStyle ( style = SpanStyle ( color = Color ( 0 xFF0E9FF2 ), fontWeight = FontWeight . Bold ) ) { append ( \"\u7528\u6237\u534f\u8bae\" ) } pop () } ClickableText ( text = annotatedText , onClick = { offset -> annotatedText . getStringAnnotations ( tag = \"tag\" , start = offset , end = offset ). firstOrNull () ?. let { annotation -> Log . d ( TAG , \"\u4f60\u5df2\u7ecf\u70b9\u5230 ${ annotation . item } \u5566\" ) } } ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d \u591a\u4e86\u4e00\u4e2a pushStringAnnotation() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u5c06\u7ed9\u5b9a\u7684\u6ce8\u91ca\u9644\u52a0\u5230\u4efb\u4f55\u9644\u52a0\u7684\u6587\u672c\u4e0a\uff0c\u76f4\u5230\u76f8\u5e94\u7684 pop \u88ab\u8c03\u7528 getStringAnnotations() \u65b9\u6cd5\u662f\u67e5\u8be2\u9644\u52a0\u5728\u8fd9\u4e2a AnnotatedString \u4e0a\u7684\u5b57\u7b26\u4e32\u6ce8\u91ca\u3002\u6ce8\u91ca\u662f\u9644\u52a0\u5728 AnnotatedString \u4e0a\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d \"tag\" \u662f\u9644\u52a0\u5728\u67d0\u4e2a\u8303\u56f4\u4e0a\u7684\u5b57\u7b26\u4e32\u5143\u6570\u636e\u3002\u6ce8\u91ca\u4e5f\u4e0e\u6837\u5f0f\u4e00\u8d77\u5b58\u50a8\u5728 Range \u4e2d","title":"7. \u6587\u5b57\u8d85\u94fe\u63a5\uff1f\uff08ClickableText\uff09"},{"location":"elements/text/#_4","text":"\u90a3\u4e48\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49 Text \u4e2d\u7684\u6837\u5f0f\u548c\u70b9\u51fb\u4e8b\u4ef6\uff0c\u6765\u5c1d\u8bd5\u505a\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u6548\u679c\uff1f \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github","title":"\u5c0f\u8bd5\u725b\u5200"},{"location":"elements/text/#8","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b Text \u5e76\u4e0d\u80fd\u8fdb\u884c\u590d\u5236\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e SelectionContainer \u6765\u5305\u88c5 Text @Composable fun TextDemo () { SelectionContainer { Column { Text ( text = \"\u6bcf\u5929\u6478\u9c7c\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Left ) Text ( text = \"\u8fd9\u597d\u5417\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Center ) Text ( text = \"\u8fd9\u975e\u5e38\u7684\u597d\" , modifier = Modifier . fillMaxWidth (), textAlign = TextAlign . Right ) } } }","title":"8. \u590d\u5236\u6587\u5b57"},{"location":"elements/text/#9","text":"\u6587\u5b57\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u6765\u786e\u5b9a\u6587\u5b57\u7684\u5f3a\u8c03\u7a0b\u5ea6\uff0c\u4ee5\u7a81\u51fa\u91cd\u70b9\u5e76\u4f53\u73b0\u51fa\u89c6\u89c9\u4e0a\u7684\u5c42\u6b21\u611f\u3002 Material Design \u5efa\u8bae\u91c7\u7528\u4e0d\u540c\u7684\u4e0d\u900f\u660e\u5ea6\u6765\u4f20\u8fbe\u8fd9\u4e9b\u4e0d\u540c\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 LocalContentAlpha \u5b9e\u73b0\u6b64\u529f\u80fd\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6b64 CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u6765\u4e3a\u5c42\u6b21\u7ed3\u6784\u6307\u5b9a\u5185\u5bb9 Alpha \u503c\u3002\uff08 CompositionLocal \u662f\u4e00\u4e2a\u7528\u4e8e\u9690\u5f0f\u7684\u4f20\u9012\u53c2\u6570\u7684\u7ec4\u4ef6\uff0c\u540e\u7eed\u4f1a\u8bb2\u5230\uff09 // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u9ad8 // \u6ce8\u610f: MaterialTheme \u5df2\u7ecf\u9ed8\u8ba4\u5c06\u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a high CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . high ) { Text ( \"\u8fd9\u91cc\u662fhigh\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u4e2d CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . medium ) { Text ( \"\u8fd9\u91cc\u662fmedium\u5f3a\u8c03\u6548\u679c\" ) } // \u5c06\u5185\u90e8 Text \u7ec4\u4ef6\u7684 alpha \u5f3a\u8c03\u7a0b\u5ea6\u8bbe\u7f6e\u4e3a\u7981\u7528 CompositionLocalProvider ( LocalContentAlpha provides ContentAlpha . disabled ) { Icon ( \"\u8fd9\u91cc\u662f\u7981\u7528\u540e\u7684\u6548\u679c\" ) } \u8fd9\u662f\u8fd0\u884c\u6548\u679c: \u8fd9\u5f20\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8bf4\u660e\u8fd9\u4e2a\u6548\u679c","title":"9. \u6587\u5b57\u5f3a\u8c03\u6548\u679c"},{"location":"elements/text/#10","text":"Text \u53c2\u6570\u8be6\u60c5 Text \u4e00\u4e9b\u7528\u6cd5","title":"10. \u66f4\u591a"},{"location":"elements/textfield/","text":"textfield \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6846\u3002 \u4e00\u4e2a\u7b80\u5355\u4f7f\u7528\u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a import androidx.compose.runtime.* @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it } ) } 1. singleLine \u53c2\u6570 \u4f7f\u7528 singleLine \u53c2\u6570\u53ef\u4ee5\u5c06 TextField \u8bbe\u7f6e\u6210\u53ea\u6709\u4e00\u884c \u8bbe\u7f6e\u4e86 singleLine \u518d\u8bbe\u7f6e maxLines \u5c06\u65e0\u6548 @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it }, singleLine = true ) } 2. label \u53c2\u6570 label \u6807\u7b7e\u53ef\u4ee5\u8fd0\u7528\u5728 TextField \u4e2d\uff0c\u5f53\u805a\u7126\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u5b57\u4f53\u5927\u5c0f @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { TextField ( value = text , onValueChange = { text = it }, singleLine = true , label = { Text ( \"\u90ae\u7bb1\" ) } ) } } \u66f4\u591a TextField \u53c2\u6570\u8be6\u60c5","title":"TextField"},{"location":"elements/textfield/#1-singleline","text":"\u4f7f\u7528 singleLine \u53c2\u6570\u53ef\u4ee5\u5c06 TextField \u8bbe\u7f6e\u6210\u53ea\u6709\u4e00\u884c \u8bbe\u7f6e\u4e86 singleLine \u518d\u8bbe\u7f6e maxLines \u5c06\u65e0\u6548 @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} TextField ( value = text , onValueChange = { text = it }, singleLine = true ) }","title":"1. singleLine \u53c2\u6570"},{"location":"elements/textfield/#2-label","text":"label \u6807\u7b7e\u53ef\u4ee5\u8fd0\u7528\u5728 TextField \u4e2d\uff0c\u5f53\u805a\u7126\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u5b57\u4f53\u5927\u5c0f @Composable fun TextFieldDemo () { var text by remember { mutableStateOf ( \"\" )} Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { TextField ( value = text , onValueChange = { text = it }, singleLine = true , label = { Text ( \"\u90ae\u7bb1\" ) } ) } }","title":"2. label \u53c2\u6570"},{"location":"elements/textfield/#_1","text":"TextField \u53c2\u6570\u8be6\u60c5","title":"\u66f4\u591a"},{"location":"layout/column/","text":"Column \u662f Jetpack Compose \u4e2d\u4e00\u4e2a\u5f88\u57fa\u672c\u7684\u5e03\u5c40\u79cd\u7c7b\uff0c\u5b83\u4f1a\u5c06\u91cc\u9762\u7684 \u6bcf\u4e2a \u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0 @Composable inline fun Column ( modifier : Modifier = Modifier , verticalArrangement : Arrangement . Vertical = Arrangement . Top , horizontalAlignment : Alignment . Horizontal = Alignment . Start , content : ColumnScope .() -> Unit ): Unit 1. Text \u5728 Column \u91cc\u9762\u7684\u4f7f\u7528 class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ColumnDemo () } } } @Composable fun ColumnDemo () { Column { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } \u6548\u679c\u5982\u4e0b\uff1a 1.\u5c45\u4e2d\u6587\u5b57 \u5982\u679c\u6211\u4eec\u9700\u8981\u5c06 Column \u91cc\u9762\u7684\u6587\u5b57\u5c45\u4e2d\u8be5\u600e\u4e48\u529e\u5462\uff1f \u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0 modifier \u548c horizontalAlignment \u53c2\u6570 \u4ee3\u7801\u5982\u4e0b: @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } // \u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 Modifier.fillMaxWidth() // Column \u7684\u5bbd\u5ea6\u5c06\u53d6\u51b3\u4e8e\u91cc\u9762\u6700\u5bbd\u63a7\u4ef6\u7684\u957f\u5ea6 \u6548\u679c\u5982\u4e0b\uff1a 2.\u7279\u5b9a\u6587\u5b57\u5c45\u4e2d \u5982\u679c\u6211\u4eec\u60f3\u8ba9 Column \u91cc\u9762\u7684\u67d0\u4e9b\u6587\u5b57\u5c45\u4e2d\u800c\u4e0d\u662f\u5168\u90e8\u5c45\u4e2d\u600e\u4e48\u529e \u6211\u4eec\u53ea\u9700\u8981\u5728\u9700\u8981\u5c45\u4e2d\u7684\u6587\u5b57\u7684\u5730\u65b9\u6dfb\u52a0 Modifier.align \u53c2\u6570\uff0c\u5e76\u4e14\u5c06 Column \u7684 modifier \u53c2\u6570\u8bbe\u7f6e\u4e3a fillMaxWidth() \u5373\u53ef\u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth () ){ Text ( text = \"\u591c\u8272\" , modifier = Modifier . align ( Alignment . CenterHorizontally ), style = MaterialTheme . typography . h6 , fontWeight = FontWeight . W900 ) Text ( \"\u4eca\u665a\u7684\u591c\u8272\u5f88\u4e0d\u9519\uff0c\u6211\u548c\u670b\u53cb\u8d70\u5728\u6cb3\u8fb9\u7684\u5c0f\u8def\u4e0a\uff0c\u770b\u5230\u4e86\u5f88\u591a\u7f8e\u4e3d\u7684\u98ce\u666f\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"Column"},{"location":"layout/column/#1-text-column","text":"class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { ColumnDemo () } } } @Composable fun ColumnDemo () { Column { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"1. Text \u5728 Column \u91cc\u9762\u7684\u4f7f\u7528"},{"location":"layout/column/#1","text":"\u5982\u679c\u6211\u4eec\u9700\u8981\u5c06 Column \u91cc\u9762\u7684\u6587\u5b57\u5c45\u4e2d\u8be5\u600e\u4e48\u529e\u5462\uff1f \u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6dfb\u52a0 modifier \u548c horizontalAlignment \u53c2\u6570 \u4ee3\u7801\u5982\u4e0b: @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth (), horizontalAlignment = Alignment . CenterHorizontally ) { Text ( \"\u4f60\u597d\u5440\" ) Text ( \"\u6211\u6b63\u5728\u4f7f\u7528 Android Studio\" ) Text ( \"\u73b0\u5728\u662f\u665a\u4e0a\" ) } } // \u6211\u4eec\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0 Modifier.fillMaxWidth() // Column \u7684\u5bbd\u5ea6\u5c06\u53d6\u51b3\u4e8e\u91cc\u9762\u6700\u5bbd\u63a7\u4ef6\u7684\u957f\u5ea6 \u6548\u679c\u5982\u4e0b\uff1a","title":"1.\u5c45\u4e2d\u6587\u5b57"},{"location":"layout/column/#2","text":"\u5982\u679c\u6211\u4eec\u60f3\u8ba9 Column \u91cc\u9762\u7684\u67d0\u4e9b\u6587\u5b57\u5c45\u4e2d\u800c\u4e0d\u662f\u5168\u90e8\u5c45\u4e2d\u600e\u4e48\u529e \u6211\u4eec\u53ea\u9700\u8981\u5728\u9700\u8981\u5c45\u4e2d\u7684\u6587\u5b57\u7684\u5730\u65b9\u6dfb\u52a0 Modifier.align \u53c2\u6570\uff0c\u5e76\u4e14\u5c06 Column \u7684 modifier \u53c2\u6570\u8bbe\u7f6e\u4e3a fillMaxWidth() \u5373\u53ef\u5b9e\u73b0\u6548\u679c \u4ee3\u7801\u5982\u4e0b\uff1a @Composable fun ColumnDemo () { Column ( modifier = Modifier . fillMaxWidth () ){ Text ( text = \"\u591c\u8272\" , modifier = Modifier . align ( Alignment . CenterHorizontally ), style = MaterialTheme . typography . h6 , fontWeight = FontWeight . W900 ) Text ( \"\u4eca\u665a\u7684\u591c\u8272\u5f88\u4e0d\u9519\uff0c\u6211\u548c\u670b\u53cb\u8d70\u5728\u6cb3\u8fb9\u7684\u5c0f\u8def\u4e0a\uff0c\u770b\u5230\u4e86\u5f88\u591a\u7f8e\u4e3d\u7684\u98ce\u666f\" ) } } \u6548\u679c\u5982\u4e0b\uff1a","title":"2.\u7279\u5b9a\u6587\u5b57\u5c45\u4e2d"},{"location":"layout/custom_layout/","text":"\u6982\u8ff0 Compose \u5df2\u7ecf\u5185\u7f6e\u4e86\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8bf8\u5982 Column\uff0cRow\uff0cBox \u7b49\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u7ec4\u5408\u8fd9\u4e9b\u5df2\u6709\u7684\u7ec4\u4ef6\u6765\u5b9a\u5236\u81ea\u5df1\u7684\u4e13\u5c5e\u7ec4\u4ef6\u3002 \u5c31\u50cf\u5728\u4f20\u7edfView\u7cfb\u7edf\u4e2d\uff0c\u5f53 LinearLayout \u7b49\u57fa\u7840\u5e03\u5c40\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199 measure \u4e0e layout \u6765\u8fbe\u6210\u4f60\u7684\u671f\u671b\u3002Compose \u6cbf\u7528\u4e86\u8fd9\u4e00\u7406\u5ff5\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5982\u679c Compose \u5185\u7f6e\u7ec4\u4ef6\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u5b9a\u5236\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b\u6765\u5b8c\u6210\u9700\u6c42\u3002\u4e8b\u5b9e\u4e0a\uff0cCompose \u5185\u7f6e\u7ec4\u4ef6\u4e5f\u662f\u901a\u8fc7\u5b9a\u5236 Layout \u6765\u8fbe\u6210\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\u3002 \u5728\u5b66\u4e60\u5982\u4f55\u5b9a\u5236 Layout \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e0b Compose \u7684\u5e03\u5c40\u539f\u7406\u3002 Compose \u5e03\u5c40\u539f\u7406 composable \u88ab\u8c03\u7528\u65f6\u4f1a\u5c06\u81ea\u8eab\u5305\u542b\u7684UI\u5143\u7d20\u6dfb\u52a0\u5230UI\u6811\u4e2d\u5e76\u5728\u5c4f\u5e55\u4e0a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u96f6\u81f3\u591a\u4e2a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5bf9\u5176\u7236\u5143\u7d20\u7684\u5185\u90e8\u4f4d\u7f6e\u548c\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u88ab\u8981\u6c42\u6839\u636e\u7236\u5143\u7d20\u7684\u7ea6\u675f\u6765\u8fdb\u884c\u81ea\u6211\u6d4b\u91cf(\u7c7b\u4f3c\u4f20\u7edf View \u4e2d\u7684 MeasureSpec )\uff0c\u7ea6\u675f\u4e2d\u5305\u542b\u4e86\u7236\u5143\u7d20\u5141\u8bb8\u5b50\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u548c\u6700\u5c0f\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\uff0c\u5f53\u7236\u5143\u7d20\u60f3\u8981\u5f3a\u5236\u5b50\u5143\u7d20\u5bbd\u9ad8\u4e3a\u56fa\u5b9a\u503c\u65f6\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5c31\u662f\u76f8\u540c\u7684\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u5b50\u5143\u7d20\u7684UI\u5143\u7d20\uff0c\u9700\u8981\u6d4b\u91cf\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u4ece\u800c\u786e\u5b9a\u5f53\u524dUI\u5143\u7d20\u81ea\u8eab\u7684\u5927\u5c0f\u3002\u5e76\u4e14\u5728\u6bcf\u4e2a\u5b50\u5143\u7d20\u81ea\u6211\u6d4b\u91cf\u540e\uff0c\u5f53\u524dUI\u5143\u7d20\u53ef\u4ee5\u6839\u636e\u5176\u6240\u9700\u8981\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u5728\u81ea\u5df1\u5185\u90e8\u8fdb\u884c\u653e\u7f6e Compose UI \u4e0d\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf \uff0c\u5f53\u524dUI\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u5747\u4e0d\u80fd\u88ab\u91cd\u590d\u8fdb\u884c\u6d4b\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u4e00\u4e2a UI \u5143\u7d20\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\uff0c\u6211\u4eec\u5047\u8bbe\u5bf9\u5b50\u5143\u7d20\u6d4b\u91cf\u4e24\u6b21\uff0c\u800c\u8be5\u5b50\u5143\u7d20\u53ef\u80fd\u53c8\u5bf9\u5176\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u4e24\u6b21\uff0c\u603b\u4f53\u4e0a\u5f53\u524d UI \u5143\u7d20\u91cd\u65b0\u6d4b\u91cf\u4e00\u6b21\uff0c\u5219\u5b59\u5b50\u5143\u7d20\u5c31\u9700\u8981\u6d4b\u91cf\u56db\u6b21\uff0c\u6d4b\u91cf\u6b21\u6570\u4f1a\u968f\u7740\u6df1\u5ea6\u800c\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5e03\u5c40\u6574\u9897 UI \u6811\u90fd\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5f88\u96be\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u826f\u597d\u6027\u80fd\u3002 \u4e3a\u907f\u514d\u4f20\u7edf View \u7cfb\u7edf\u6d4b\u91cf\u5e03\u5c40\u7684\u6027\u80fd\u9677\u9631\uff0cCompose \u9650\u5236\u4e86\u6bcf\u4e2a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u6b21\u6570\uff0c\u53ef\u4ee5\u9ad8\u6548\u5904\u7406\u6df1\u5ea6\u6bd4\u8f83\u5927\u7684 UI \u6811(\u6781\u7aef\u60c5\u51b5\u662f\u9000\u5316\u6210\u94fe\u8868\u7684\u6811\u5f62\u7ed3\u6784)\u3002\u4f46\u662f\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\u662f\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u662f\u9700\u8981\u83b7\u53d6\u5230\u5b50\u5143\u7d20\u591a\u6b21\u6d4b\u91cf\u7684\u4fe1\u606f\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6709\u529e\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002 \u4f7f\u7528 Layout Modifier \u4f7f\u7528 Modifier.layout() \u624b\u52a8\u63a7\u5236\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u3002\u901a\u5e38 layout \u4fee\u9970\u7b26\u7684\u4f7f\u7528\u65b9\u6cd5\u50cf\u4e0b\u9762\u8fd9\u6837\u3002 fun Modifier . customLayoutModifier (...) = Modifier . layout { measurable , constraints -> ... }) \u5f53\u4f7f\u7528 layout \u4fee\u9970\u7b26\u65f6\uff0c\u4f60\u4f20\u5165\u7684\u56de\u8c03 lambda \u9700\u8981\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff1ameasurable\u3001constraints measurable\uff1a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u53e5\u67c4\uff0c\u901a\u8fc7\u63d0\u4f9b\u7684api\u5b8c\u6210\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b constraints: \u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u7ea6\u675f\uff0c\u5305\u62ec\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002 Layout Modifier \u4f7f\u7528\u793a\u4f8b \u6709\u65f6\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u5c55\u793a\u4e00\u6bb5\u6587\u672c\u4fe1\u606f\uff0c\u901a\u5e38\u4f60\u4f1a\u4f7f\u7528\u5230 Compose \u5185\u7f6e\u7684 Text \u7ec4\u4ef6\u3002\u5355\u5355\u663e\u793a\u6587\u672c\u662f\u4e0d\u591f\u7684\uff0c\u4f60\u5e0c\u671b\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u7684\u9ad8\u5ea6\uff0c\u8ba9\u6587\u672c\u770b\u7684\u66f4\u81ea\u7136\u4e00\u4e9b\u3002\u4f7f\u7528\u5185\u7f6e\u7684 padding \u4fee\u9970\u7b26\u662f\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u7684\uff0c\u4ed6\u53ea\u80fd\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u9ad8\u5ea6\uff0c\u6b64\u65f6\u4f60\u5c31\u9700\u8981\u4f7f\u7528\u5230 layout \u4fee\u9970\u7b26\u4e86\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a firstBaselineToTop \u4fee\u9970\u7b26 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... } \u6b63\u5982\u6211\u4eec\u5728 Compose \u5e03\u5c40\u539f\u7406\u4e2d\u6240\u63d0\u5230\u7684\uff0c \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u901a\u8fc7\u4f7f\u7528 measurable.measure(constraints) \u5b8c\u6210\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\uff0c\u5982\u679c\u5c06 lambda \u7684 constraints \u76f4\u63a5\u4f20\u5165\u5219\u610f\u5473\u7740\u4f60\u5c06\u7236\u5143\u7d20\u7ed9\u5f53\u524d\u5143\u7d20\u7684\u9650\u5236\u76f4\u63a5\u63d0\u4f9b\u4e86\u5f53\u524d\u5143\u7d20\u7684\u5b50\u5143\u7d20\uff0c\u81ea\u8eab\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u9650\u5236\u3002\u5b50\u5143\u7d20\u6d4b\u91cf\u7684\u7ed3\u679c\u88ab\u5305\u88c5\u5728\u4e00\u4e2a Placeable \u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u8be5 Placeable \u5b9e\u4f8b\u83b7\u53d6\u5b50\u5143\u7d20\u6d4b\u91cf\u7ed3\u679c\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u4e5f\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) ... } \u73b0\u5728\u5b50\u5143\u7d20\u5df2\u7ecf\u5b8c\u6210\u4e86\u6d4b\u91cf\u6d41\u7a0b\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5143\u7d20\u7684\u6253\u7b97\u5e76\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002\u5e76\u5c06\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\u5199\u5165\u5728 layout(width, height) \u7684 lambda \u53c2\u6570\u4e2d\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u7684\u5bbd\u5ea6\u5219\u662f\u6587\u672c\u5bbd\u5ea6\uff0c\u800c\u9ad8\u5ea6\u5219\u662f\u6211\u4eec\u6307\u5b9a\u7684 Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u9ad8\u5ea6\u4e0e\u6587\u672c\u57fa\u7ebf\u5230 Text \u5e95\u90e8\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { ... } } \u73b0\u5728\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 placeable.placeRelative(x, y) \u6765\u5b8c\u6210\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 placeRelative \u4f1a\u6839\u636e\u5f53\u524d layoutDirection \u81ea\u52a8\u8c03\u6574\u5b50\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u524d\u5b50\u5143\u7d20\u7684\u6a2a\u5411\u5750\u6807\u76f8\u5bf9\u5f53\u524d\u5143\u7d20\u4e3a\u96f6\uff0c\u800c\u7eb5\u5411\u5750\u6807\u5219\u4e3a Text \u7ec4\u4ef6\u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u8ddd\u79bb\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { placeable . placeRelative ( 0 , placeableY ) } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u9884\u89c8\u89c6\u56fe\u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 24. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 24. dp )) } } \u9884\u89c8\u6548\u679c \u4f7f\u7528Layout Composable Layout Modifier \u4f1a\u5c06\u5f53\u524d\u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u89c6\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u7edf\u4e00\u7684\u6d4b\u91cf\u4e0e\u5e03\u5c40\uff0c\u591a\u9002\u7528\u4e8e\u7edf\u4e00\u5904\u7406\u7684\u573a\u666f\u3002\u7136\u800c\u6211\u4eec\u6709\u65f6\u662f\u9700\u8981\u7cbe\u7ec6\u5316\u6d4b\u91cf\u5e03\u5c40\u6bcf\u4e00\u4e2a\u5b50\u7ec4\u4ef6\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u884c\u5b8c\u5168\u7684\u81ea\u5b9a\u4e49 Layout\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u5b9a\u5236 View \u4e0e ViewGroup \u6d4b\u91cf\u5e03\u5c40\u6d41\u7a0b\u7684\u533a\u522b\u3002\u5bf9\u4e8e\u5b9a\u5236 \u201cViewGroup\u201d \u7684\u573a\u666f\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 Layout Composable \u4e86\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a Layout Composable\u3002 @Composable fun CustomLayout ( modifier : Modifier = Modifier , // custom layout attributes content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u53ef\u4ee5\u770b\u5230\uff0cLayout \u9700\u8981\u586b\u5199\u4e09\u4e2a\u53c2\u6570\uff1amodifier\uff0ccontent\uff0cmeasurePolicy modifier \uff1a\u7531\u5916\u90e8\u4f20\u5165\u7684\u4fee\u9970\u7b26\uff0c\u4f1a\u51b3\u5b9a\u8be5 UI \u5143\u7d20\u7684 constraints content \uff1a\u5728 content \u4e2d\u58f0\u660e\u6240\u6709\u5b50\u5143\u7d20\u4fe1\u606f measurePolicy \uff1a\u9ed8\u8ba4\u573a\u666f\u4e0b\u53ea\u5b9e\u73b0 measure \u5373\u53ef\uff0c\u4e0a\u9762\u793a\u4f8b\u4e2d\u6700\u540e\u4f20\u5165\u7684 lambda \u5c31\u662f measure \u7684\u5b9e\u73b0\u3002\u5f53\u4f60\u60f3\u8981\u4e3a\u4f60\u7684 Layout Composable \u9002\u914d Intrinsics \u65f6(\u5b98\u65b9\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u56fa\u6709\u7279\u6027\u6d4b\u91cf)\uff0c\u5219\u9700\u8981\u91cd\u5199 minIntrinsicWidth \u3001 minIntrinsicHeight \u3001 maxIntrinsicWidth \u3001 maxIntrinsicHeight \u65b9\u6cd5\uff0c\u6709\u5173\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6587\u7ae0\u540e\u7eed\u4f1a\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002 Layout Composable\u4f7f\u7528\u793a\u4f8b \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Layout Composable \u5b9a\u5236\u4e00\u4e2a\u81ea\u5df1\u4e13\u5c5e\u7684 Column\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u58f0\u660e\u8fd9\u4e2a Composable\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u548c Layout Modifier \u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u5b50\u7ec4\u4ef6\u8fdb\u884c\u4e00\u6b21\u6d4b\u91cf\u3002 \u5207\u8bb0\uff0c\u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u4e0e Layout Modifier \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684 measurables \u662f\u4e00\u4e2a List\uff0c\u800c Layout Modifier \u5219\u53ea\u662f\u4e00\u4e2a measurable\uff0c\u56e0\u4e3a\u4ed6\u5c06\u6240\u6709\u5b50\u5143\u7d20\u770b\u4f5c\u4e86\u4e00\u4e2a\u6574\u4f53\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4ecd\u7136\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\uff0c\u6700\u7ec8\u5c06\u6bcf\u6b21\u6d4b\u91cf\u7684\u7ed3\u679c\u4fdd\u5b58\u5230 placeables \u8fd9\u4e2a List \u4e2d\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> // Measure each child measurable . measure ( constraints ) } } } \u73b0\u5728\u5728\u5c06\u8fd9\u4e9b\u5b50\u5143\u7d20\u5e03\u5c40\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5b9a\u5236 column \u6240\u5e94\u8be5\u5360\u7528\u7684\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u3002\u8fd9\u6837\u4e3a\u4e86\u51fa\u4e8e\u7b80\u5355\u8003\u8651\uff0c\u9009\u62e9\u5c06\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u5176\u7236\u5143\u7d20\u6240\u5141\u8bb8\u7684\u6700\u5927\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u4e0e Layout Modifier \u4e00\u6837\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> ... layout ( constraints . maxWidth , constraints . maxHeight ) { // Place children } } } \u5177\u4f53\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u4e5f\u4e0e Layout Modifier \u662f\u76f8\u540c\u7684\u3002\u4f5c\u4e3a Column \u662f\u9700\u8981\u5c06\u5b50\u5143\u7d20\u8fdb\u884c\u5782\u76f4\u6392\u5217\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u9700\u6307\u5b9a\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u7684\u9876\u90e8\u76f8\u5bf9\u4f4d\u7f6e\u5373\u53ef\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> measurable . measure ( constraints ) } var yPosition = 0 layout ( constraints . maxWidth , constraints . maxHeight ) { placeables . forEach { placeable -> placeable . placeRelative ( x = 0 , y = yPosition ) yPosition += placeable . height } } } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u9884\u89c8\u89c6\u56fe\uff0c\u521b\u5efa\u81ea\u5df1\u5b9a\u5236\u7684 Column\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5b50\u5143\u7d20\u3002 @Composable fun BodyContent ( modifier : Modifier = Modifier ) { MyOwnColumn ( modifier . padding ( 8. dp )) { Text ( \"MyOwnColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } } \u9884\u89c8\u6548\u679c","title":"\u81ea\u5b9a\u4e49Layout"},{"location":"layout/custom_layout/#_1","text":"Compose \u5df2\u7ecf\u5185\u7f6e\u4e86\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8bf8\u5982 Column\uff0cRow\uff0cBox \u7b49\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u7ec4\u5408\u8fd9\u4e9b\u5df2\u6709\u7684\u7ec4\u4ef6\u6765\u5b9a\u5236\u81ea\u5df1\u7684\u4e13\u5c5e\u7ec4\u4ef6\u3002 \u5c31\u50cf\u5728\u4f20\u7edfView\u7cfb\u7edf\u4e2d\uff0c\u5f53 LinearLayout \u7b49\u57fa\u7840\u5e03\u5c40\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u65f6\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199 measure \u4e0e layout \u6765\u8fbe\u6210\u4f60\u7684\u671f\u671b\u3002Compose \u6cbf\u7528\u4e86\u8fd9\u4e00\u7406\u5ff5\uff0c\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5982\u679c Compose \u5185\u7f6e\u7ec4\u4ef6\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u5b9a\u5236\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b\u6765\u5b8c\u6210\u9700\u6c42\u3002\u4e8b\u5b9e\u4e0a\uff0cCompose \u5185\u7f6e\u7ec4\u4ef6\u4e5f\u662f\u901a\u8fc7\u5b9a\u5236 Layout \u6765\u8fbe\u6210\u7684\uff0c\u53ea\u662f\u4e00\u4e2a\u66f4\u9ad8\u5c42\u6b21\u7684\u5c01\u88c5\u3002 \u5728\u5b66\u4e60\u5982\u4f55\u5b9a\u5236 Layout \u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e0b Compose \u7684\u5e03\u5c40\u539f\u7406\u3002","title":"\u6982\u8ff0"},{"location":"layout/custom_layout/#compose","text":"composable \u88ab\u8c03\u7528\u65f6\u4f1a\u5c06\u81ea\u8eab\u5305\u542b\u7684UI\u5143\u7d20\u6dfb\u52a0\u5230UI\u6811\u4e2d\u5e76\u5728\u5c4f\u5e55\u4e0a\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u96f6\u81f3\u591a\u4e2a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u76f8\u5bf9\u5176\u7236\u5143\u7d20\u7684\u5185\u90e8\u4f4d\u7f6e\u548c\u5c3a\u5bf8\u3002 \u6bcf\u4e2a\u5143\u7d20\u90fd\u4f1a\u88ab\u8981\u6c42\u6839\u636e\u7236\u5143\u7d20\u7684\u7ea6\u675f\u6765\u8fdb\u884c\u81ea\u6211\u6d4b\u91cf(\u7c7b\u4f3c\u4f20\u7edf View \u4e2d\u7684 MeasureSpec )\uff0c\u7ea6\u675f\u4e2d\u5305\u542b\u4e86\u7236\u5143\u7d20\u5141\u8bb8\u5b50\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u548c\u6700\u5c0f\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\uff0c\u5f53\u7236\u5143\u7d20\u60f3\u8981\u5f3a\u5236\u5b50\u5143\u7d20\u5bbd\u9ad8\u4e3a\u56fa\u5b9a\u503c\u65f6\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u5c31\u662f\u76f8\u540c\u7684\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u5b50\u5143\u7d20\u7684UI\u5143\u7d20\uff0c\u9700\u8981\u6d4b\u91cf\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u4ece\u800c\u786e\u5b9a\u5f53\u524dUI\u5143\u7d20\u81ea\u8eab\u7684\u5927\u5c0f\u3002\u5e76\u4e14\u5728\u6bcf\u4e2a\u5b50\u5143\u7d20\u81ea\u6211\u6d4b\u91cf\u540e\uff0c\u5f53\u524dUI\u5143\u7d20\u53ef\u4ee5\u6839\u636e\u5176\u6240\u9700\u8981\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u5728\u81ea\u5df1\u5185\u90e8\u8fdb\u884c\u653e\u7f6e Compose UI \u4e0d\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf \uff0c\u5f53\u524dUI\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u5747\u4e0d\u80fd\u88ab\u91cd\u590d\u8fdb\u884c\u6d4b\u91cf\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4ec0\u4e48\uff1f\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u3002\u5728\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u4e00\u4e2a UI \u5143\u7d20\u5141\u8bb8\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\uff0c\u6211\u4eec\u5047\u8bbe\u5bf9\u5b50\u5143\u7d20\u6d4b\u91cf\u4e24\u6b21\uff0c\u800c\u8be5\u5b50\u5143\u7d20\u53ef\u80fd\u53c8\u5bf9\u5176\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u4e24\u6b21\uff0c\u603b\u4f53\u4e0a\u5f53\u524d UI \u5143\u7d20\u91cd\u65b0\u6d4b\u91cf\u4e00\u6b21\uff0c\u5219\u5b59\u5b50\u5143\u7d20\u5c31\u9700\u8981\u6d4b\u91cf\u56db\u6b21\uff0c\u6d4b\u91cf\u6b21\u6570\u4f1a\u968f\u7740\u6df1\u5ea6\u800c\u6307\u6570\u7ea7\u4e0a\u5347\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5e03\u5c40\u6574\u9897 UI \u6811\u90fd\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\uff0c\u5f88\u96be\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u826f\u597d\u6027\u80fd\u3002 \u4e3a\u907f\u514d\u4f20\u7edf View \u7cfb\u7edf\u6d4b\u91cf\u5e03\u5c40\u7684\u6027\u80fd\u9677\u9631\uff0cCompose \u9650\u5236\u4e86\u6bcf\u4e2a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u6b21\u6570\uff0c\u53ef\u4ee5\u9ad8\u6548\u5904\u7406\u6df1\u5ea6\u6bd4\u8f83\u5927\u7684 UI \u6811(\u6781\u7aef\u60c5\u51b5\u662f\u9000\u5316\u6210\u94fe\u8868\u7684\u6811\u5f62\u7ed3\u6784)\u3002\u4f46\u662f\u5728\u6709\u4e9b\u573a\u666f\u4e0b\uff0c\u591a\u6b21\u6d4b\u91cf\u5b50\u5143\u7d20\u662f\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u662f\u9700\u8981\u83b7\u53d6\u5230\u5b50\u5143\u7d20\u591a\u6b21\u6d4b\u91cf\u7684\u4fe1\u606f\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6709\u529e\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u3002","title":"Compose \u5e03\u5c40\u539f\u7406"},{"location":"layout/custom_layout/#layout-modifier","text":"\u4f7f\u7528 Modifier.layout() \u624b\u52a8\u63a7\u5236\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u3002\u901a\u5e38 layout \u4fee\u9970\u7b26\u7684\u4f7f\u7528\u65b9\u6cd5\u50cf\u4e0b\u9762\u8fd9\u6837\u3002 fun Modifier . customLayoutModifier (...) = Modifier . layout { measurable , constraints -> ... }) \u5f53\u4f7f\u7528 layout \u4fee\u9970\u7b26\u65f6\uff0c\u4f60\u4f20\u5165\u7684\u56de\u8c03 lambda \u9700\u8981\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff1ameasurable\u3001constraints measurable\uff1a\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u53e5\u67c4\uff0c\u901a\u8fc7\u63d0\u4f9b\u7684api\u5b8c\u6210\u6d4b\u91cf\u4e0e\u5e03\u5c40\u8fc7\u7a0b constraints: \u5b50\u5143\u7d20\u7684\u6d4b\u91cf\u7ea6\u675f\uff0c\u5305\u62ec\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u3002","title":"\u4f7f\u7528 Layout Modifier"},{"location":"layout/custom_layout/#layout-modifier_1","text":"\u6709\u65f6\u4f60\u60f3\u5728\u5c4f\u5e55\u4e0a\u5c55\u793a\u4e00\u6bb5\u6587\u672c\u4fe1\u606f\uff0c\u901a\u5e38\u4f60\u4f1a\u4f7f\u7528\u5230 Compose \u5185\u7f6e\u7684 Text \u7ec4\u4ef6\u3002\u5355\u5355\u663e\u793a\u6587\u672c\u662f\u4e0d\u591f\u7684\uff0c\u4f60\u5e0c\u671b\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u7684\u9ad8\u5ea6\uff0c\u8ba9\u6587\u672c\u770b\u7684\u66f4\u81ea\u7136\u4e00\u4e9b\u3002\u4f7f\u7528\u5185\u7f6e\u7684 padding \u4fee\u9970\u7b26\u662f\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u7684\uff0c\u4ed6\u53ea\u80fd\u6307\u5b9a Text \u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u9ad8\u5ea6\uff0c\u6b64\u65f6\u4f60\u5c31\u9700\u8981\u4f7f\u7528\u5230 layout \u4fee\u9970\u7b26\u4e86\u3002 \u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a firstBaselineToTop \u4fee\u9970\u7b26 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... } \u6b63\u5982\u6211\u4eec\u5728 Compose \u5e03\u5c40\u539f\u7406\u4e2d\u6240\u63d0\u5230\u7684\uff0c \u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u901a\u8fc7\u4f7f\u7528 measurable.measure(constraints) \u5b8c\u6210\u5b50\u5143\u7d20\u7684\u6d4b\u91cf\uff0c\u5982\u679c\u5c06 lambda \u7684 constraints \u76f4\u63a5\u4f20\u5165\u5219\u610f\u5473\u7740\u4f60\u5c06\u7236\u5143\u7d20\u7ed9\u5f53\u524d\u5143\u7d20\u7684\u9650\u5236\u76f4\u63a5\u63d0\u4f9b\u4e86\u5f53\u524d\u5143\u7d20\u7684\u5b50\u5143\u7d20\uff0c\u81ea\u8eab\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u989d\u5916\u7684\u9650\u5236\u3002\u5b50\u5143\u7d20\u6d4b\u91cf\u7684\u7ed3\u679c\u88ab\u5305\u88c5\u5728\u4e00\u4e2a Placeable \u5b9e\u4f8b\u4e2d\uff0c\u53ef\u901a\u8fc7\u8be5 Placeable \u5b9e\u4f8b\u83b7\u53d6\u5b50\u5143\u7d20\u6d4b\u91cf\u7ed3\u679c\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u4e5f\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) ... } \u73b0\u5728\u5b50\u5143\u7d20\u5df2\u7ecf\u5b8c\u6210\u4e86\u6d4b\u91cf\u6d41\u7a0b\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5143\u7d20\u7684\u6253\u7b97\u5e76\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002\u5e76\u5c06\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\u5199\u5165\u5728 layout(width, height) \u7684 lambda \u53c2\u6570\u4e2d\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u5f53\u524d Text \u5143\u7d20\u7684\u5bbd\u5ea6\u5219\u662f\u6587\u672c\u5bbd\u5ea6\uff0c\u800c\u9ad8\u5ea6\u5219\u662f\u6211\u4eec\u6307\u5b9a\u7684 Text \u9876\u90e8\u5230\u6587\u672c\u57fa\u7ebf\u9ad8\u5ea6\u4e0e\u6587\u672c\u57fa\u7ebf\u5230 Text \u5e95\u90e8\u7684\u9ad8\u5ea6\u4e4b\u548c\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> val placeable = measurable . measure ( constraints ) check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { ... } } \u73b0\u5728\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 placeable.placeRelative(x, y) \u6765\u5b8c\u6210\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u6d41\u7a0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\u3002 placeRelative \u4f1a\u6839\u636e\u5f53\u524d layoutDirection \u81ea\u52a8\u8c03\u6574\u5b50\u5143\u7d20\u7684\u4f4d\u7f6e\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5f53\u524d\u5b50\u5143\u7d20\u7684\u6a2a\u5411\u5750\u6807\u76f8\u5bf9\u5f53\u524d\u5143\u7d20\u4e3a\u96f6\uff0c\u800c\u7eb5\u5411\u5750\u6807\u5219\u4e3a Text \u7ec4\u4ef6\u9876\u90e8\u5230\u6587\u672c\u9876\u90e8\u7684\u8ddd\u79bb\u3002 fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = Modifier . layout { measurable , constraints -> ... val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { placeable . placeRelative ( 0 , placeableY ) } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u9884\u89c8\u89c6\u56fe\u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 24. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { LayoutsCodelabTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 24. dp )) } } \u9884\u89c8\u6548\u679c","title":"Layout Modifier \u4f7f\u7528\u793a\u4f8b"},{"location":"layout/custom_layout/#layout-composable","text":"Layout Modifier \u4f1a\u5c06\u5f53\u524d\u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u89c6\u4f5c\u4e3a\u6574\u4f53\u8fdb\u884c\u7edf\u4e00\u7684\u6d4b\u91cf\u4e0e\u5e03\u5c40\uff0c\u591a\u9002\u7528\u4e8e\u7edf\u4e00\u5904\u7406\u7684\u573a\u666f\u3002\u7136\u800c\u6211\u4eec\u6709\u65f6\u662f\u9700\u8981\u7cbe\u7ec6\u5316\u6d4b\u91cf\u5e03\u5c40\u6bcf\u4e00\u4e2a\u5b50\u7ec4\u4ef6\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u8fdb\u884c\u5b8c\u5168\u7684\u81ea\u5b9a\u4e49 Layout\u3002\u8fd9\u7c7b\u4f3c\u4e8e\u4f20\u7edf View \u7cfb\u7edf\u4e2d\u5b9a\u5236 View \u4e0e ViewGroup \u6d4b\u91cf\u5e03\u5c40\u6d41\u7a0b\u7684\u533a\u522b\u3002\u5bf9\u4e8e\u5b9a\u5236 \u201cViewGroup\u201d \u7684\u573a\u666f\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 Layout Composable \u4e86\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a Layout Composable\u3002 @Composable fun CustomLayout ( modifier : Modifier = Modifier , // custom layout attributes content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u53ef\u4ee5\u770b\u5230\uff0cLayout \u9700\u8981\u586b\u5199\u4e09\u4e2a\u53c2\u6570\uff1amodifier\uff0ccontent\uff0cmeasurePolicy modifier \uff1a\u7531\u5916\u90e8\u4f20\u5165\u7684\u4fee\u9970\u7b26\uff0c\u4f1a\u51b3\u5b9a\u8be5 UI \u5143\u7d20\u7684 constraints content \uff1a\u5728 content \u4e2d\u58f0\u660e\u6240\u6709\u5b50\u5143\u7d20\u4fe1\u606f measurePolicy \uff1a\u9ed8\u8ba4\u573a\u666f\u4e0b\u53ea\u5b9e\u73b0 measure \u5373\u53ef\uff0c\u4e0a\u9762\u793a\u4f8b\u4e2d\u6700\u540e\u4f20\u5165\u7684 lambda \u5c31\u662f measure \u7684\u5b9e\u73b0\u3002\u5f53\u4f60\u60f3\u8981\u4e3a\u4f60\u7684 Layout Composable \u9002\u914d Intrinsics \u65f6(\u5b98\u65b9\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u56fa\u6709\u7279\u6027\u6d4b\u91cf)\uff0c\u5219\u9700\u8981\u91cd\u5199 minIntrinsicWidth \u3001 minIntrinsicHeight \u3001 maxIntrinsicWidth \u3001 maxIntrinsicHeight \u65b9\u6cd5\uff0c\u6709\u5173\u4e8e\u56fa\u6709\u7279\u6027\u6d4b\u91cf\u7684\u6587\u7ae0\u540e\u7eed\u4f1a\u66f4\u65b0\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002","title":"\u4f7f\u7528Layout Composable"},{"location":"layout/custom_layout/#layout-composable_1","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Layout Composable \u5b9a\u5236\u4e00\u4e2a\u81ea\u5df1\u4e13\u5c5e\u7684 Column\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u58f0\u660e\u8fd9\u4e2a Composable\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> // measure and position children given constraints logic here } } \u548c Layout Modifier \u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6240\u6709\u5b50\u7ec4\u4ef6\u8fdb\u884c\u4e00\u6b21\u6d4b\u91cf\u3002 \u5207\u8bb0\uff0c\u6bcf\u4e2a\u5b50\u5143\u7d20\u53ea\u5141\u8bb8\u88ab\u6d4b\u91cf\u4e00\u6b21 \u3002 \u4e0e Layout Modifier \u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684 measurables \u662f\u4e00\u4e2a List\uff0c\u800c Layout Modifier \u5219\u53ea\u662f\u4e00\u4e2a measurable\uff0c\u56e0\u4e3a\u4ed6\u5c06\u6240\u6709\u5b50\u5143\u7d20\u770b\u4f5c\u4e86\u4e00\u4e2a\u6574\u4f53\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u4ecd\u7136\u4e0d\u5bf9\u5b50\u5143\u7d20\u8fdb\u884c\u989d\u5916\u9650\u5236\uff0c\u6700\u7ec8\u5c06\u6bcf\u6b21\u6d4b\u91cf\u7684\u7ed3\u679c\u4fdd\u5b58\u5230 placeables \u8fd9\u4e2a List \u4e2d\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> // Measure each child measurable . measure ( constraints ) } } } \u73b0\u5728\u5728\u5c06\u8fd9\u4e9b\u5b50\u5143\u7d20\u5e03\u5c40\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u5b9a\u5236 column \u6240\u5e94\u8be5\u5360\u7528\u7684\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u3002\u8fd9\u6837\u4e3a\u4e86\u51fa\u4e8e\u7b80\u5355\u8003\u8651\uff0c\u9009\u62e9\u5c06\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8bbe\u7f6e\u4e3a\u5176\u7236\u5143\u7d20\u6240\u5141\u8bb8\u7684\u6700\u5927\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u4e0e Layout Modifier \u4e00\u6837\u901a\u8fc7 layout(width, height) \u65b9\u6cd5\u5bf9\u5f53\u524d\u5143\u7d20\u7684\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u8fdb\u884c\u6307\u5b9a\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> ... layout ( constraints . maxWidth , constraints . maxHeight ) { // Place children } } } \u5177\u4f53\u5b50\u5143\u7d20\u7684\u5e03\u5c40\u4e5f\u4e0e Layout Modifier \u662f\u76f8\u540c\u7684\u3002\u4f5c\u4e3a Column \u662f\u9700\u8981\u5c06\u5b50\u5143\u7d20\u8fdb\u884c\u5782\u76f4\u6392\u5217\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u9700\u6307\u5b9a\u6bcf\u4e00\u4e2a\u5b50\u5143\u7d20\u7684\u9876\u90e8\u76f8\u5bf9\u4f4d\u7f6e\u5373\u53ef\u3002 @Composable fun MyOwnColumn ( modifier : Modifier = Modifier , content : @Composable () -> Unit ) { Layout ( modifier = modifier , content = content ) { measurables , constraints -> val placeables = measurables . map { measurable -> measurable . measure ( constraints ) } var yPosition = 0 layout ( constraints . maxWidth , constraints . maxHeight ) { placeables . forEach { placeable -> placeable . placeRelative ( x = 0 , y = yPosition ) yPosition += placeable . height } } } } \u4e3a\u9884\u89c8\u5e03\u5c40\u7ed3\u679c\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u9884\u89c8\u89c6\u56fe\uff0c\u521b\u5efa\u81ea\u5df1\u5b9a\u5236\u7684 Column\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5b50\u5143\u7d20\u3002 @Composable fun BodyContent ( modifier : Modifier = Modifier ) { MyOwnColumn ( modifier . padding ( 8. dp )) { Text ( \"MyOwnColumn\" ) Text ( \"places items\" ) Text ( \"vertically.\" ) Text ( \"We've done it by hand!\" ) } } \u9884\u89c8\u6548\u679c","title":"Layout Composable\u4f7f\u7528\u793a\u4f8b"},{"location":"layout/modalbottomsheetlayout/","text":"1. ModalBottomSheetLayout \u6982\u8ff0 ModalBottomSheetLayout \u5448\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u9009\u62e9\uff0c\u540c\u65f6\u963b\u6b62\u4e86\u4e0e\u5c4f\u5e55\u5176\u4ed6\u90e8\u5206\u7684\u4e92\u52a8\u3002 \u5b83\u4eec\u662f\u79fb\u52a8\u7aef\u4e0a\u5185\u5d4c\u5f0f\u83dc\u5355\u548c\u7b80\u5355\u5bf9\u8bdd\u6846\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4e3a\u5185\u5bb9\u3001\u56fe\u6807\u548c\u64cd\u4f5c\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u7a7a\u95f4 ModalSheetLayout \u603b\u5171\u6709\u4e09\u79cd\u72b6\u6001\uff1a Hidden HalfExpanded Expanded \u4e00\u4e2a\u7b80\u5355\u7684 ModalBottomSheetLayout \u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a val state = rememberModalBottomSheetState ( ModalBottomSheetValue . Hidden ) val scope = rememberCoroutineScope () ModalBottomSheetLayout ( sheetState = state , sheetContent = { Column { ListItem ( text = { Text ( \"\u9009\u62e9\u5206\u4eab\u5230\u54ea\u91cc\u5427~\" )}) ListItem ( text = { Text ( \"github\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF181717 ) ) { Icon ( painterResource ( R . drawable . github ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) ListItem ( text = { Text ( \"\u5fae\u4fe1\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF07C160 ) ) { Icon ( painterResource ( R . drawable . wechat ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) } } ) { Column ( modifier = Modifier . fillMaxSize () . padding ( 16. dp ), horizontalAlignment = Alignment . CenterHorizontally ) { Button ( onClick = { scope . launch { state . show () } }) { Text ( \"\u70b9\u6211\u5c55\u5f00\" ) } } } \u6ce8\u610f \u76ee\u524d\u4f7f\u7528 ModalBottomSheetLayout \u9700\u8981\u6807\u660e @ExperimentalMaterialApi 2. \u6536\u56de ModalBottomSheet \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c ModalBottomSheet \u65e0\u6cd5\u81ea\u52a8\u5904\u7406\u6309\u4e0b\u8fd4\u56de\u952e\u5c31\u6536\u8d77\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 BackHandler \u6765\u5904\u7406 \u5728 ModalBottomSheet \u540e\u6dfb\u52a0\u4ee3\u7801\uff1a BackHandler ( enabled = ( state . currentValue == ModalBottomSheetValue . HalfExpanded || state . currentValue == ModalBottomSheetValue . Expanded ), onBack = { scope . launch { state . hide () } } ) 3. \u8bbe\u7f6e\u52a8\u753b\u65f6\u95f4 ModalSheetLayout \u9ed8\u8ba4\u7528 state.show() \u6216\u8005 state.hidden() \u6765\u5f39\u51fa\u548c\u6536\u56de \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u52a8\u753b\u65f6\u95f4 state . animateTo ( ModalBottomSheetValue . Hidden , tween ( 1000 )) \u5f39\u51fa\u540c\u7406 4. \u66f4\u591a ModalBottomSheet \u53c2\u6570\u8be6\u60c5","title":"ModalBottomSheetLayout"},{"location":"layout/modalbottomsheetlayout/#1-modalbottomsheetlayout","text":"ModalBottomSheetLayout \u5448\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u9009\u62e9\uff0c\u540c\u65f6\u963b\u6b62\u4e86\u4e0e\u5c4f\u5e55\u5176\u4ed6\u90e8\u5206\u7684\u4e92\u52a8\u3002 \u5b83\u4eec\u662f\u79fb\u52a8\u7aef\u4e0a\u5185\u5d4c\u5f0f\u83dc\u5355\u548c\u7b80\u5355\u5bf9\u8bdd\u6846\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u4e3a\u5185\u5bb9\u3001\u56fe\u6807\u548c\u64cd\u4f5c\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u7a7a\u95f4 ModalSheetLayout \u603b\u5171\u6709\u4e09\u79cd\u72b6\u6001\uff1a Hidden HalfExpanded Expanded \u4e00\u4e2a\u7b80\u5355\u7684 ModalBottomSheetLayout \u7684\u4f8b\u5b50\u662f\u8fd9\u6837\u7684\uff1a val state = rememberModalBottomSheetState ( ModalBottomSheetValue . Hidden ) val scope = rememberCoroutineScope () ModalBottomSheetLayout ( sheetState = state , sheetContent = { Column { ListItem ( text = { Text ( \"\u9009\u62e9\u5206\u4eab\u5230\u54ea\u91cc\u5427~\" )}) ListItem ( text = { Text ( \"github\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF181717 ) ) { Icon ( painterResource ( R . drawable . github ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) ListItem ( text = { Text ( \"\u5fae\u4fe1\" )}, icon = { Surface ( shape = CircleShape , color = Color ( 0 xFF07C160 ) ) { Icon ( painterResource ( R . drawable . wechat ), null , tint = Color . White , modifier = Modifier . padding ( 4. dp ) ) } }, modifier = Modifier . clickable { }) } } ) { Column ( modifier = Modifier . fillMaxSize () . padding ( 16. dp ), horizontalAlignment = Alignment . CenterHorizontally ) { Button ( onClick = { scope . launch { state . show () } }) { Text ( \"\u70b9\u6211\u5c55\u5f00\" ) } } } \u6ce8\u610f \u76ee\u524d\u4f7f\u7528 ModalBottomSheetLayout \u9700\u8981\u6807\u660e @ExperimentalMaterialApi","title":"1. ModalBottomSheetLayout \u6982\u8ff0"},{"location":"layout/modalbottomsheetlayout/#2-modalbottomsheet","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c ModalBottomSheet \u65e0\u6cd5\u81ea\u52a8\u5904\u7406\u6309\u4e0b\u8fd4\u56de\u952e\u5c31\u6536\u8d77\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 BackHandler \u6765\u5904\u7406 \u5728 ModalBottomSheet \u540e\u6dfb\u52a0\u4ee3\u7801\uff1a BackHandler ( enabled = ( state . currentValue == ModalBottomSheetValue . HalfExpanded || state . currentValue == ModalBottomSheetValue . Expanded ), onBack = { scope . launch { state . hide () } } )","title":"2. \u6536\u56de ModalBottomSheet"},{"location":"layout/modalbottomsheetlayout/#3","text":"ModalSheetLayout \u9ed8\u8ba4\u7528 state.show() \u6216\u8005 state.hidden() \u6765\u5f39\u51fa\u548c\u6536\u56de \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u52a8\u753b\u65f6\u95f4 state . animateTo ( ModalBottomSheetValue . Hidden , tween ( 1000 )) \u5f39\u51fa\u540c\u7406","title":"3. \u8bbe\u7f6e\u52a8\u753b\u65f6\u95f4"},{"location":"layout/modalbottomsheetlayout/#4","text":"ModalBottomSheet \u53c2\u6570\u8be6\u60c5","title":"4. \u66f4\u591a"},{"location":"layout/overview/","text":"Layouts in Compose \u672c\u7ae0\u8282\u7ffb\u8bd1\u81ea \u5b98\u65b9\u6587\u6863 \u5e76\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca \u5982\u6709\u7ffb\u8bd1\u4e0d\u51c6\u786e\u6b22\u8fce\u63d0\u4ea4 issue / pr Jetpack Compose \u8ba9\u8bbe\u8ba1\u548c\u6784\u5efa\u4f60\u7684 app UI \u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u8fd9\u7bc7\u6587\u6863\u89e3\u91ca\u4e86 Compose \u63d0\u4f9b\u7684\u4e00\u4e9b\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5e03\u7f6e\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u544a\u8bc9\u4f60\u5982\u4f55\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u5efa\u7acb\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 Composable \u51fd\u6570\u662f Compose \u7684\u57fa\u672c\u6784\u5efa\u6a21\u5757\uff0c\u4e00\u4e2a Composable \u7684\u51fd\u6570\u662f\u4e00\u4e2a emitting Unit (\u901a\u8fc7\u58f0\u660e\u5f0f\u7684\u8bed\u6cd5\u53bb\u663e\u793a\u51fa\u4e00\u4e2a\u754c\u9762\u5143\u7d20\uff1f) \u7684\u51fd\u6570\uff0c\u63cf\u8ff0\u4f60\u7684\u7528\u6237\u754c\u9762\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002 \u4e00\u4e2a Composable \u51fd\u6570\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a UI \u5143\u7d20\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u544a\u8bc9\u5b83\u4eec\u5e94\u8be5\u5982\u4f55\u88ab\u6392\u5217\uff0c Compose \u53ef\u80fd\u4e0d\u4f1a\u6309\u7167\u4f60\u6240\u60f3\u7684\u65b9\u5f0f\u6765\u6392\u5217\u5b83\u4eec\u3002 \u4f8b\u5982\uff0c\u8fd9\u6bb5\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a Text \u5143\u7d20 @Composable fun ArtistCard () { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } \u5728\u4f60\u6ca1\u6709\u6392\u5217\u5b83\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c Compose \u4f1a\u5c06 Text \u5143\u7d20\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u53d8\u5f97\u65e0\u6cd5\u9605\u8bfb\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u73b0\u6210\u7684\u5e03\u5c40\u96c6\u5408\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5b89\u6392\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u4f7f\u4f60\u66f4\u5bb9\u6613\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u3001\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 1. \u6807\u51c6\u5e03\u5c40\u7ec4\u4ef6 \u4f7f\u7528 Column \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0\u3002 @Composable fun ArtistCard () { Column { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } } \u540c\u6837\u5730\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Row , \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u5217\u7684\u5f62\u5f0f\u5448\u73b0\u3002 Column \u548c Row \u90fd\u652f\u6301\u914d\u7f6e\u5b83\u4eec\u6240\u5305\u542b\u7684\u5143\u7d20\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002 @Composable fun ArtistCard ( artist : Artist ) { Row ( verticalAlignment = Alignment . CenterVertically ) { Image ( /*...*/ ) Column { Text ( artist . name ) Text ( artist . lastSeenOnline ) } } } \u6ce8\u610f \u56fe\u4e2d\u7684\u5706\u5f62\u56fe\u50cf\u7684\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Image \u4e2d\u5b9e\u73b0\u3002 \u56fe\u4e2d\u7684\u6587\u5b57\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Text \u4e2d\u5b9e\u73b0\u3002 \u5173\u4e8e Row \u7684\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 Tips \u6ce8\u610f\uff1aCompose \u6709\u6548\u5730\u5904\u7406\u5d4c\u5957\u5e03\u5c40\uff0c\u4f7f\u5176\u6210\u4e3a\u8bbe\u8ba1\u590d\u6742UI\u7684\u597d\u65b9\u6cd5\u3002\u8fd9\u662f\u5bf9 Android Views \u7684\u6539\u8fdb\uff0c\u5728 Android Views \u4e2d\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u60a8\u9700\u8981\u907f\u514d\u5d4c\u5957\u5e03\u5c40\u3002 \u5982\u679c\u60f3\u8981\u5728 Row \u4e2d\u8bbe\u7f6e\u5b50\u9879\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e horizontalArrangement \u548c verticalAlignment \u53c2\u6570\uff0c \u5bf9\u4e8e Column \u6765\u8bf4\uff0c\u8bbe\u7f6e verticalArrangement \u548c horizontalAlignment \u3002 @Composable fun AlignInRow () { Row ( modifier = Modifier . size ( 150. dp ) . background ( Color . Yellow ), horizontalArrangement = Arrangement . End , // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u6c34\u5e73\u5e03\u5c40\u4e3a\u6700\u53f3\u8fb9 verticalAlignment = Alignment . CenterVertically // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u7ad6\u76f4\u5e03\u5c40\u4e3a\u4e2d\u5fc3 // start \u5de6\u8fb9 // end \u53f3\u8fb9 // top \u4e0a\u8fb9 // bottom \u4e0b\u8fb9 ) { Box ( Modifier . size ( 50. dp ). background ( Color . Red )) Box ( Modifier . size ( 50. dp ). background ( Color . Blue )) } } 2. Modifier Modifier \u5141\u8bb8\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \uff0c Modifier \u5141\u8bb8\u4f60\u505a\u4ee5\u4e0b\u7684\u4e8b\u60c5\u3002 \u6539\u53d8 Composable \u7684\u5927\u5c0f\u3001\u5e03\u5c40\u3001\u884c\u4e3a\u548c\u5916\u89c2\u3002 \u6dfb\u52a0\u4fe1\u606f\uff0c\u5982\u65e0\u969c\u788d\u6807\u7b7e\u3002 \u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3002 \u6dfb\u52a0\u9ad8\u5c42\u6b21\u7684\u4ea4\u4e92\uff0c\u6bd4\u5982\u8ba9\u4e00\u4e2a\u5143\u7d20\u53ef\u70b9\u51fb\u3001\u53ef\u6eda\u52a8\u3001\u53ef\u62d6\u52a8\u6216\u53ef\u7f29\u653e\u3002 \u4fee\u6539\u5668\u662f\u6807\u51c6\u7684 Kotlin \u5bf9\u8c61\u3002\u901a\u8fc7\u8c03\u7528 Modifier \u7c7b\u7684\u4e00\u4e2a\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a modifier \u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u51fd\u6570\u4e32\u8054\u8d77\u6765\uff0c\u7ec4\u6210\u5b83\u4eec\uff1a @Composable fun ArtistCard ( artist : Artist , onClick : () -> Unit ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { Row ( verticalAlignment = Alignment . CenterVertically ) { /*...*/ } Spacer ( Modifier . size ( padding )) Card ( elevation = 4. dp ) { /*...*/ } } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e0d\u540c\u7684 modifier \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 clickable \u4f7f\u4e00\u4e2a Composable \u5143\u7d20\u5bf9\u7528\u6237\u7684\u70b9\u51fb\u4f5c\u51fa\u53cd\u5e94\uff0c\u5e76\u663e\u793a\u4e00\u4e2a\u6ce2\u7eb9\u3002 padding \u5728\u4e00\u4e2a\u5143\u7d20\u7684\u5468\u56f4\u586b\u5145\u4e86\u7a7a\u95f4\u3002 fillMaxWidth \u8ba9 Composable \u5143\u7d20\u586b\u6ee1\u5176\u7236\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 size() \u6765\u6307\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u6ce8\u610f \u5728\u5176\u4ed6\u65b9\u9762\uff0c Modifier \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u57fa\u4e8e view \u5e03\u5c40\u4e2d\u7684\u5e03\u5c40\u53c2\u6570\u3002\u7136\u800c\uff0c\u7531\u4e8e Modifier \u6709\u65f6\u662f\u7279\u5b9a\u8303\u56f4\u7684\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\uff0c\u4e5f\u5e2e\u52a9\u4f60\u53d1\u73b0\u548c\u7406\u89e3\u4ec0\u4e48\u662f\u53ef\u7528\u7684\uff0c\u9002\u7528\u4e8e\u67d0\u4e2a\u5e03\u5c40\u3002\u5bf9\u4e8e XML \u5e03\u5c40\uff0c\u6709\u65f6\u5f88\u96be\u53d1\u73b0\u67d0\u4e2a\u7279\u5b9a\u7684\u5e03\u5c40\u5c5e\u6027\u662f\u5426\u9002\u7528\u4e8e\u67d0\u4e2a\u89c6\u56fe\u3002 Modifier \u51fd\u6570\u7684\u987a\u5e8f\u662f\u5f88 \u91cd\u8981 \u7684\u3002\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u5bf9\u524d\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u4fee\u6539\u5668\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { // rest of the implementation } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6574\u4e2a\u533a\u57df\u90fd\u662f\u53ef\u70b9\u51fb\u7684\uff0c\u5305\u62ec\u5468\u56f4\u7684\u586b\u5145\u7269\uff0c\u56e0\u4e3a padding modifier \u88ab\u5e94\u7528\u5728 clickable \u4e4b\u540e\u3002\u5982\u679c modifier \u7684\u987a\u5e8f\u98a0\u5012\u4e86\uff0c\u90a3\u4e48\u7531 padding \u589e\u52a0\u7684\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u3002 @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . padding ( padding ) . clickable ( onClick = onClick ) . fillMaxWidth () ) { // rest of the implementation } } \u6ce8\u610f \u660e\u786e\u987a\u5e8f\u6709\u52a9\u4e8e\u4f60\u63a8\u7406\u4e0d\u540c\u7684 Modifier \u5c06\u5982\u4f55\u76f8\u4e92\u4f5c\u7528\u3002\u4e0e\u57fa\u4e8e view \u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u4f60\u5fc5\u987b\u5b66\u4e60\u76d2\u5b50\u6a21\u578b\uff0c\u5373\u5728\u5143\u7d20\u7684 \"\u5916\u9762\" \u5e94\u7528 margin \uff0c\u800c\u5728 \"\u91cc\u9762 \"\u5e94\u7528 pading \uff0c\u80cc\u666f\u5143\u7d20\u4f1a\u6709\u76f8\u5e94\u7684\u5927\u5c0f Modifier \u7684\u8bbe\u8ba1\u4f7f\u8fd9\u79cd\u884c\u4e3a\u53d8\u5f97\u660e\u786e\u548c\u53ef\u9884\u6d4b\uff0c\u5e76\u7ed9\u4f60\u66f4\u591a\u7684\u63a7\u5236\u6765\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u786e\u5207\u884c\u4e3a\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6ca1\u6709 margin \u4fee\u6539\u5668\u800c\u53ea\u6709 padding \u4fee\u6539\u5668 \u5185\u7f6e modifiers Jetpack Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e modifiers \u7684\u5217\u8868\uff0c\u4ee5\u5e2e\u52a9\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6db5\u76d6\u6700\u5e38\u89c1\u7684\u4f7f\u7528\u60c5\u51b5\u7684\u5217\u8868\uff1a 1. Padding \u548c size \u8981\u5728\u4e00\u4e2a Composable \u7684\u5468\u56f4\u8fdb\u884c\u586b\u5145\uff0c\u8bf7\u6dfb\u52a0 padding @Composable fun PaddedComposable () { Text ( text = \"Hello World\" , modifier = Modifier . background ( Color . Green ) . padding ( 20. dp ) ) } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose \u4e2d\u63d0\u4f9b\u7684\u5e03\u5c40\u662f\u5305\u88f9\u5176\u5b50\u9879\u7684\u3002 \u7136\u9e45\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 size \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5c3a\u5bf8 @Composable fun SizedComposable () { Box ( Modifier . size ( 100. dp , 100. dp ). background ( Color . Red )) } \u6ce8\u610f \u5982\u679c\u60a8\u6307\u5b9a\u7684\u5c3a\u5bf8\u4e0d\u6ee1\u8db3\u6765\u81ea\u5e03\u5c40\u7236\u7ea7\u7684\u7ea6\u675f\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u8be5\u5c3a\u5bf8\u3002\u5982\u679c\u4f60\u8981\u6c42\u7684 Composable \u7684\u5c3a\u5bf8\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u7ba1\u4f20\u5165\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4f55\uff0c\u8bf7\u4f7f\u7528 requiredSize @Composable fun FixedSizeComposable () { Box ( Modifier . size ( 90. dp , 150. dp ) . background ( Color . Green ) ) { Box ( Modifier . requiredSize ( 100. dp , 100. dp ) . background ( Color . Red ) ) } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u7236\u672c\u7684\u5bbd\u5ea6\u88ab\u8bbe\u7f6e\u4e3a 90.dp \uff0c\u5185\u76d2\u7684\u5bbd\u5ea6\u4e5f\u5c06\u662f 100.dp \u56e0\u4e3a\u5185\u76d2\u7684 requiredSize \u4f18\u5148 @Composable fun FillSizeComposable () { Box ( Modifier . background ( Color . Green ) . size ( 50. dp ) . padding ( 10. dp ) ) { Box ( Modifier . background ( Color . Blue ) . fillMaxSize () ) } } \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u5b50\u5e03\u5c40\u7684\u5c3a\u5bf8\u4e0e\u7236 Box \u7684\u5c3a\u5bf8\u76f8\u540c\u800c\u4e0d\u5f71\u54cd Box \u7684\u5c3a\u5bf8\uff0c\u8bf7\u4f7f\u7528 matchParentSize \u8bf7\u6ce8\u610f\uff0c matchParentSize \u53ea\u5728 Box \u8303\u56f4\u5185\u53ef\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u9002\u7528\u4e8e Box composables \u7684\u76f4\u63a5\u5b50\u4ee3 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5185\u90e8\u7684 Spacer \u4ece\u5b83\u7684\u7236 Box \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f\uff0c\u800c\u7236 Box \u53c8\u4ece\u5b83\u5305\u542b\u7684 Text \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f @Composable fun MatchParentSizeComposable () { Box { Spacer ( Modifier . matchParentSize (). background ( Color . Green )) Text ( \"Hello World\" ) } } \u5982\u679c\u4f7f\u7528 fillMaxSize \u800c\u4e0d\u662f matchParentSize \uff0c\u90a3\u4e48 Spacer \u5c06\u5360\u7528\u5141\u8bb8\u7ed9\u7236\u4ee3\u7684\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u53cd\u8fc7\u6765\u5bfc\u81f4\u7236\u4ee3\u6269\u5c55\u5e76\u586b\u5145\u6240\u6709\u53ef\u7528\u7a7a\u95f4 \u5982\u679c\u4f60\u60f3\u5728\u6587\u672c\u57fa\u7ebf\u4e0a\u65b9\u6dfb\u52a0 padding \u4f7f\u4f60\u8fbe\u5230\u4ece\u5e03\u5c40\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u7279\u5b9a\u8ddd\u79bb \u90a3\u4e48\u8bf7\u4f7f\u7528 paddingFromBaseline @Composable fun TextWithPaddingFromBaseline () { Box ( Modifier . background ( Color . Yellow )) { Text ( \"Hi there!\" , Modifier . paddingFromBaseline ( top = 32. dp )) } } 2. offset \u8981\u5c06\u4e00\u4e2a\u5e03\u5c40\u76f8\u5bf9\u4e8e\u5b83\u7684\u539f\u59cb\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u6dfb\u52a0 offet \uff0c\u5e76\u5728 x \u548c y \u8f74\u4e0a\u8bbe\u7f6e\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u7684\u3002 padding \u548c offset \u7684\u533a\u522b\u5728\u4e8e\uff0c\u7ed9\u4e00\u4e2a Composable \u6dfb\u52a0 offset \u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u6d4b\u91cf @Composable fun OffsetComposable () { Box ( Modifier . background ( Color . Yellow ). size ( width = 150. dp , height = 70. dp )) { Text ( \"Layout offset modifier sample\" , Modifier . offset ( x = 15. dp , y = 20. dp ) ) } } padding modifier \u6839\u636e\u5e03\u5c40\u65b9\u5411\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u5e94\u7528\u3002\u5728\u4ece\u5de6\u5230\u53f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u7684\u504f\u79fb\u503c\u4f1a\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8\uff0c\u800c\u5728\u4ece\u53f3\u5230\u5de6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u5c06\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u3002\u5982\u679c\u4f60\u9700\u8981\u5728\u4e0d\u8003\u8651\u5e03\u5c40\u65b9\u5411\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8bf7\u53c2\u89c1 absoluteOffset \u4fee\u6539\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u503c\u603b\u662f\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8 3. \u54cd\u5e94\u6027\u5e03\u5c40 \u8bbe\u8ba1\u5e03\u5c40\u65f6\u5e94\u8003\u8651\u5230\u4e0d\u540c\u7684\u5c4f\u5e55\u65b9\u5411\u548c\u5916\u5f62\u5c3a\u5bf8\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e9b\u673a\u5236\u6765\u4fc3\u8fdb\u4f60\u7684 Composable \u5e03\u5c40\u9002\u5e94\u5404\u79cd\u5c4f\u5e55\u914d\u7f6e Row \u548c Column \u4e2d\u7684 weight modifier \u6b63\u5982\u4f60\u5728\u524d\u9762\u5173\u4e8e\u586b\u5145\u548c\u5c3a\u5bf8\u7684\u7ae0\u8282\u4e2d\u6240\u770b\u5230\u7684\uff0c\u4e00\u4e2a Composable \u5c3a\u5bf8\u9ed8\u8ba4\u662f\u7531\u5b83\u6240\u5305\u88f9\u7684\u5185\u5bb9\u6765\u5b9a\u4e49\u7684\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a Composable \u5c3a\u5bf8\u8bbe\u7f6e\u4e3a\u5728\u5176\u7236\u7ea7\u5185\u5bb9\u4e2d\u5177\u6709\u7075\u6d3b\u6027\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u76d2\u5b50\u7684\u884c\u7684\u53ef\u7ec4\u5408\u5c3a\u5bf8\u3002 \u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u6743\u91cd\u662f\u7b2c\u4e8c\u4e2a\u76d2\u5b50\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5b83\u7684\u5bbd\u5ea6\u4e5f\u662f\u4e24\u500d\u3002\u56e0\u4e3a\u884c\u7684\u5bbd\u5ea6\u662f 210.dp \uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u5bbd\u5ea6\u662f 140.dp \uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f 70.dp @Composable fun FlexibleComposable () { Row ( Modifier . width ( 210. dp )) { Box ( Modifier . weight ( 2f ). height ( 50. dp ). background ( Color . Blue )) Box ( Modifier . weight ( 1f ). height ( 50. dp ). background ( Color . Red )) } } 4. \u7ea6\u675f\u6761\u4ef6 \u4e3a\u4e86\u77e5\u9053\u6765\u81ea\u7236\u4f53\u7684\u7ea6\u675f\u5e76\u76f8\u5e94\u5730\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 BoxWithConstraints \u3002\u6d4b\u91cf\u7ea6\u675f\u53ef\u4ee5\u5728 content lambda \u7684\u8303\u56f4\u5185\u627e\u5230\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6d4b\u91cf\u7ea6\u675f\u6765\u4e3a\u4e0d\u540c\u7684\u5c4f\u5e55\u914d\u7f6e\u7ec4\u6210\u4e0d\u540c\u7684\u5e03\u5c40 @Composable fun WithConstraintsComposable () { BoxWithConstraints { Text ( \"My minHeight is $ minHeight while my maxWidth is $ maxWidth \" ) } } \u57fa\u4e8e\u63d2\u69fd\u7684\u5e03\u5c40 Compose \u901a\u8fc7 androidx.compose.material:material \u4f9d\u8d56\u5173\u7cfb\uff08\u5728 Android Studio \u4e2d\u521b\u5efa Compose \u5de5\u7a0b\u65f6\u4f1a\u5305\u542b\u5728\u5185\uff09\u63d0\u4f9b\u4e86\u5927\u91cf\u57fa\u4e8e Material Design \u7684\u53ef\u7ec4\u5408\u5143\u7d20\uff0c\u4f7f UI \u6784\u5efa\u53d8\u5f97\u7b80\u5355\u3002\u50cf Drawer \u3001 FloatingActionButton \u548c TopAppBar \u8fd9\u6837\u7684\u5143\u7d20\u90fd\u88ab\u63d0\u4f9b\u3002 Material \u7ec4\u4ef6\u5927\u91cf\u4f7f\u7528\u63d2\u69fd API\uff0c\u8fd9\u662f Compose \u5f15\u5165\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5728\u53ef\u7ec4\u5408\u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u4e00\u5c42\u5b9a\u5236\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7ec4\u4ef6\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u63a5\u53d7\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u914d\u7f6e\u7684\u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u66b4\u9732\u5b50\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570\u3002\u69fd\u5728\u7528\u6237\u754c\u9762\u4e2d\u7559\u4e0b\u4e86\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u4f9b\u5f00\u53d1\u8005\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u6765\u586b\u5145\u3002\u4f8b\u5982\uff0c\u8fd9\u4e9b\u662f\u4f60\u53ef\u4ee5\u5728 TopAppBar \u4e2d\u81ea\u5b9a\u4e49\u7684\u4f4d\u7f6e Composable \u901a\u5e38\u91c7\u53d6\u4e00\u4e2a content \u7684 Composable \uff0c lambda(content: @Composable () -> Unit) \u3002\u63d2\u69fd API \u4e3a\u7279\u5b9a\u7528\u9014\u516c\u5f00\u4e86\u591a\u4e2a\u5185\u5bb9\u53c2\u6570\u3002\u4f8b\u5982\uff0c TopAppBar \u5141\u8bb8\u4f60\u4e3a\u6807\u9898\u3001\u5bfc\u822a\u56fe\u6807\u548c\u884c\u4e3a\u63d0\u4f9b\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c Scaffold \u5141\u8bb8\u4f60\u7528\u57fa\u672c\u7684 Material Design \u5e03\u5c40\u7ed3\u6784\u6765\u5b9e\u73b0\u4e00\u4e2a UI\u3002 Scaffold \u4e3a\u6700\u5e38\u89c1\u7684\u9876\u5c42 Material \u7ec4\u4ef6\u63d0\u4f9b\u4e86\u63d2\u69fd\uff0c\u5982 TopAppBar \u3001 BottomAppBar \u3001 FloatingActionButton \u548c Drawer \u3002\u901a\u8fc7\u4f7f\u7528 Scaffold \uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u786e\u4fdd\u8fd9\u4e9b\u7ec4\u4ef6\u88ab\u6b63\u786e\u5730\u5b9a\u4f4d\u5e76\u6b63\u786e\u5730\u534f\u540c\u5de5\u4f5c\u3002 Tips \u8981\u66f4\u597d\u7684\u4e86\u89e3 Scaffold \u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc @Composable fun HomeScreen ( /*...*/ ) { Scaffold ( drawerContent = { /*...*/ }, topBar = { /*...*/ }, bodyContent = { /*...*/ } ) } 5. ConstraintLayout ConstraintLayout \u53ef\u4ee5\u5e2e\u52a9\u5728\u5c4f\u5e55\u4e0a\u653e\u7f6e\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684\u5408\u6210\u7269\uff0c\u5e76\u4e14\u662f\u4f7f\u7528\u591a\u4e2a\u5d4c\u5957\u7684 Row , Column , Box \u81ea\u5b9a\u4e49\u5e03\u5c40\u5143\u7d20\u7684\u66ff\u4ee3\u65b9\u6848\u3002 ConstraintLayout \u5728\u5b9e\u73b0\u5177\u6709\u66f4\u590d\u6742\u5bf9\u9f50\u8981\u6c42\u7684\u5927\u578b\u5e03\u5c40\u65f6\u5f88\u6709\u7528\uff0c\u4f46\u5728\u521b\u5efa\u7b80\u5355\u7684\u5e03\u5c40\u65f6\uff0c\u6700\u597d\u4f7f\u7528 Columns \u548c Rows \u6765\u4ee3\u66ff\u3002 \u8981\u5728 Compose \u4e2d\u4f7f\u7528 ConstraintLayout \uff0c\u4f60\u9700\u8981\u5728 build.gradle \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u4f9d\u8d56\u9879 implementation \"androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05\" \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 View \u7cfb\u7edf\u4e2d\uff0c ConstraintLayout \u662f\u521b\u5efa\u5927\u578b\u590d\u6742\u5e03\u5c40\u7684\u63a8\u8350\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6241\u5e73\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6bd4\u5d4c\u5957\u7684\u89c6\u56fe\u66f4\u6709\u5229\u4e8e\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5728 Compose \u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u6df1\u5c42\u6b21\u7684\u5e03\u5c40\u5c42\u6b21\u7ed3\u6784 Compose \u4e2d\u7684 ConstraintLayout \u4ee5 DSL \u65b9\u5f0f\u5de5\u4f5c\u3002 \u5f15\u7528\u662f\u7528 createRefs() \u6216 createRefFor() \u521b\u5efa\u7684\uff0c ConstraintLayout \u4e2d\u7684\u6bcf\u4e00\u4e2a Composable \u90fd\u9700\u8981\u6709\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u5f15\u7528\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 constrainAs() modifier \u63d0\u4f9b\uff0c\u5b83\u5c06\u5f15\u7528\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u8ba9\u4f60\u5728\u4e3b\u4f53 lambda \u4e2d\u6307\u5b9a\u5176\u7ea6\u675f\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 linkTo() \u6216\u5176\u4ed6\u6709\u7528\u7684\u65b9\u6cd5\u6765\u6307\u5b9a\u3002 paren t\u662f\u4e00\u4e2a\u73b0\u6709\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u5bf9 ConstraintLayout composable \u672c\u8eab\u7684\u7ea6\u675f \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 ConstraintLayout \u7684 Composable \u4f8b\u5b50\uff1a @Composable fun ConstraintLayoutContent () { ConstraintLayout { // \u7ed9\u9700\u8981\u7ea6\u675f\u7684 Composable \u5143\u7d20\u521b\u5efa\u5f15\u7528 val ( button , text ) = createRefs () Button ( onClick = { /* Do something */ }, // \u5c06 button \u7684\u5f15\u7528\u7ed9 Button \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f modifier = Modifier . constrainAs ( button ) { top . linkTo ( parent . top , margin = 16. dp ) } ) { Text ( \"Button\" ) } // \u5c06 Text \u7684\u5f15\u7528\u7ed9 Text \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f Text ( \"Text\" , Modifier . constrainAs ( text ) { top . linkTo ( button . bottom , margin = 16. dp ) }) } } \u8fd9\u6bb5\u4ee3\u7801\u5c06 Button \u7684\u9876\u90e8\u7ea6\u675f\u5230\u7236\u7ea7\uff0c\u8fb9\u8ddd\u4e3a 16.dp \uff0c\u5c06 Text \u7ea6\u675f\u5230 Button \u7684\u5e95\u90e8\uff0c\u8fb9\u8ddd\u4e5f\u4e3a 16.dp \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 ConstraintLayout \u7684\u66f4\u591a\u4f8b\u5b50\uff0c\u8bf7\u53c2\u9605 layout codelab \u89e3\u8026\u7684 API \u5728 ConstraintLayout \u7684\u4f8b\u5b50\u4e2d\uff0c\u7ea6\u675f\u6761\u4ef6\u662f\u5185\u8054\u6307\u5b9a\u7684\uff0c\u5728\u5b83\u4eec\u6240\u5e94\u7528\u7684 composable \u4e2d\u5e26\u6709\u4e00\u4e2a modifier\u3002\u7136\u800c\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u7ea6\u675f\u4e0e\u5b83\u4eec\u6240\u5e94\u7528\u7684\u5e03\u5c40\u89e3\u8026\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u5c4f\u5e55\u914d\u7f6e\u6765\u6539\u53d8\u7ea6\u675f\uff0c\u6216\u8005\u5728\u4e24\u4e2a\u7ea6\u675f\u96c6\u4e4b\u95f4\u5236\u4f5c\u52a8\u753b\u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 ConstraintLayout \uff1a \u4f20\u5165\u4e00\u4e2a ConstraintSet \u4f5c\u4e3a ConstraintLayout \u7684\u53c2\u6570\u3002 \u4f7f\u7528 layoutId \u4fee\u6539\u5668\u5c06 ConstraintSet \u4e2d\u521b\u5efa\u7684\u5f15\u7528\u5206\u914d\u7ed9 Composable @Composable fun DecoupledConstraintLayout () { BoxWithConstraints { val constraints = if ( minWidth < 600. dp ) { decoupledConstraints ( margin = 16. dp ) // \u7ad6\u5c4f\u7ea6\u675f } else { decoupledConstraints ( margin = 32. dp ) // \u6a2a\u5c4f\u7ea6\u675f } ConstraintLayout ( constraints ) { Button ( onClick = { /* Do something */ }, modifier = Modifier . layoutId ( \"button\" ) ) { Text ( \"Button\" ) } Text ( \"Text\" , Modifier . layoutId ( \"text\" )) } } } private fun decoupledConstraints ( margin : Dp ): ConstraintSet { return ConstraintSet { val button = createRefFor ( \"button\" ) val text = createRefFor ( \"text\" ) constrain ( button ) { top . linkTo ( parent . top , margin = margin ) } constrain ( text ) { top . linkTo ( button . bottom , margin ) } } } \u7136\u540e\uff0c\u5f53\u4f60\u9700\u8981\u6539\u53d8\u7ea6\u675f\u65f6\uff0c\u4f60\u53ef\u4ee5\u53ea\u4f20\u9012\u4e00\u4e2a\u4e0d\u540c\u7684 ConstraintSet 6. \u81ea\u5b9a\u4e49\u5e03\u5c40 \u5728 Compose \u4e2d\uff0cUI \u5143\u7d20\u7531 composable \u51fd\u6570\u8868\u793a\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u51fa\u4e00\u6bb5 UI\uff0c\u7136\u540e\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a UI \u6811\u4e2d\uff0c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\u548c\u53ef\u80fd\u7684\u8bb8\u591a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f4d\u4e8e\u5b83\u7684\u7236\u5143\u7d20\u4e2d\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\uff08x\uff0cy\uff09\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u7236\u5143\u7d20\u4e3a\u4ed6\u4eec\u7684\u5b50\u5143\u7d20\u5b9a\u4e49\u7ea6\u675f\u6761\u4ef6\u3002\u4e00\u4e2a\u5143\u7d20\u88ab\u8981\u6c42\u5728\u8fd9\u4e9b\u7ea6\u675f\u4e2d\u5b9a\u4e49\u5b83\u7684\u5c3a\u5bf8\u3002\u7ea6\u675f\u6761\u4ef6\u9650\u5236\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u548c\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6709\u5b50\u5143\u7d20\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u5143\u7d20\u4ee5\u5e2e\u52a9\u786e\u5b9a\u5176\u5c3a\u5bf8\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u786e\u5b9a\u5e76\u544a\u77e5\u4e86\u5b83\u81ea\u5df1\u7684\u5c3a\u5bf8\uff0c\u5b83\u6709\u673a\u4f1a\u5b9a\u4e49\u5982\u4f55\u76f8\u5bf9\u4e8e\u81ea\u8eab\u653e\u7f6e\u5b50\u5143\u7d20\uff0c\u5c31\u50cf\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u7684\u3002 \u6ce8\u610f\uff1aCompose UI \u4e0d\u5141\u8bb8\u591a\u901a\u9053\u6d4b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u5e03\u5c40\u5143\u7d20\u4e0d\u80fd\u591a\u6b21\u6d4b\u91cf\u5b83\u7684\u4efb\u4f55\u5b50\u5143\u7d20\uff0c\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u6d4b\u91cf\u914d\u7f6e\u3002 \u5355\u904d\u6d4b\u91cf\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\uff0c\u4f7f Compose \u53ef\u4ee5\u6709\u6548\u5904\u7406\u6df1\u5c42 UI \u6811\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6d4b\u91cf\u4e86\u5b83\u7684\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u800c\u8fd9\u4e2a\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u5b83\u7684\u4e00\u4e2a\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5c1d\u8bd5\u5e03\u5c40\u6574\u4e2a UI \u5c31\u5fc5\u987b\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u8fd9\u5c31\u5f88\u96be\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u826f\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u4f60\u771f\u7684\u9700\u8981\u5728\u5355\u4e2a\u5b50\u9879\u6d4b\u91cf\u6240\u80fd\u544a\u8bc9\u4f60\u7684\u4fe1\u606f\u4e4b\u4e0a\u7684\u989d\u5916\u4fe1\u606f\u3002\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u5728\u5185\u5728\u7684\u6d4b\u91cf\u90e8\u5206\u8ba8\u8bba \u4f7f\u7528 layout modifier \u4f60\u53ef\u4ee5\u4f7f\u7528 layout modifier \u6765\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u65b9\u5f0f\u3002 Layout \u662f\u4e00\u4e2a lambda \uff1b\u5b83\u7684\u53c2\u6570\u5305\u62ec\u4f60\u53ef\u4ee5\u6d4b\u91cf\u7684\u5143\u7d20\uff0c\u4ee5\u53ef\u6d4b\u91cf\u7684\u65b9\u5f0f\u4f20\u9012\uff0c\u800c\u8fd9\u4e2a Composable \u7684\u4f20\u5165\u7ea6\u675f\u5219\u4ee5\u7ea6\u675f\u7684\u65b9\u5f0f\u4f20\u9012\u3002\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 layout modifier \u53ef\u4ee5\u662f\u8fd9\u6837\u7684 fun Modifier . customLayoutModifier (...) = this . layout { measurable , constraints -> ... }) \u8ba9\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u4e2a\u6587\u672c\uff0c\u5e76\u63a7\u5236\u7b2c\u4e00\u884c\u6587\u672c\u4ece\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u8ddd\u79bb\u3002\u8fd9\u6b63\u662f paddingFromBaseline \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u73b0\u5b83\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u4f7f\u7528 layout modifier \u6765\u624b\u52a8\u5c06 Composable \u7684\u4e1c\u897f\u653e\u5728\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u9762\u662f\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6587\u672c\u9876\u90e8\u7684 padding \u88ab\u8bbe\u7f6e\u4e3a 24.dp \u4e0b\u9762\u662f\u4ea7\u751f\u8fd9\u79cd\u95f4\u8ddd\u7684\u4ee3\u7801\uff1a fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = layout { measurable , constraints -> // Measure the composable val placeable = measurable . measure ( constraints ) // Check the composable has a first baseline check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] // Height of the composable with padding - first baseline val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { // Where the composable gets placed placeable . placeRelative ( 0 , placeableY ) } } \u4ee5\u4e0b\u662f\u90a3\u6bb5\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff1a \u5728 measurablelambda \u53c2\u6570\u4e2d\uff0c\u4f60\u901a\u8fc7\u8c03\u7528 measurable.measure(constraints) \u6765\u6d4b\u91cf\u7531 measurabl \u53c2\u6570\u4ee3\u8868\u7684 Text \u3002 \u4f60\u901a\u8fc7\u8c03\u7528 layout(width, height) \u65b9\u6cd5\u6765\u6307\u5b9a Composable \u7684\u5c3a\u5bf8\uff0c\u8be5\u65b9\u6cd5\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u4e8e\u653e\u7f6e\u5305\u88c5\u5143\u7d20\u7684 lambda \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u6700\u540e\u4e00\u4e2a baseline \u548c\u589e\u52a0\u7684 top padding \u4e4b\u95f4\u7684\u9ad8\u5ea6\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 placeable.place(x, y) \u5c06\u88ab\u5305\u88c5\u597d\u7684\u5143\u7d20\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u88ab\u5305\u88c5\u7684\u5143\u7d20\u6ca1\u6709\u88ab\u653e\u7f6e\uff0c\u5b83\u4eec\u5c06\u4e0d\u53ef\u89c1\u3002 y position \u5bf9\u5e94\u7684\u662f top padding -- \u6587\u672c\u7684\u7b2c\u4e00\u6761 baseline \u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u662f\u5426\u5982\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u8bf7\u5728 Text \u4e0a\u4f7f\u7528\u8fd9\u4e2a modifier \u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 32. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 32. dp )) } }","title":"\u6982\u8ff0"},{"location":"layout/overview/#layouts-in-compose","text":"\u672c\u7ae0\u8282\u7ffb\u8bd1\u81ea \u5b98\u65b9\u6587\u6863 \u5e76\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca \u5982\u6709\u7ffb\u8bd1\u4e0d\u51c6\u786e\u6b22\u8fce\u63d0\u4ea4 issue / pr Jetpack Compose \u8ba9\u8bbe\u8ba1\u548c\u6784\u5efa\u4f60\u7684 app UI \u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002 \u8fd9\u7bc7\u6587\u6863\u89e3\u91ca\u4e86 Compose \u63d0\u4f9b\u7684\u4e00\u4e9b\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5e03\u7f6e\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u544a\u8bc9\u4f60\u5982\u4f55\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u5efa\u7acb\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002 Composable \u51fd\u6570\u662f Compose \u7684\u57fa\u672c\u6784\u5efa\u6a21\u5757\uff0c\u4e00\u4e2a Composable \u7684\u51fd\u6570\u662f\u4e00\u4e2a emitting Unit (\u901a\u8fc7\u58f0\u660e\u5f0f\u7684\u8bed\u6cd5\u53bb\u663e\u793a\u51fa\u4e00\u4e2a\u754c\u9762\u5143\u7d20\uff1f) \u7684\u51fd\u6570\uff0c\u63cf\u8ff0\u4f60\u7684\u7528\u6237\u754c\u9762\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002 \u4e00\u4e2a Composable \u51fd\u6570\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a UI \u5143\u7d20\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u544a\u8bc9\u5b83\u4eec\u5e94\u8be5\u5982\u4f55\u88ab\u6392\u5217\uff0c Compose \u53ef\u80fd\u4e0d\u4f1a\u6309\u7167\u4f60\u6240\u60f3\u7684\u65b9\u5f0f\u6765\u6392\u5217\u5b83\u4eec\u3002 \u4f8b\u5982\uff0c\u8fd9\u6bb5\u4ee3\u7801\u751f\u6210\u4e86\u4e24\u4e2a Text \u5143\u7d20 @Composable fun ArtistCard () { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } \u5728\u4f60\u6ca1\u6709\u6392\u5217\u5b83\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c Compose \u4f1a\u5c06 Text \u5143\u7d20\u5806\u53e0\u5728\u4e00\u8d77\uff0c\u53d8\u5f97\u65e0\u6cd5\u9605\u8bfb\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u73b0\u6210\u7684\u5e03\u5c40\u96c6\u5408\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5b89\u6392\u4f60\u7684 UI \u5143\u7d20\uff0c\u5e76\u4f7f\u4f60\u66f4\u5bb9\u6613\u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u3001\u66f4\u4e13\u4e1a\u7684\u5e03\u5c40\u3002","title":"Layouts in Compose"},{"location":"layout/overview/#1","text":"\u4f7f\u7528 Column \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u884c\u7684\u5f62\u5f0f\u5448\u73b0\u3002 @Composable fun ArtistCard () { Column { Text ( \"Alfred Sisley\" ) Text ( \"3 minutes ago\" ) } } \u540c\u6837\u5730\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 Row , \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u7ec4\u4ef6\u4ee5\u5217\u7684\u5f62\u5f0f\u5448\u73b0\u3002 Column \u548c Row \u90fd\u652f\u6301\u914d\u7f6e\u5b83\u4eec\u6240\u5305\u542b\u7684\u5143\u7d20\u7684\u5bf9\u9f50\u65b9\u5f0f\u3002 @Composable fun ArtistCard ( artist : Artist ) { Row ( verticalAlignment = Alignment . CenterVertically ) { Image ( /*...*/ ) Column { Text ( artist . name ) Text ( artist . lastSeenOnline ) } } } \u6ce8\u610f \u56fe\u4e2d\u7684\u5706\u5f62\u56fe\u50cf\u7684\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Image \u4e2d\u5b9e\u73b0\u3002 \u56fe\u4e2d\u7684\u6587\u5b57\u6548\u679c\u53ef\u4ee5\u5728 \u57fa\u672c\u7ec4\u4ef6/Text \u4e2d\u5b9e\u73b0\u3002 \u5173\u4e8e Row \u7684\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002 Tips \u6ce8\u610f\uff1aCompose \u6709\u6548\u5730\u5904\u7406\u5d4c\u5957\u5e03\u5c40\uff0c\u4f7f\u5176\u6210\u4e3a\u8bbe\u8ba1\u590d\u6742UI\u7684\u597d\u65b9\u6cd5\u3002\u8fd9\u662f\u5bf9 Android Views \u7684\u6539\u8fdb\uff0c\u5728 Android Views \u4e2d\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u60a8\u9700\u8981\u907f\u514d\u5d4c\u5957\u5e03\u5c40\u3002 \u5982\u679c\u60f3\u8981\u5728 Row \u4e2d\u8bbe\u7f6e\u5b50\u9879\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8bbe\u7f6e horizontalArrangement \u548c verticalAlignment \u53c2\u6570\uff0c \u5bf9\u4e8e Column \u6765\u8bf4\uff0c\u8bbe\u7f6e verticalArrangement \u548c horizontalAlignment \u3002 @Composable fun AlignInRow () { Row ( modifier = Modifier . size ( 150. dp ) . background ( Color . Yellow ), horizontalArrangement = Arrangement . End , // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u6c34\u5e73\u5e03\u5c40\u4e3a\u6700\u53f3\u8fb9 verticalAlignment = Alignment . CenterVertically // \u8bbe\u7f6e Row \u4e2d\u7684\u5b50\u9879\u7ad6\u76f4\u5e03\u5c40\u4e3a\u4e2d\u5fc3 // start \u5de6\u8fb9 // end \u53f3\u8fb9 // top \u4e0a\u8fb9 // bottom \u4e0b\u8fb9 ) { Box ( Modifier . size ( 50. dp ). background ( Color . Red )) Box ( Modifier . size ( 50. dp ). background ( Color . Blue )) } }","title":"1. \u6807\u51c6\u5e03\u5c40\u7ec4\u4ef6"},{"location":"layout/overview/#2-modifier","text":"Modifier \u5141\u8bb8\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \uff0c Modifier \u5141\u8bb8\u4f60\u505a\u4ee5\u4e0b\u7684\u4e8b\u60c5\u3002 \u6539\u53d8 Composable \u7684\u5927\u5c0f\u3001\u5e03\u5c40\u3001\u884c\u4e3a\u548c\u5916\u89c2\u3002 \u6dfb\u52a0\u4fe1\u606f\uff0c\u5982\u65e0\u969c\u788d\u6807\u7b7e\u3002 \u5904\u7406\u7528\u6237\u7684\u8f93\u5165\u3002 \u6dfb\u52a0\u9ad8\u5c42\u6b21\u7684\u4ea4\u4e92\uff0c\u6bd4\u5982\u8ba9\u4e00\u4e2a\u5143\u7d20\u53ef\u70b9\u51fb\u3001\u53ef\u6eda\u52a8\u3001\u53ef\u62d6\u52a8\u6216\u53ef\u7f29\u653e\u3002 \u4fee\u6539\u5668\u662f\u6807\u51c6\u7684 Kotlin \u5bf9\u8c61\u3002\u901a\u8fc7\u8c03\u7528 Modifier \u7c7b\u7684\u4e00\u4e2a\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a modifier \u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u51fd\u6570\u4e32\u8054\u8d77\u6765\uff0c\u7ec4\u6210\u5b83\u4eec\uff1a @Composable fun ArtistCard ( artist : Artist , onClick : () -> Unit ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { Row ( verticalAlignment = Alignment . CenterVertically ) { /*...*/ } Spacer ( Modifier . size ( padding )) Card ( elevation = 4. dp ) { /*...*/ } } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\u4e0d\u540c\u7684 modifier \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002 clickable \u4f7f\u4e00\u4e2a Composable \u5143\u7d20\u5bf9\u7528\u6237\u7684\u70b9\u51fb\u4f5c\u51fa\u53cd\u5e94\uff0c\u5e76\u663e\u793a\u4e00\u4e2a\u6ce2\u7eb9\u3002 padding \u5728\u4e00\u4e2a\u5143\u7d20\u7684\u5468\u56f4\u586b\u5145\u4e86\u7a7a\u95f4\u3002 fillMaxWidth \u8ba9 Composable \u5143\u7d20\u586b\u6ee1\u5176\u7236\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 size() \u6765\u6307\u5b9a\u4e00\u4e2a\u5143\u7d20\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002 \u6ce8\u610f \u5728\u5176\u4ed6\u65b9\u9762\uff0c Modifier \u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u57fa\u4e8e view \u5e03\u5c40\u4e2d\u7684\u5e03\u5c40\u53c2\u6570\u3002\u7136\u800c\uff0c\u7531\u4e8e Modifier \u6709\u65f6\u662f\u7279\u5b9a\u8303\u56f4\u7684\uff0c\u5b83\u4eec\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\uff0c\u4e5f\u5e2e\u52a9\u4f60\u53d1\u73b0\u548c\u7406\u89e3\u4ec0\u4e48\u662f\u53ef\u7528\u7684\uff0c\u9002\u7528\u4e8e\u67d0\u4e2a\u5e03\u5c40\u3002\u5bf9\u4e8e XML \u5e03\u5c40\uff0c\u6709\u65f6\u5f88\u96be\u53d1\u73b0\u67d0\u4e2a\u7279\u5b9a\u7684\u5e03\u5c40\u5c5e\u6027\u662f\u5426\u9002\u7528\u4e8e\u67d0\u4e2a\u89c6\u56fe\u3002 Modifier \u51fd\u6570\u7684\u987a\u5e8f\u662f\u5f88 \u91cd\u8981 \u7684\u3002\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u5bf9\u524d\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7684\u4fee\u6539\u5668\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5\u987a\u5e8f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . clickable ( onClick = onClick ) . padding ( padding ) . fillMaxWidth () ) { // rest of the implementation } } \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6574\u4e2a\u533a\u57df\u90fd\u662f\u53ef\u70b9\u51fb\u7684\uff0c\u5305\u62ec\u5468\u56f4\u7684\u586b\u5145\u7269\uff0c\u56e0\u4e3a padding modifier \u88ab\u5e94\u7528\u5728 clickable \u4e4b\u540e\u3002\u5982\u679c modifier \u7684\u987a\u5e8f\u98a0\u5012\u4e86\uff0c\u90a3\u4e48\u7531 padding \u589e\u52a0\u7684\u7a7a\u95f4\u5c31\u4e0d\u4f1a\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u3002 @Composable fun ArtistCard ( /*...*/ ) { val padding = 16. dp Column ( Modifier . padding ( padding ) . clickable ( onClick = onClick ) . fillMaxWidth () ) { // rest of the implementation } } \u6ce8\u610f \u660e\u786e\u987a\u5e8f\u6709\u52a9\u4e8e\u4f60\u63a8\u7406\u4e0d\u540c\u7684 Modifier \u5c06\u5982\u4f55\u76f8\u4e92\u4f5c\u7528\u3002\u4e0e\u57fa\u4e8e view \u7684\u7cfb\u7edf\u76f8\u6bd4\uff0c\u4f60\u5fc5\u987b\u5b66\u4e60\u76d2\u5b50\u6a21\u578b\uff0c\u5373\u5728\u5143\u7d20\u7684 \"\u5916\u9762\" \u5e94\u7528 margin \uff0c\u800c\u5728 \"\u91cc\u9762 \"\u5e94\u7528 pading \uff0c\u80cc\u666f\u5143\u7d20\u4f1a\u6709\u76f8\u5e94\u7684\u5927\u5c0f Modifier \u7684\u8bbe\u8ba1\u4f7f\u8fd9\u79cd\u884c\u4e3a\u53d8\u5f97\u660e\u786e\u548c\u53ef\u9884\u6d4b\uff0c\u5e76\u7ed9\u4f60\u66f4\u591a\u7684\u63a7\u5236\u6765\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u786e\u5207\u884c\u4e3a\u3002\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6ca1\u6709 margin \u4fee\u6539\u5668\u800c\u53ea\u6709 padding \u4fee\u6539\u5668","title":"2. Modifier"},{"location":"layout/overview/#modifiers","text":"Jetpack Compose \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e modifiers \u7684\u5217\u8868\uff0c\u4ee5\u5e2e\u52a9\u4f60\u88c5\u9970\u6216\u589e\u5f3a\u4e00\u4e2a Composable \u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6db5\u76d6\u6700\u5e38\u89c1\u7684\u4f7f\u7528\u60c5\u51b5\u7684\u5217\u8868\uff1a","title":"\u5185\u7f6e modifiers"},{"location":"layout/overview/#1-padding-size","text":"\u8981\u5728\u4e00\u4e2a Composable \u7684\u5468\u56f4\u8fdb\u884c\u586b\u5145\uff0c\u8bf7\u6dfb\u52a0 padding @Composable fun PaddedComposable () { Text ( text = \"Hello World\" , modifier = Modifier . background ( Color . Green ) . padding ( 20. dp ) ) } \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose \u4e2d\u63d0\u4f9b\u7684\u5e03\u5c40\u662f\u5305\u88f9\u5176\u5b50\u9879\u7684\u3002 \u7136\u9e45\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 size \u6765\u8bbe\u7f6e\u4e00\u4e2a\u5c3a\u5bf8 @Composable fun SizedComposable () { Box ( Modifier . size ( 100. dp , 100. dp ). background ( Color . Red )) } \u6ce8\u610f \u5982\u679c\u60a8\u6307\u5b9a\u7684\u5c3a\u5bf8\u4e0d\u6ee1\u8db3\u6765\u81ea\u5e03\u5c40\u7236\u7ea7\u7684\u7ea6\u675f\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u8be5\u5c3a\u5bf8\u3002\u5982\u679c\u4f60\u8981\u6c42\u7684 Composable \u7684\u5c3a\u5bf8\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u7ba1\u4f20\u5165\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4f55\uff0c\u8bf7\u4f7f\u7528 requiredSize @Composable fun FixedSizeComposable () { Box ( Modifier . size ( 90. dp , 150. dp ) . background ( Color . Green ) ) { Box ( Modifier . requiredSize ( 100. dp , 100. dp ) . background ( Color . Red ) ) } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5373\u4f7f\u7236\u672c\u7684\u5bbd\u5ea6\u88ab\u8bbe\u7f6e\u4e3a 90.dp \uff0c\u5185\u76d2\u7684\u5bbd\u5ea6\u4e5f\u5c06\u662f 100.dp \u56e0\u4e3a\u5185\u76d2\u7684 requiredSize \u4f18\u5148 @Composable fun FillSizeComposable () { Box ( Modifier . background ( Color . Green ) . size ( 50. dp ) . padding ( 10. dp ) ) { Box ( Modifier . background ( Color . Blue ) . fillMaxSize () ) } } \u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u5b50\u5e03\u5c40\u7684\u5c3a\u5bf8\u4e0e\u7236 Box \u7684\u5c3a\u5bf8\u76f8\u540c\u800c\u4e0d\u5f71\u54cd Box \u7684\u5c3a\u5bf8\uff0c\u8bf7\u4f7f\u7528 matchParentSize \u8bf7\u6ce8\u610f\uff0c matchParentSize \u53ea\u5728 Box \u8303\u56f4\u5185\u53ef\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ea\u9002\u7528\u4e8e Box composables \u7684\u76f4\u63a5\u5b50\u4ee3 \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5185\u90e8\u7684 Spacer \u4ece\u5b83\u7684\u7236 Box \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f\uff0c\u800c\u7236 Box \u53c8\u4ece\u5b83\u5305\u542b\u7684 Text \u4e2d\u83b7\u53d6\u5176\u5927\u5c0f @Composable fun MatchParentSizeComposable () { Box { Spacer ( Modifier . matchParentSize (). background ( Color . Green )) Text ( \"Hello World\" ) } } \u5982\u679c\u4f7f\u7528 fillMaxSize \u800c\u4e0d\u662f matchParentSize \uff0c\u90a3\u4e48 Spacer \u5c06\u5360\u7528\u5141\u8bb8\u7ed9\u7236\u4ee3\u7684\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff0c\u53cd\u8fc7\u6765\u5bfc\u81f4\u7236\u4ee3\u6269\u5c55\u5e76\u586b\u5145\u6240\u6709\u53ef\u7528\u7a7a\u95f4 \u5982\u679c\u4f60\u60f3\u5728\u6587\u672c\u57fa\u7ebf\u4e0a\u65b9\u6dfb\u52a0 padding \u4f7f\u4f60\u8fbe\u5230\u4ece\u5e03\u5c40\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u7279\u5b9a\u8ddd\u79bb \u90a3\u4e48\u8bf7\u4f7f\u7528 paddingFromBaseline @Composable fun TextWithPaddingFromBaseline () { Box ( Modifier . background ( Color . Yellow )) { Text ( \"Hi there!\" , Modifier . paddingFromBaseline ( top = 32. dp )) } }","title":"1. Padding \u548c size"},{"location":"layout/overview/#2-offset","text":"\u8981\u5c06\u4e00\u4e2a\u5e03\u5c40\u76f8\u5bf9\u4e8e\u5b83\u7684\u539f\u59cb\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u53ef\u4ee5\u6dfb\u52a0 offet \uff0c\u5e76\u5728 x \u548c y \u8f74\u4e0a\u8bbe\u7f6e\u504f\u79fb\u91cf \u504f\u79fb\u91cf\u53ef\u4ee5\u662f\u6b63\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u8d1f\u7684\u3002 padding \u548c offset \u7684\u533a\u522b\u5728\u4e8e\uff0c\u7ed9\u4e00\u4e2a Composable \u6dfb\u52a0 offset \u5e76\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u6d4b\u91cf @Composable fun OffsetComposable () { Box ( Modifier . background ( Color . Yellow ). size ( width = 150. dp , height = 70. dp )) { Text ( \"Layout offset modifier sample\" , Modifier . offset ( x = 15. dp , y = 20. dp ) ) } } padding modifier \u6839\u636e\u5e03\u5c40\u65b9\u5411\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u5e94\u7528\u3002\u5728\u4ece\u5de6\u5230\u53f3\u7684\u60c5\u51b5\u4e0b\uff0c\u6b63\u7684\u504f\u79fb\u503c\u4f1a\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8\uff0c\u800c\u5728\u4ece\u53f3\u5230\u5de6\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u5c06\u5143\u7d20\u5411\u5de6\u79fb\u52a8\u3002\u5982\u679c\u4f60\u9700\u8981\u5728\u4e0d\u8003\u8651\u5e03\u5c40\u65b9\u5411\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e00\u4e2a\u504f\u79fb\u91cf\uff0c\u8bf7\u53c2\u89c1 absoluteOffset \u4fee\u6539\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u6b63\u7684\u504f\u79fb\u503c\u603b\u662f\u5c06\u5143\u7d20\u5411\u53f3\u79fb\u52a8","title":"2. offset"},{"location":"layout/overview/#3","text":"\u8bbe\u8ba1\u5e03\u5c40\u65f6\u5e94\u8003\u8651\u5230\u4e0d\u540c\u7684\u5c4f\u5e55\u65b9\u5411\u548c\u5916\u5f62\u5c3a\u5bf8\u3002 Compose \u63d0\u4f9b\u4e86\u4e00\u4e9b\u673a\u5236\u6765\u4fc3\u8fdb\u4f60\u7684 Composable \u5e03\u5c40\u9002\u5e94\u5404\u79cd\u5c4f\u5e55\u914d\u7f6e","title":"3. \u54cd\u5e94\u6027\u5e03\u5c40"},{"location":"layout/overview/#row-column-weight-modifier","text":"\u6b63\u5982\u4f60\u5728\u524d\u9762\u5173\u4e8e\u586b\u5145\u548c\u5c3a\u5bf8\u7684\u7ae0\u8282\u4e2d\u6240\u770b\u5230\u7684\uff0c\u4e00\u4e2a Composable \u5c3a\u5bf8\u9ed8\u8ba4\u662f\u7531\u5b83\u6240\u5305\u88f9\u7684\u5185\u5bb9\u6765\u5b9a\u4e49\u7684\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a Composable \u5c3a\u5bf8\u8bbe\u7f6e\u4e3a\u5728\u5176\u7236\u7ea7\u5185\u5bb9\u4e2d\u5177\u6709\u7075\u6d3b\u6027\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u76d2\u5b50\u7684\u884c\u7684\u53ef\u7ec4\u5408\u5c3a\u5bf8\u3002 \u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u6743\u91cd\u662f\u7b2c\u4e8c\u4e2a\u76d2\u5b50\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5b83\u7684\u5bbd\u5ea6\u4e5f\u662f\u4e24\u500d\u3002\u56e0\u4e3a\u884c\u7684\u5bbd\u5ea6\u662f 210.dp \uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u76d2\u5b50\u7684\u5bbd\u5ea6\u662f 140.dp \uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f 70.dp @Composable fun FlexibleComposable () { Row ( Modifier . width ( 210. dp )) { Box ( Modifier . weight ( 2f ). height ( 50. dp ). background ( Color . Blue )) Box ( Modifier . weight ( 1f ). height ( 50. dp ). background ( Color . Red )) } }","title":"Row \u548c Column \u4e2d\u7684 weight modifier"},{"location":"layout/overview/#4","text":"\u4e3a\u4e86\u77e5\u9053\u6765\u81ea\u7236\u4f53\u7684\u7ea6\u675f\u5e76\u76f8\u5e94\u5730\u8bbe\u8ba1\u5e03\u5c40\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 BoxWithConstraints \u3002\u6d4b\u91cf\u7ea6\u675f\u53ef\u4ee5\u5728 content lambda \u7684\u8303\u56f4\u5185\u627e\u5230\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6d4b\u91cf\u7ea6\u675f\u6765\u4e3a\u4e0d\u540c\u7684\u5c4f\u5e55\u914d\u7f6e\u7ec4\u6210\u4e0d\u540c\u7684\u5e03\u5c40 @Composable fun WithConstraintsComposable () { BoxWithConstraints { Text ( \"My minHeight is $ minHeight while my maxWidth is $ maxWidth \" ) } }","title":"4. \u7ea6\u675f\u6761\u4ef6"},{"location":"layout/overview/#_1","text":"Compose \u901a\u8fc7 androidx.compose.material:material \u4f9d\u8d56\u5173\u7cfb\uff08\u5728 Android Studio \u4e2d\u521b\u5efa Compose \u5de5\u7a0b\u65f6\u4f1a\u5305\u542b\u5728\u5185\uff09\u63d0\u4f9b\u4e86\u5927\u91cf\u57fa\u4e8e Material Design \u7684\u53ef\u7ec4\u5408\u5143\u7d20\uff0c\u4f7f UI \u6784\u5efa\u53d8\u5f97\u7b80\u5355\u3002\u50cf Drawer \u3001 FloatingActionButton \u548c TopAppBar \u8fd9\u6837\u7684\u5143\u7d20\u90fd\u88ab\u63d0\u4f9b\u3002 Material \u7ec4\u4ef6\u5927\u91cf\u4f7f\u7528\u63d2\u69fd API\uff0c\u8fd9\u662f Compose \u5f15\u5165\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5728\u53ef\u7ec4\u5408\u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u4e00\u5c42\u5b9a\u5236\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u7ec4\u4ef6\u66f4\u52a0\u7075\u6d3b\uff0c\u56e0\u4e3a\u5b83\u4eec\u63a5\u53d7\u4e00\u4e2a\u53ef\u4ee5\u81ea\u6211\u914d\u7f6e\u7684\u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u66b4\u9732\u5b50\u5143\u7d20\u7684\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53c2\u6570\u3002\u69fd\u5728\u7528\u6237\u754c\u9762\u4e2d\u7559\u4e0b\u4e86\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u4f9b\u5f00\u53d1\u8005\u6309\u7167\u81ea\u5df1\u7684\u610f\u613f\u6765\u586b\u5145\u3002\u4f8b\u5982\uff0c\u8fd9\u4e9b\u662f\u4f60\u53ef\u4ee5\u5728 TopAppBar \u4e2d\u81ea\u5b9a\u4e49\u7684\u4f4d\u7f6e Composable \u901a\u5e38\u91c7\u53d6\u4e00\u4e2a content \u7684 Composable \uff0c lambda(content: @Composable () -> Unit) \u3002\u63d2\u69fd API \u4e3a\u7279\u5b9a\u7528\u9014\u516c\u5f00\u4e86\u591a\u4e2a\u5185\u5bb9\u53c2\u6570\u3002\u4f8b\u5982\uff0c TopAppBar \u5141\u8bb8\u4f60\u4e3a\u6807\u9898\u3001\u5bfc\u822a\u56fe\u6807\u548c\u884c\u4e3a\u63d0\u4f9b\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c Scaffold \u5141\u8bb8\u4f60\u7528\u57fa\u672c\u7684 Material Design \u5e03\u5c40\u7ed3\u6784\u6765\u5b9e\u73b0\u4e00\u4e2a UI\u3002 Scaffold \u4e3a\u6700\u5e38\u89c1\u7684\u9876\u5c42 Material \u7ec4\u4ef6\u63d0\u4f9b\u4e86\u63d2\u69fd\uff0c\u5982 TopAppBar \u3001 BottomAppBar \u3001 FloatingActionButton \u548c Drawer \u3002\u901a\u8fc7\u4f7f\u7528 Scaffold \uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u786e\u4fdd\u8fd9\u4e9b\u7ec4\u4ef6\u88ab\u6b63\u786e\u5730\u5b9a\u4f4d\u5e76\u6b63\u786e\u5730\u534f\u540c\u5de5\u4f5c\u3002 Tips \u8981\u66f4\u597d\u7684\u4e86\u89e3 Scaffold \u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc @Composable fun HomeScreen ( /*...*/ ) { Scaffold ( drawerContent = { /*...*/ }, topBar = { /*...*/ }, bodyContent = { /*...*/ } ) }","title":"\u57fa\u4e8e\u63d2\u69fd\u7684\u5e03\u5c40"},{"location":"layout/overview/#5-constraintlayout","text":"ConstraintLayout \u53ef\u4ee5\u5e2e\u52a9\u5728\u5c4f\u5e55\u4e0a\u653e\u7f6e\u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684\u5408\u6210\u7269\uff0c\u5e76\u4e14\u662f\u4f7f\u7528\u591a\u4e2a\u5d4c\u5957\u7684 Row , Column , Box \u81ea\u5b9a\u4e49\u5e03\u5c40\u5143\u7d20\u7684\u66ff\u4ee3\u65b9\u6848\u3002 ConstraintLayout \u5728\u5b9e\u73b0\u5177\u6709\u66f4\u590d\u6742\u5bf9\u9f50\u8981\u6c42\u7684\u5927\u578b\u5e03\u5c40\u65f6\u5f88\u6709\u7528\uff0c\u4f46\u5728\u521b\u5efa\u7b80\u5355\u7684\u5e03\u5c40\u65f6\uff0c\u6700\u597d\u4f7f\u7528 Columns \u548c Rows \u6765\u4ee3\u66ff\u3002 \u8981\u5728 Compose \u4e2d\u4f7f\u7528 ConstraintLayout \uff0c\u4f60\u9700\u8981\u5728 build.gradle \u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u4f9d\u8d56\u9879 implementation \"androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha05\" \u6ce8\u610f \u6ce8\u610f\uff1a\u5728 View \u7cfb\u7edf\u4e2d\uff0c ConstraintLayout \u662f\u521b\u5efa\u5927\u578b\u590d\u6742\u5e03\u5c40\u7684\u63a8\u8350\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6241\u5e73\u7684\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u6bd4\u5d4c\u5957\u7684\u89c6\u56fe\u66f4\u6709\u5229\u4e8e\u6027\u80fd\u3002\u7136\u800c\uff0c\u8fd9\u5728 Compose \u4e2d\u5e76\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u6df1\u5c42\u6b21\u7684\u5e03\u5c40\u5c42\u6b21\u7ed3\u6784 Compose \u4e2d\u7684 ConstraintLayout \u4ee5 DSL \u65b9\u5f0f\u5de5\u4f5c\u3002 \u5f15\u7528\u662f\u7528 createRefs() \u6216 createRefFor() \u521b\u5efa\u7684\uff0c ConstraintLayout \u4e2d\u7684\u6bcf\u4e00\u4e2a Composable \u90fd\u9700\u8981\u6709\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u5f15\u7528\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 constrainAs() modifier \u63d0\u4f9b\uff0c\u5b83\u5c06\u5f15\u7528\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\uff0c\u8ba9\u4f60\u5728\u4e3b\u4f53 lambda \u4e2d\u6307\u5b9a\u5176\u7ea6\u675f\u3002 \u7ea6\u675f\u6761\u4ef6\u4f7f\u7528 linkTo() \u6216\u5176\u4ed6\u6709\u7528\u7684\u65b9\u6cd5\u6765\u6307\u5b9a\u3002 paren t\u662f\u4e00\u4e2a\u73b0\u6709\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u5bf9 ConstraintLayout composable \u672c\u8eab\u7684\u7ea6\u675f \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 ConstraintLayout \u7684 Composable \u4f8b\u5b50\uff1a @Composable fun ConstraintLayoutContent () { ConstraintLayout { // \u7ed9\u9700\u8981\u7ea6\u675f\u7684 Composable \u5143\u7d20\u521b\u5efa\u5f15\u7528 val ( button , text ) = createRefs () Button ( onClick = { /* Do something */ }, // \u5c06 button \u7684\u5f15\u7528\u7ed9 Button \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f modifier = Modifier . constrainAs ( button ) { top . linkTo ( parent . top , margin = 16. dp ) } ) { Text ( \"Button\" ) } // \u5c06 Text \u7684\u5f15\u7528\u7ed9 Text \u63a7\u4ef6 // \u5e76\u4e14\u8bbe\u7f6e\u7ea6\u675f Text ( \"Text\" , Modifier . constrainAs ( text ) { top . linkTo ( button . bottom , margin = 16. dp ) }) } } \u8fd9\u6bb5\u4ee3\u7801\u5c06 Button \u7684\u9876\u90e8\u7ea6\u675f\u5230\u7236\u7ea7\uff0c\u8fb9\u8ddd\u4e3a 16.dp \uff0c\u5c06 Text \u7ea6\u675f\u5230 Button \u7684\u5e95\u90e8\uff0c\u8fb9\u8ddd\u4e5f\u4e3a 16.dp \u5173\u4e8e\u5982\u4f55\u4f7f\u7528 ConstraintLayout \u7684\u66f4\u591a\u4f8b\u5b50\uff0c\u8bf7\u53c2\u9605 layout codelab","title":"5. ConstraintLayout"},{"location":"layout/overview/#api","text":"\u5728 ConstraintLayout \u7684\u4f8b\u5b50\u4e2d\uff0c\u7ea6\u675f\u6761\u4ef6\u662f\u5185\u8054\u6307\u5b9a\u7684\uff0c\u5728\u5b83\u4eec\u6240\u5e94\u7528\u7684 composable \u4e2d\u5e26\u6709\u4e00\u4e2a modifier\u3002\u7136\u800c\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u5c06\u7ea6\u675f\u4e0e\u5b83\u4eec\u6240\u5e94\u7528\u7684\u5e03\u5c40\u89e3\u8026\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u80fd\u60f3\u6839\u636e\u5c4f\u5e55\u914d\u7f6e\u6765\u6539\u53d8\u7ea6\u675f\uff0c\u6216\u8005\u5728\u4e24\u4e2a\u7ea6\u675f\u96c6\u4e4b\u95f4\u5236\u4f5c\u52a8\u753b\u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 ConstraintLayout \uff1a \u4f20\u5165\u4e00\u4e2a ConstraintSet \u4f5c\u4e3a ConstraintLayout \u7684\u53c2\u6570\u3002 \u4f7f\u7528 layoutId \u4fee\u6539\u5668\u5c06 ConstraintSet \u4e2d\u521b\u5efa\u7684\u5f15\u7528\u5206\u914d\u7ed9 Composable @Composable fun DecoupledConstraintLayout () { BoxWithConstraints { val constraints = if ( minWidth < 600. dp ) { decoupledConstraints ( margin = 16. dp ) // \u7ad6\u5c4f\u7ea6\u675f } else { decoupledConstraints ( margin = 32. dp ) // \u6a2a\u5c4f\u7ea6\u675f } ConstraintLayout ( constraints ) { Button ( onClick = { /* Do something */ }, modifier = Modifier . layoutId ( \"button\" ) ) { Text ( \"Button\" ) } Text ( \"Text\" , Modifier . layoutId ( \"text\" )) } } } private fun decoupledConstraints ( margin : Dp ): ConstraintSet { return ConstraintSet { val button = createRefFor ( \"button\" ) val text = createRefFor ( \"text\" ) constrain ( button ) { top . linkTo ( parent . top , margin = margin ) } constrain ( text ) { top . linkTo ( button . bottom , margin ) } } } \u7136\u540e\uff0c\u5f53\u4f60\u9700\u8981\u6539\u53d8\u7ea6\u675f\u65f6\uff0c\u4f60\u53ef\u4ee5\u53ea\u4f20\u9012\u4e00\u4e2a\u4e0d\u540c\u7684 ConstraintSet","title":"\u89e3\u8026\u7684 API"},{"location":"layout/overview/#6","text":"\u5728 Compose \u4e2d\uff0cUI \u5143\u7d20\u7531 composable \u51fd\u6570\u8868\u793a\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u88ab\u8c03\u7528\u65f6\u53d1\u51fa\u4e00\u6bb5 UI\uff0c\u7136\u540e\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a UI \u6811\u4e2d\uff0c\u5728\u5c4f\u5e55\u4e0a\u5448\u73b0\u3002\u6bcf\u4e2a UI \u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u7236\u5143\u7d20\u548c\u53ef\u80fd\u7684\u8bb8\u591a\u5b50\u5143\u7d20\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u4f4d\u4e8e\u5b83\u7684\u7236\u5143\u7d20\u4e2d\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\uff08x\uff0cy\uff09\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5c3a\u5bf8\uff0c\u88ab\u6307\u5b9a\u4e3a\u4e00\u4e2a\u5bbd\u5ea6\u548c\u4e00\u4e2a\u9ad8\u5ea6\u3002 \u7236\u5143\u7d20\u4e3a\u4ed6\u4eec\u7684\u5b50\u5143\u7d20\u5b9a\u4e49\u7ea6\u675f\u6761\u4ef6\u3002\u4e00\u4e2a\u5143\u7d20\u88ab\u8981\u6c42\u5728\u8fd9\u4e9b\u7ea6\u675f\u4e2d\u5b9a\u4e49\u5b83\u7684\u5c3a\u5bf8\u3002\u7ea6\u675f\u6761\u4ef6\u9650\u5236\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u548c\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6709\u5b50\u5143\u7d20\uff0c\u5b83\u53ef\u4ee5\u6d4b\u91cf\u6bcf\u4e2a\u5b50\u5143\u7d20\u4ee5\u5e2e\u52a9\u786e\u5b9a\u5176\u5c3a\u5bf8\u3002\u4e00\u65e6\u4e00\u4e2a\u5143\u7d20\u786e\u5b9a\u5e76\u544a\u77e5\u4e86\u5b83\u81ea\u5df1\u7684\u5c3a\u5bf8\uff0c\u5b83\u6709\u673a\u4f1a\u5b9a\u4e49\u5982\u4f55\u76f8\u5bf9\u4e8e\u81ea\u8eab\u653e\u7f6e\u5b50\u5143\u7d20\uff0c\u5c31\u50cf\u5728\u521b\u5efa\u81ea\u5b9a\u4e49\u5e03\u5c40\u4e2d\u8be6\u7ec6\u63cf\u8ff0\u7684\u3002 \u6ce8\u610f\uff1aCompose UI \u4e0d\u5141\u8bb8\u591a\u901a\u9053\u6d4b\u91cf\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u5e03\u5c40\u5143\u7d20\u4e0d\u80fd\u591a\u6b21\u6d4b\u91cf\u5b83\u7684\u4efb\u4f55\u5b50\u5143\u7d20\uff0c\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u6d4b\u91cf\u914d\u7f6e\u3002 \u5355\u904d\u6d4b\u91cf\u6709\u52a9\u4e8e\u63d0\u9ad8\u6027\u80fd\uff0c\u4f7f Compose \u53ef\u4ee5\u6709\u6548\u5904\u7406\u6df1\u5c42 UI \u6811\u3002\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u6d4b\u91cf\u4e86\u5b83\u7684\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u800c\u8fd9\u4e2a\u5b50\u5143\u7d20\u53c8\u6d4b\u91cf\u4e86\u5b83\u7684\u4e00\u4e2a\u5b50\u5143\u7d20\u4e24\u6b21\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u90a3\u4e48\u4e00\u6b21\u5c1d\u8bd5\u5e03\u5c40\u6574\u4e2a UI \u5c31\u5fc5\u987b\u505a\u5f88\u591a\u5de5\u4f5c\uff0c\u8fd9\u5c31\u5f88\u96be\u8ba9\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u6301\u826f\u597d\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u4f60\u771f\u7684\u9700\u8981\u5728\u5355\u4e2a\u5b50\u9879\u6d4b\u91cf\u6240\u80fd\u544a\u8bc9\u4f60\u7684\u4fe1\u606f\u4e4b\u4e0a\u7684\u989d\u5916\u4fe1\u606f\u3002\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u5728\u5185\u5728\u7684\u6d4b\u91cf\u90e8\u5206\u8ba8\u8bba","title":"6. \u81ea\u5b9a\u4e49\u5e03\u5c40"},{"location":"layout/overview/#layout-modifier","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528 layout modifier \u6765\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u7684\u6d4b\u91cf\u548c\u5e03\u5c40\u65b9\u5f0f\u3002 Layout \u662f\u4e00\u4e2a lambda \uff1b\u5b83\u7684\u53c2\u6570\u5305\u62ec\u4f60\u53ef\u4ee5\u6d4b\u91cf\u7684\u5143\u7d20\uff0c\u4ee5\u53ef\u6d4b\u91cf\u7684\u65b9\u5f0f\u4f20\u9012\uff0c\u800c\u8fd9\u4e2a Composable \u7684\u4f20\u5165\u7ea6\u675f\u5219\u4ee5\u7ea6\u675f\u7684\u65b9\u5f0f\u4f20\u9012\u3002\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 layout modifier \u53ef\u4ee5\u662f\u8fd9\u6837\u7684 fun Modifier . customLayoutModifier (...) = this . layout { measurable , constraints -> ... }) \u8ba9\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u4e2a\u6587\u672c\uff0c\u5e76\u63a7\u5236\u7b2c\u4e00\u884c\u6587\u672c\u4ece\u9876\u90e8\u5230\u57fa\u7ebf\u7684\u8ddd\u79bb\u3002\u8fd9\u6b63\u662f paddingFromBaseline \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u73b0\u5b83\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u4f7f\u7528 layout modifier \u6765\u624b\u52a8\u5c06 Composable \u7684\u4e1c\u897f\u653e\u5728\u5c4f\u5e55\u4e0a\u3002 \u4e0b\u9762\u662f\u671f\u671b\u7684\u884c\u4e3a\uff0c\u6587\u672c\u9876\u90e8\u7684 padding \u88ab\u8bbe\u7f6e\u4e3a 24.dp \u4e0b\u9762\u662f\u4ea7\u751f\u8fd9\u79cd\u95f4\u8ddd\u7684\u4ee3\u7801\uff1a fun Modifier . firstBaselineToTop ( firstBaselineToTop : Dp ) = layout { measurable , constraints -> // Measure the composable val placeable = measurable . measure ( constraints ) // Check the composable has a first baseline check ( placeable [ FirstBaseline ] != AlignmentLine . Unspecified ) val firstBaseline = placeable [ FirstBaseline ] // Height of the composable with padding - first baseline val placeableY = firstBaselineToTop . roundToPx () - firstBaseline val height = placeable . height + placeableY layout ( placeable . width , height ) { // Where the composable gets placed placeable . placeRelative ( 0 , placeableY ) } } \u4ee5\u4e0b\u662f\u90a3\u6bb5\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff1a \u5728 measurablelambda \u53c2\u6570\u4e2d\uff0c\u4f60\u901a\u8fc7\u8c03\u7528 measurable.measure(constraints) \u6765\u6d4b\u91cf\u7531 measurabl \u53c2\u6570\u4ee3\u8868\u7684 Text \u3002 \u4f60\u901a\u8fc7\u8c03\u7528 layout(width, height) \u65b9\u6cd5\u6765\u6307\u5b9a Composable \u7684\u5c3a\u5bf8\uff0c\u8be5\u65b9\u6cd5\u4e5f\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u4e8e\u653e\u7f6e\u5305\u88c5\u5143\u7d20\u7684 lambda \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u6700\u540e\u4e00\u4e2a baseline \u548c\u589e\u52a0\u7684 top padding \u4e4b\u95f4\u7684\u9ad8\u5ea6\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 placeable.place(x, y) \u5c06\u88ab\u5305\u88c5\u597d\u7684\u5143\u7d20\u653e\u7f6e\u5728\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u88ab\u5305\u88c5\u7684\u5143\u7d20\u6ca1\u6709\u88ab\u653e\u7f6e\uff0c\u5b83\u4eec\u5c06\u4e0d\u53ef\u89c1\u3002 y position \u5bf9\u5e94\u7684\u662f top padding -- \u6587\u672c\u7684\u7b2c\u4e00\u6761 baseline \u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u662f\u5426\u5982\u9884\u671f\u7684\u90a3\u6837\u5de5\u4f5c\uff0c\u8bf7\u5728 Text \u4e0a\u4f7f\u7528\u8fd9\u4e2a modifier \u3002 @Preview @Composable fun TextWithPaddingToBaselinePreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . firstBaselineToTop ( 32. dp )) } } @Preview @Composable fun TextWithNormalPaddingPreview () { MyApplicationTheme { Text ( \"Hi there!\" , Modifier . padding ( top = 32. dp )) } }","title":"\u4f7f\u7528 layout modifier"},{"location":"layout/row/","text":"@Composable inline fun Row ( modifier : Modifier = Modifier , horizontalArrangement : Arrangement . Horizontal = Arrangement . Start , verticalAlignment : Alignment . Vertical = Alignment . Top , content : RowScope .() -> Unit ): Unit Row \u4f1a\u5c06\u91cc\u9762\u7684\u5b50\u9879\u653e\u5728\u4e00\u4e2a\u6c34\u5e73\u7684\u5e8f\u5217\u4e2d Row \u5e03\u5c40\u80fd\u591f\u6839\u636e\u4f7f\u7528 RowScope.weight \u4fee\u6539\u5668\u63d0\u4f9b\u7684\u6743\u91cd\u6765\u5206\u914d\u91cc\u9762\u5b50\u9879\u7684\u5bbd\u5ea6 \u5982\u679c\u4e00\u4e2a\u5b50\u9879\u6ca1\u6709\u63d0\u4f9b\u6743\u91cd\u7684\u8bdd\uff0c\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u5b50\u9879\u9ed8\u8ba4\u7684\u5bbd\u5ea6\uff0c\u518d\u6839\u636e\u5176\u4ed6\u5269\u4f59\u6709\u6743\u91cd\u7684\u5b50\u9879\u8ba1\u7b97\u5269\u4f59\u7684\u7a7a\u95f4 @Composable fun RowDemo () { Row { Box ( Modifier . size ( 40. dp ). background ( Color . Magenta )) Box ( Modifier . size ( 40. dp ). weight ( 1f ). background ( Color . Yellow )) Box ( Modifier . size ( 40. dp ) . weight ( 1f ) . background ( Color . Green ) ) } } Row { Box ( Modifier . size ( 40. dp ). background ( Color . Magenta )) Box ( Modifier . size ( 40. dp ). background ( Color . Yellow )) Box ( Modifier . size ( 40. dp ). background ( Color . Green )) } \u800c\u5982\u679c Row \u91cc\u9762\u7684\u5b50\u9879\u90fd\u6ca1\u6709\u8bbe\u7f6e weight \u7684\u8bdd\uff0c\u5c06\u4f1a\u5c3d\u53ef\u80fd\u7684\u5c0f\uff0c\u4f7f\u91cc\u9762\u7684\u5b50\u9879\u7d27\u8d34\u5728\u4e00\u8d77 \u4e5f\u5c31\u662f\u6709\u70b9\u50cf xml \u4e2d\u7684 wrap_content \u5c5e\u6027","title":"Row"},{"location":"layout/spacer/","text":"@Composable fun Spacer ( modifier : Modifier ): @Composable Unit Spacer \u80fd\u591f\u63d0\u4f9b\u4e00\u4e2a\u7a7a\u767d\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u4f7f\u7528 Modifier.width , Modifier.height \u548c Modifier.size \u6765\u586b\u5145 import androidx.compose.foundation.layout.Box import androidx.compose.foundation.background import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width Row { Box ( Modifier . size ( 100. dp ). background ( Color . Red )) Spacer ( Modifier . width ( 20. dp )) Box ( Modifier . size ( 100. dp ). background ( Color . Magenta )) Spacer ( Modifier . weight ( 1f )) Box ( Modifier . size ( 100. dp ). background ( Color . Black )) }","title":"Spacer"},{"location":"layout/scaffold/bottombar/","text":"@Composable fun BottomAppBar ( modifier : Modifier = Modifier , backgroundColor : Color = MaterialTheme . colors . primarySurface , contentColor : Color = contentColorFor ( backgroundColor ), cutoutShape : Shape? = null , elevation : Dp = AppBarDefaults . BottomAppBarElevation , contentPadding : PaddingValues = AppBarDefaults . ContentPadding , content : RowScope .() -> Unit ): @Composable Unit @Composable fun BottomNavigation ( modifier : Modifier = Modifier , backgroundColor : Color = MaterialTheme . colors . primarySurface , contentColor : Color = contentColorFor ( backgroundColor ), elevation : Dp = BottomNavigationDefaults . Elevation , content : RowScope .() -> Unit ): @Composable Unit bottomBar \u662f\u8bbe\u7f6e\u5c4f\u5e55\u5e95\u90e8\u7684\u5bfc\u822a\u680f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528 BottomNavigation \u6216\u8005 BottomAppBar \u6765\u5b9e\u73b0 @Composable fun ScaffoldDemo (){ var selectedItem by remember { mutableStateOf ( 0 ) } val items = listOf ( \"\u4e3b\u9875\" , \"\u6211\u559c\u6b22\u7684\" , \"\u8bbe\u7f6e\" ) Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } } ) }, bottomBar = { BottomNavigation { items . forEachIndexed { index , item -> BottomNavigationItem ( icon = { Icon ( Icons . Filled . Favorite , contentDescription = null ) }, label = { Text ( item ) }, selected = selectedItem == index , onClick = { selectedItem = index } ) } } } ){ } } \u8fd9\u6837\u4e00\u4e2a\u57fa\u672c\u7684\u5e95\u90e8\u5bfc\u822a\u680f\u6211\u4eec\u5c31\u5b9e\u73b0\u5566\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1f \u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e00\u70b9\u4ee3\u7801\uff0c\u8ba9\u5bfc\u822a\u680f\u53d8\u6210\u4e09\u4e2a\u4e0d\u540c\u7684\u56fe\u6807\u6309\u94ae \u5c06 BottomNavigationItem \u7684\u4ee3\u7801\u4fee\u6539\u6210\u4ee5\u4e0b BottomNavigationItem ( icon = { when ( index ){ 0 -> Icon ( Icons . Filled . Home , contentDescription = null ) 1 -> Icon ( Icons . Filled . Favorite , contentDescription = null ) else -> Icon ( Icons . Filled . Settings , contentDescription = null ) } }, label = { Text ( item ) }, selected = selectedItem == index , onClick = { selectedItem = index } ) \u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f \u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f\u7684\u6f14\u793a \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github \u66f4\u591a BottomNavigation \u8be6\u60c5","title":"2. bottomBar"},{"location":"layout/scaffold/bottombar/#_1","text":"\u8fd9\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f\u7684\u6f14\u793a \u5b9e\u73b0\u7684\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\u6765\u67e5\u770b Mkdocs Github","title":"\u81ea\u5b9a\u4e49\u5e95\u90e8\u5bfc\u822a\u680f"},{"location":"layout/scaffold/bottombar/#_2","text":"BottomNavigation \u8be6\u60c5","title":"\u66f4\u591a"},{"location":"layout/scaffold/drawercontent/","text":"\u8bbe\u7f6e\u4e86 drawerContent \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4fa7\u8fb9\u5e94\u7528\u680f @Composable fun ScaffoldDemo () { Scaffold ( drawerContent = { DrawerContent () } ) { } } @Composable fun DrawerContent (){ Box ( modifier = Modifier . fillMaxSize () ){ Row ( modifier = Modifier . fillMaxWidth (), horizontalArrangement = Arrangement . Start , verticalAlignment = Alignment . CenterVertically ){ Surface ( shape = CircleShape , modifier = Modifier . size ( 50. dp ) ){ Image ( painterResource ( id = R . drawable . logo ), null ) } Spacer ( Modifier . padding ( horizontal = 10. dp )) Text ( \"\u9999\u8fa3\u9e21\u817f\u5821\" ) } } }","title":"3. drawerContent"},{"location":"layout/scaffold/floatingactionbutton/","text":"floatingActionButton \u53ef\u4ee5\u521b\u5efa\u53ef\u4ee5\u4f4d\u4e8e\u5e95\u90e8\u7684\u6309\u94ae \u53ef\u4ee5\u8bbe\u7f6e FabPostion.Center \u6216 FabPostion.End @Composable fun ScaffoldDemo () { Scaffold ( floatingActionButtonPosition = FabPosition . Center , floatingActionButton = { FloatingActionButton ( onClick = { }, backgroundColor = Color . Gray ) { Row ( modifier = Modifier . padding ( 10. dp ), verticalAlignment = Alignment . CenterVertically ){ Icon ( Icons . Filled . Add , null ) Text ( \"\u6dfb\u52a0\u4e8b\u4ef6\" ) } } } ) { } }","title":"4. floatingActionButton"},{"location":"layout/scaffold/overview/","text":"Scaffold \u5b9e\u73b0\u4e86 Material Design \u7684\u57fa\u672c\u89c6\u56fe\u754c\u9762\u7ed3\u6784 \u5982\u4ee5\u4e0b\u7684\u4fa7\u8fb9\u5e94\u7528\u680f\u3001\u5e95\u90e8\u5bfc\u822a\u680f\u3001\u5bfc\u822a\u680f\u7b49\u6548\u679c \u53c2\u6570\u6982\u8ff0 \u53c2\u6570 \u529f\u80fd bottomBar \u8bbe\u7f6e\u5c4f\u5e55\u5e95\u90e8\u7684\u5bfc\u822a\u680f drawerContent \u521b\u5efa\u4e00\u4e2a\u4fa7\u8fb9\u5e94\u7528\u680f floatingActionButton \u521b\u5efa\u53ef\u4ee5\u4f4d\u4e8e\u5e95\u90e8\u7684\u6309\u94ae topBar \u8bbe\u7f6e\u5c4f\u5e55\u9876\u90e8\u7684\u5e94\u7528\u680f","title":"\u6982\u8ff0"},{"location":"layout/scaffold/overview/#_1","text":"\u53c2\u6570 \u529f\u80fd bottomBar \u8bbe\u7f6e\u5c4f\u5e55\u5e95\u90e8\u7684\u5bfc\u822a\u680f drawerContent \u521b\u5efa\u4e00\u4e2a\u4fa7\u8fb9\u5e94\u7528\u680f floatingActionButton \u521b\u5efa\u53ef\u4ee5\u4f4d\u4e8e\u5e95\u90e8\u7684\u6309\u94ae topBar \u8bbe\u7f6e\u5c4f\u5e55\u9876\u90e8\u7684\u5e94\u7528\u680f","title":"\u53c2\u6570\u6982\u8ff0"},{"location":"layout/scaffold/topbar/","text":"@Composable fun TopAppBar ( title : @Composable () -> Unit , modifier : Modifier = Modifier , navigationIcon : @Composable (() -> Unit ) ? = null , actions : @Composable RowScope .() -> Unit = {}, backgroundColor : Color = MaterialTheme . colors . primarySurface , contentColor : Color = contentColorFor ( backgroundColor ), elevation : Dp = AppBarDefaults . TopAppBarElevation ) topBar topBar \u662f\u8bbe\u7f6e\u5c4f\u5e55\u9876\u90e8\u7684\u5e94\u7528\u680f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u81ea\u5e26\u7684 TopAppBar \u51fd\u6570\u6765\u5b9e\u73b0 \u5177\u4f53\u7528\u6cd5 @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } } ) }, ){ } } \u8fd8\u53ef\u4ee5\u8bbe\u7f6e TopAppBar \u4e2d\u7684 actions \u53c2\u6570 @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } }, actions = { IconButton ( onClick = { }) { Icon ( Icons . Filled . Search , null ) } IconButton ( onClick = { }) { Icon ( Icons . Filled . MoreVert , null ) } } ) }, ){ } } \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u5185\u5bb9\u4ee5 Row \u7684\u65b9\u5f0f\u6765\u6392\u5217","title":"1. topBar"},{"location":"layout/scaffold/topbar/#topbar","text":"topBar \u662f\u8bbe\u7f6e\u5c4f\u5e55\u9876\u90e8\u7684\u5e94\u7528\u680f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u81ea\u5e26\u7684 TopAppBar \u51fd\u6570\u6765\u5b9e\u73b0 \u5177\u4f53\u7528\u6cd5 @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } } ) }, ){ } } \u8fd8\u53ef\u4ee5\u8bbe\u7f6e TopAppBar \u4e2d\u7684 actions \u53c2\u6570 @Composable fun ScaffoldDemo (){ Scaffold ( topBar = { TopAppBar ( title = { Text ( \"\u4e3b\u9875\" ) }, navigationIcon = { IconButton ( onClick = { }) { Icon ( Icons . Filled . ArrowBack , null ) } }, actions = { IconButton ( onClick = { }) { Icon ( Icons . Filled . Search , null ) } IconButton ( onClick = { }) { Icon ( Icons . Filled . MoreVert , null ) } } ) }, ){ } } \u5b83\u4f1a\u5c06\u91cc\u9762\u7684\u5185\u5bb9\u4ee5 Row \u7684\u65b9\u5f0f\u6765\u6392\u5217","title":"topBar"},{"location":"parameters/modifier/","text":"Modifier Modifier , \u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a\u4fee\u9970\u5668\uff0c\u7528\u4e8e\u4fee\u6539\u7ec4\u4ef6\u7684\u6837\u5f0f\u3002\u6bcf\u4e2a Compose \u7ec4\u4ef6\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a Modifier \u53c2\u6570\u7528\u4e8e\u4fee\u6539\u6837\u5f0f\u3002 \u57fa\u7840\u7528\u6cd5 Modifier \u672c\u8eab\u53ea\u5b9e\u73b0\u4e86\u51e0\u4e2a\u51fd\u6570\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u4fee\u9970\u5668\uff0c\u5927\u591a\u6570\u4fee\u9970\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7 Kotlin \u6269\u5c55\u51fd\u6570 \u5b9e\u73b0\u7684\u3002 \u4f8b\u5982 size() \u8fd9\u4e2a\u4fee\u9970\u51fd\u6570\uff0c\u5176\u5b9e\u6765\u81ea androidx.compose.foundation.layout \u5305\u4e0b\u7684 Size.kt \u3002\u540c\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u51fd\u6570\u6765\u5411 Modifier \u6dfb\u52a0\u4f60\u81ea\u5df1\u7684\u4fee\u9970\u65b9\u6cd5\u3002 \u4ee5\u4e0b\u4e3a\u5e38\u7528\u7684\u4fee\u9970\u65b9\u6cd5: // \u4fee\u6539\u63a7\u4ef6\u5927\u5c0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5bbd\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u9ad8\u5ea6 size ( width : Dp , height : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u5bbd\u5ea6 width ( width : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u9ad8\u5ea6 height ( height : Dp ) // \u9650\u5236\u63a7\u4ef6\u7684\u5bbd\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 widthIn ( min : Dp , max : Dp ) // \u9650\u5236\u63a7\u4ef6\u9ad8\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 heightIn ( min : Dp , max : Dp ) // \u4f7f\u5f97\u63a7\u4ef6\u7684\u5bbd\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxWidth () // \u4f7f\u5f97\u63a7\u4ef6\u7684\u9ad8\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxHeight () // \u4f7f\u5f97\u63a7\u4ef6\u6839\u636e\u5185\u90e8\u7684\u7ec4\u4ef6\u81ea\u9002\u5e94\u5185\u5bb9\u5927\u5c0f wrapContentSize () \u4fee\u9970\u65b9\u6cd5\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002 \u53ef\u4ee5\u4f7f\u7528 Android Studio \u81ea\u52a8\u8865\u5168\u6216\u8005\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e\u66f4\u591a\u4fee\u9970\u51fd\u6570\u3002 \u4fee\u9970\u4f18\u5148\u7ea7 \u4fee\u9970\u65b9\u6cd5\u76f4\u63a5\u662f\u5b58\u5728\u5148\u540e\u987a\u5e8f\u7684\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u987a\u5e8f\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u6837\u7684\u6548\u679c\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a @Composable fun UI (){ Card ( modifier = Modifier . clickable { } . padding ( 16. dp ) ) { Box ( modifier = Modifier . padding ( 20. dp )){ Text ( text = \"\u6211\u5df2\u7ecf\u6012\u4e0d\u53ef\u904f\u4e86\" ) } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c clickable{} \u5728 padding() \u4e4b\u524d \u8c03\u7528\uff0c\u56e0\u6b64 Card \u5916\u95f4\u8ddd\u7684\u90e8\u5206\u4e5f\u662f\u53ef\u4ee5\u88ab\u70b9\u51fb\u5230\u7684\u3002 \u53cd\u8f6c\u4e00\u4e0b\uff0c\u5982\u679c clickable{} \u5728 padding() \u4e4b\u540e \u88ab\u8c03\u7528\uff0c\u90a3\u4e48 Card \u7684\u5916\u95f4\u8ddd\u90e8\u5206\u5c31\u4e0d\u80fd\u70b9\u51fb\u4e86\uff0c\u53ea\u80fd\u70b9\u51fb Card \u672c\u8eab\u3002 \u4e3a\u4ec0\u4e48\u5462? (\u6316\u6e90\u7801\u65f6\u95f4~) \u76f4\u63a5\u67e5\u770b\u8fd9\u4e9b \u4fee\u9970\u65b9\u6cd5 \u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u89c1\u4ed6\u4eec\u662f\u8fd9\u6837\u5b9e\u73b0\u7684: fun Modifier . padding ( all : Dp ) = this . then ( PaddingModifier ( start = all , top = all , end = all , bottom = all , rtlAware = true , inspectorInfo = debugInspectorInfo { name = \"padding\" value = all } ) ) \u663e\u800c\u6613\u89c1\uff0c\u8fd9\u662f\u4e00\u4e2aModifier\u7684\u6269\u5c55\u51fd\u6570\u3002 \u5b83\u8c03\u7528\u4e86 Modifier \u7684 then() \u51fd\u6570\uff0c\u800c\u8fd9\u4e2a then() \u9700\u8981\u63a5\u6536\u4e00\u4e2aModifier\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2aPaddingModifier\u7684\u6700\u7ec8\u7236\u7c7b\uff0c\u5c31\u662f Modifier \u3002 \u90a3 then() \u51fd\u6570\u5e72\u4e86\u4ec0\u4e48\u5462? \u7ee7\u7eed\u770b\u6e90\u7801: infix fun then ( other : Modifier ): Modifier = if ( other === Modifier ) this else CombinedModifier ( this , other ) \u5f88\u663e\u7136\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a CombinedModifier \u5bf9\u8c61\uff0c\u800c CombinedModifier \u4e5f\u662f\u7ee7\u627f\u81ea Modifier \u7c7b\u7684: class CombinedModifier ( private val outer : Modifier , private val inner : Modifier ) : Modifier { override fun < R > foldIn ( initial : R , operation : ( R , Modifier . Element ) -> R ): R = inner . foldIn ( outer . foldIn ( initial , operation ), operation ) override fun < R > foldOut ( initial : R , operation : ( Modifier . Element , R ) -> R ): R = outer . foldOut ( inner . foldOut ( initial , operation ), operation ) override fun any ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . any ( predicate ) || inner . any ( predicate ) override fun all ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . all ( predicate ) && inner . all ( predicate ) override fun equals ( other : Any? ): Boolean = other is CombinedModifier && outer == other . outer && inner == other . inner override fun hashCode (): Int = outer . hashCode () + 31 * inner . hashCode () override fun toString () = \"[\" + foldIn ( \"\" ) { acc , element -> if ( acc . isEmpty ()) element . toString () else \" $ acc , $ element \" } + \"]\" } \u8fd9\u4e2a CombinedModifier \u6301\u6709\u4e86\u6211\u4eec\u65b0\u589e\u7684\u4fee\u9970\u5668\u548c\u539f\u6709\u7684\u4fee\u9970\u5668\uff0c\u5e76\u4e14\u5c06\u5176\u7ec4\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684 Modifier \u3002 \u53ef\u4ee5\u770b\u5230\uff0c Modifier \u7684\u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u94fe\u8868\uff0c\u5f53\u6211\u4eec\u7ed9\u4e00\u4e2a\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a CombinedModifier \u5c06 \u65e7\u7684\u548c\u65b0\u7684Modifier\u7ec4\u5408\u5728\u4e00\u8d77 \uff0c\u5408\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 Modifier \u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8c03\u7528\u4fee\u9970\u51fd\u6570\u4e3a\u4ec0\u4e48\u4f1a\u6709\u987a\u5e8f\u95ee\u9898\uff0c\u4fee\u9970\u51fd\u6570\u5e76\u4e0d\u662f\u7b80\u5355\u4fee\u6539\u4e86\u67d0\u4e2a\u7ec4\u4ef6\u5185\u90e8\u7684\u53c2\u6570\uff0c\u800c\u662f\u7ed9\u8fd9\u4e2a\u7ec4\u4ef6 \u5957\u4e0a\u4e86\u4e00\u5c42\u53c8\u4e00\u5c42\u7684\u4fee\u9970\u5668 \u3002 \u7528\u6cd5\u793a\u8303 \u6765\u5199\u4e00\u4e2a\u53ef\u4ee5\u88ab\u70b9\u51fb\u7684\u5361\u7247\u5427, \u8ba9\u8fd9\u4e2a\u5361\u7247\u5bbd\u5ea6\u6700\u5927\uff0c\u9ad8\u5ea6100dp, \u5e76\u4e14\u5916\u8fb9\u8ddd16.dp\uff0c\u9634\u5f71\u6df1\u5ea68.dp\u5427 @Composable fun CardExample (){ Card ( modifier = Modifier . fillMaxWidth () . height ( 100. dp ) . padding ( 16. dp ) . clickable { /* \u4e0d\u505a\u4efb\u4f55\u4e8b */ }, elevation = 8. dp ) { // \u5185\u90e8\u6ca1\u6709\u7ec4\u4ef6 } } \u8fd0\u884c\u6548\u679c:","title":"Modifier"},{"location":"parameters/modifier/#modifier","text":"Modifier , \u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a\u4fee\u9970\u5668\uff0c\u7528\u4e8e\u4fee\u6539\u7ec4\u4ef6\u7684\u6837\u5f0f\u3002\u6bcf\u4e2a Compose \u7ec4\u4ef6\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a Modifier \u53c2\u6570\u7528\u4e8e\u4fee\u6539\u6837\u5f0f\u3002","title":"Modifier"},{"location":"parameters/modifier/#_1","text":"Modifier \u672c\u8eab\u53ea\u5b9e\u73b0\u4e86\u51e0\u4e2a\u51fd\u6570\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u4fee\u9970\u5668\uff0c\u5927\u591a\u6570\u4fee\u9970\u65b9\u6cd5\u90fd\u662f\u901a\u8fc7 Kotlin \u6269\u5c55\u51fd\u6570 \u5b9e\u73b0\u7684\u3002 \u4f8b\u5982 size() \u8fd9\u4e2a\u4fee\u9970\u51fd\u6570\uff0c\u5176\u5b9e\u6765\u81ea androidx.compose.foundation.layout \u5305\u4e0b\u7684 Size.kt \u3002\u540c\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u51fd\u6570\u6765\u5411 Modifier \u6dfb\u52a0\u4f60\u81ea\u5df1\u7684\u4fee\u9970\u65b9\u6cd5\u3002 \u4ee5\u4e0b\u4e3a\u5e38\u7528\u7684\u4fee\u9970\u65b9\u6cd5: // \u4fee\u6539\u63a7\u4ef6\u5927\u5c0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5bbd\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u9ad8\u5ea6 size ( width : Dp , height : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u5bbd\u5ea6 width ( width : Dp ) // \u5355\u72ec\u4fee\u6539\u63a7\u4ef6\u9ad8\u5ea6 height ( height : Dp ) // \u9650\u5236\u63a7\u4ef6\u7684\u5bbd\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 widthIn ( min : Dp , max : Dp ) // \u9650\u5236\u63a7\u4ef6\u9ad8\u5ea6\u5728\u4e00\u5b9a\u8303\u56f4\u5185 heightIn ( min : Dp , max : Dp ) // \u4f7f\u5f97\u63a7\u4ef6\u7684\u5bbd\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxWidth () // \u4f7f\u5f97\u63a7\u4ef6\u7684\u9ad8\u5ea6\u9002\u5e94\u7236\u5e03\u5c40\u5927\u5c0f fillMaxHeight () // \u4f7f\u5f97\u63a7\u4ef6\u6839\u636e\u5185\u90e8\u7684\u7ec4\u4ef6\u81ea\u9002\u5e94\u5185\u5bb9\u5927\u5c0f wrapContentSize () \u4fee\u9970\u65b9\u6cd5\u8fd8\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002 \u53ef\u4ee5\u4f7f\u7528 Android Studio \u81ea\u52a8\u8865\u5168\u6216\u8005\u67e5\u770b\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e\u66f4\u591a\u4fee\u9970\u51fd\u6570\u3002","title":"\u57fa\u7840\u7528\u6cd5"},{"location":"parameters/modifier/#_2","text":"\u4fee\u9970\u65b9\u6cd5\u76f4\u63a5\u662f\u5b58\u5728\u5148\u540e\u987a\u5e8f\u7684\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u987a\u5e8f\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u6837\u7684\u6548\u679c\u3002\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a @Composable fun UI (){ Card ( modifier = Modifier . clickable { } . padding ( 16. dp ) ) { Box ( modifier = Modifier . padding ( 20. dp )){ Text ( text = \"\u6211\u5df2\u7ecf\u6012\u4e0d\u53ef\u904f\u4e86\" ) } } } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c clickable{} \u5728 padding() \u4e4b\u524d \u8c03\u7528\uff0c\u56e0\u6b64 Card \u5916\u95f4\u8ddd\u7684\u90e8\u5206\u4e5f\u662f\u53ef\u4ee5\u88ab\u70b9\u51fb\u5230\u7684\u3002 \u53cd\u8f6c\u4e00\u4e0b\uff0c\u5982\u679c clickable{} \u5728 padding() \u4e4b\u540e \u88ab\u8c03\u7528\uff0c\u90a3\u4e48 Card \u7684\u5916\u95f4\u8ddd\u90e8\u5206\u5c31\u4e0d\u80fd\u70b9\u51fb\u4e86\uff0c\u53ea\u80fd\u70b9\u51fb Card \u672c\u8eab\u3002 \u4e3a\u4ec0\u4e48\u5462? (\u6316\u6e90\u7801\u65f6\u95f4~) \u76f4\u63a5\u67e5\u770b\u8fd9\u4e9b \u4fee\u9970\u65b9\u6cd5 \u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u89c1\u4ed6\u4eec\u662f\u8fd9\u6837\u5b9e\u73b0\u7684: fun Modifier . padding ( all : Dp ) = this . then ( PaddingModifier ( start = all , top = all , end = all , bottom = all , rtlAware = true , inspectorInfo = debugInspectorInfo { name = \"padding\" value = all } ) ) \u663e\u800c\u6613\u89c1\uff0c\u8fd9\u662f\u4e00\u4e2aModifier\u7684\u6269\u5c55\u51fd\u6570\u3002 \u5b83\u8c03\u7528\u4e86 Modifier \u7684 then() \u51fd\u6570\uff0c\u800c\u8fd9\u4e2a then() \u9700\u8981\u63a5\u6536\u4e00\u4e2aModifier\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2aPaddingModifier\u7684\u6700\u7ec8\u7236\u7c7b\uff0c\u5c31\u662f Modifier \u3002 \u90a3 then() \u51fd\u6570\u5e72\u4e86\u4ec0\u4e48\u5462? \u7ee7\u7eed\u770b\u6e90\u7801: infix fun then ( other : Modifier ): Modifier = if ( other === Modifier ) this else CombinedModifier ( this , other ) \u5f88\u663e\u7136\uff0c\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a CombinedModifier \u5bf9\u8c61\uff0c\u800c CombinedModifier \u4e5f\u662f\u7ee7\u627f\u81ea Modifier \u7c7b\u7684: class CombinedModifier ( private val outer : Modifier , private val inner : Modifier ) : Modifier { override fun < R > foldIn ( initial : R , operation : ( R , Modifier . Element ) -> R ): R = inner . foldIn ( outer . foldIn ( initial , operation ), operation ) override fun < R > foldOut ( initial : R , operation : ( Modifier . Element , R ) -> R ): R = outer . foldOut ( inner . foldOut ( initial , operation ), operation ) override fun any ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . any ( predicate ) || inner . any ( predicate ) override fun all ( predicate : ( Modifier . Element ) -> Boolean ): Boolean = outer . all ( predicate ) && inner . all ( predicate ) override fun equals ( other : Any? ): Boolean = other is CombinedModifier && outer == other . outer && inner == other . inner override fun hashCode (): Int = outer . hashCode () + 31 * inner . hashCode () override fun toString () = \"[\" + foldIn ( \"\" ) { acc , element -> if ( acc . isEmpty ()) element . toString () else \" $ acc , $ element \" } + \"]\" } \u8fd9\u4e2a CombinedModifier \u6301\u6709\u4e86\u6211\u4eec\u65b0\u589e\u7684\u4fee\u9970\u5668\u548c\u539f\u6709\u7684\u4fee\u9970\u5668\uff0c\u5e76\u4e14\u5c06\u5176\u7ec4\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684 Modifier \u3002 \u53ef\u4ee5\u770b\u5230\uff0c Modifier \u7684\u5b9e\u73b0\u975e\u5e38\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u94fe\u8868\uff0c\u5f53\u6211\u4eec\u7ed9\u4e00\u4e2a\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a CombinedModifier \u5c06 \u65e7\u7684\u548c\u65b0\u7684Modifier\u7ec4\u5408\u5728\u4e00\u8d77 \uff0c\u5408\u6210\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684 Modifier \u3002 \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8c03\u7528\u4fee\u9970\u51fd\u6570\u4e3a\u4ec0\u4e48\u4f1a\u6709\u987a\u5e8f\u95ee\u9898\uff0c\u4fee\u9970\u51fd\u6570\u5e76\u4e0d\u662f\u7b80\u5355\u4fee\u6539\u4e86\u67d0\u4e2a\u7ec4\u4ef6\u5185\u90e8\u7684\u53c2\u6570\uff0c\u800c\u662f\u7ed9\u8fd9\u4e2a\u7ec4\u4ef6 \u5957\u4e0a\u4e86\u4e00\u5c42\u53c8\u4e00\u5c42\u7684\u4fee\u9970\u5668 \u3002","title":"\u4fee\u9970\u4f18\u5148\u7ea7"},{"location":"parameters/modifier/#_3","text":"\u6765\u5199\u4e00\u4e2a\u53ef\u4ee5\u88ab\u70b9\u51fb\u7684\u5361\u7247\u5427, \u8ba9\u8fd9\u4e2a\u5361\u7247\u5bbd\u5ea6\u6700\u5927\uff0c\u9ad8\u5ea6100dp, \u5e76\u4e14\u5916\u8fb9\u8ddd16.dp\uff0c\u9634\u5f71\u6df1\u5ea68.dp\u5427 @Composable fun CardExample (){ Card ( modifier = Modifier . fillMaxWidth () . height ( 100. dp ) . padding ( 16. dp ) . clickable { /* \u4e0d\u505a\u4efb\u4f55\u4e8b */ }, elevation = 8. dp ) { // \u5185\u90e8\u6ca1\u6709\u7ec4\u4ef6 } } \u8fd0\u884c\u6548\u679c:","title":"\u7528\u6cd5\u793a\u8303"},{"location":"practice/practice1/","text":"asdasd","title":"Practice1"},{"location":"theme/custom_your_theme/","text":"1. \u793a\u4f8b\u4ecb\u7ecd \u672c\u6587\u793a\u4f8b\u6765\u81ea\uff1ahttps://github.com/RugerMcCarthy/BloomCompose \u901a\u8fc7\u9605\u8bfb\u524d\u4e24\u7bc7\u6587\u7ae0\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5177\u5907\u81ea\u5b9a\u4e49\u4e3b\u9898\u65b9\u6848\u7684\u80fd\u529b\u4e86\u3002\u6211\u4eec\u901a\u8fc7#AndroidDevChallange\u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f \u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\u3002\u5176\u5b9e\u8fd9\u91cc\u7684\u5185\u5bb9\u5728\u521d\u8bc6MaterialTheme\u7ae0\u8282\u4e2d\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684colors\u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981Color\u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here ) 3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f \u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002\u8fd8\u8bb0\u5f97MaterialTheme\u65b9\u6cd5\u561b\uff0c\u5176\u5b9e\u7b2c\u4e8c\u4e2a\u53c2\u6570typography\u8868\u793a\u7684\u5c31\u662f\u4f60\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2aTypography\u662fAndroid Studio\u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio\u4f1a\u5728ui.theme\u5305\u4e0b\u751f\u6210Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86Typography\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aTypography\u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528Typography\u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230MaterialTheme\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0typography\u63d0\u4f9b\u7ed9LocalTypography\u8fd9\u4e2aCompositionLocal\u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0ecolors\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136Android Studio\u5e2e\u52a9\u751f\u6210Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165MaterialTheme\u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528style\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary ) 4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90 \u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605MaterialTheme\u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid\u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002 \u5728\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u4ecb\u7ecd\u4e86MaterialTheme\u5de5\u4f5c\u539f\u7406\uff0c\u60f3\u5fc5\u4f60\u4e5f\u731c\u5230\u4e86\uff0c\u5c31\u662f\u901a\u8fc7\u5b9a\u5236CompositionLocal\u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7MaterialTheme\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7Kotlin\u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal\u53ea\u80fd\u5728composable(\u5e26\u6709Composable\u6ce8\u89e3\u7684lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0@Composable\u4e0e@ReadOnlyComposable\u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7MaterialTheme\u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"\u81ea\u5b9a\u4e49\u4f60\u7684\u4e3b\u9898\u65b9\u6848"},{"location":"theme/custom_your_theme/#1","text":"\u672c\u6587\u793a\u4f8b\u6765\u81ea\uff1ahttps://github.com/RugerMcCarthy/BloomCompose \u901a\u8fc7\u9605\u8bfb\u524d\u4e24\u7bc7\u6587\u7ae0\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5177\u5907\u81ea\u5b9a\u4e49\u4e3b\u9898\u65b9\u6848\u7684\u80fd\u529b\u4e86\u3002\u6211\u4eec\u901a\u8fc7#AndroidDevChallange\u6311\u6218\u8d5b\u7b2c\u4e09\u5468\u9898\u76ee\u4f5c\u4e3a\u793a\u4f8b\u6765\u770b\u770b\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u5982\u4f55\u8fdb\u884c\u5e94\u7528\u3002\u5728\u4e0d\u540c\u4e3b\u9898\u65b9\u6848\u4e0b\u80cc\u666f\u989c\u8272\u3001\u6587\u5b57\u989c\u8272\u4e0e\u56fe\u7247\u8d44\u6e90\u90fd\u662f\u4e0d\u540c\u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5bf9\u4e8e\u6240\u6709\u6587\u672c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9898\u5b8c\u6210\u5b57\u4f53\u6837\u5f0f\u7684\u914d\u7f6e\uff0c\u6240\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"1. \u793a\u4f8b\u4ecb\u7ecd"},{"location":"theme/custom_your_theme/#2","text":"\u9996\u5148\uff0c\u6211\u4eec\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u989c\u8272\u6837\u5f0f\u3002\u5176\u5b9e\u8fd9\u91cc\u7684\u5185\u5bb9\u5728\u521d\u8bc6MaterialTheme\u7ae0\u8282\u4e2d\u7684\u64cd\u4f5c\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u751f\u6210\u5176\u5bf9\u5e94\u7684colors\u5373\u53ef\u3002\u6839\u636e\u9879\u76ee\u9700\u6c42\uff0c\u6211\u4eec\u8fdb\u884c\u4ee5\u4e0b\u7684\u914d\u7f6e\u3002 private val BloomLightColorPaltte = lightColors ( primary = pink100 , secondary = pink900 , background = white , surface = white850 , onPrimary = gray , onSecondary = white , onBackground = gray , onSurface = gray , ) private val BloomDarkColorPaltte = darkColors ( primary = green900 , secondary = green300 , background = gray , surface = white150 , onPrimary = white , onSecondary = gray , onBackground = white , onSurface = white850 ) @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { CompositionLocalProvider ( LocalWelcomeAssets provides if ( theme == BloomTheme . DARK ) WelcomeAssets . DarkWelcomeAssets else WelcomeAssets . LightWelcomeAssets , ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = Typography , shapes = shapes , content = content ) } } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u6240\u9700\u8981Color\u7684\u5730\u65b9\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , color = MaterialTheme . colors . onPrimary // I'm here )","title":"2. \u914d\u7f6e\u989c\u8272\u6837\u5f0f"},{"location":"theme/custom_your_theme/#3","text":"\u6211\u4eec\u63a5\u7740\u6765\u5b66\u4e60\u5982\u4f55\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u3002\u8fd8\u8bb0\u5f97MaterialTheme\u65b9\u6cd5\u561b\uff0c\u5176\u5b9e\u7b2c\u4e8c\u4e2a\u53c2\u6570typography\u8868\u793a\u7684\u5c31\u662f\u4f60\u6240\u914d\u7f6e\u7684\u5b57\u4f53\uff0c\u53ea\u662f\u8fd9\u4e2aTypography\u662fAndroid Studio\u9ed8\u8ba4\u5e2e\u4f60\u914d\u5236\u7684\u3002 MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) \u5982\u679c\u662f\u65b0\u5efa\u7684\u9879\u76ee\uff0cAndroid Studio\u4f1a\u5728ui.theme\u5305\u4e0b\u751f\u6210Type.kt\uff0c\u5176\u4e2d\u5305\u542b\u4e86Typography\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aTypography\u7684\u53d8\u91cf\u95f4\u63a5\u8c03\u7528Typography\u7c7b\u6784\u9020\u51fd\u6570\u3002 val Typography = Typography ( body1 = TextStyle ( fontFamily = FontFamily . Default , fontWeight = FontWeight . Normal , fontSize = 16. sp ) ) \u518d\u56de\u5230MaterialTheme\u5b9e\u73b0\uff0c\u53ef\u4ee5\u53d1\u73b0typography\u63d0\u4f9b\u7ed9LocalTypography\u8fd9\u4e2aCompositionLocal\u5b9e\u4f8b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5982\u4f55\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u5b57\u4f53\u4e5f\u4e0d\u9700\u8981\u989d\u5916\u7684\u4ecb\u7ecd\u4e86\uff0c\u8fd9\u4e0ecolors\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 @Composable fun MaterialTheme ( colors : Colors = MaterialTheme . colors , typography : Typography = MaterialTheme . typography , shapes : Shapes = MaterialTheme . shapes , content : @Composable () -> Unit ) { val rememberedColors = remember { colors . copy () }. apply { updateColorsFrom ( colors ) } val rippleIndication = rememberRipple () val selectionColors = rememberTextSelectionColors ( rememberedColors ) CompositionLocalProvider ( LocalColors provides rememberedColors , LocalContentAlpha provides ContentAlpha . high , LocalIndication provides rippleIndication , LocalRippleTheme provides MaterialRippleTheme , LocalShapes provides shapes , LocalTextSelectionColors provides selectionColors , LocalTypography provides typography // I'm here~ ) { ProvideTextStyle ( value = typography . body1 , content = content ) } } \u65e2\u7136\u61c2\u5f97\u4e86\u539f\u7406\uff0c\u6211\u4eec\u4ec5\u9700\u8981\u6839\u636e\u9879\u76ee\u5b9e\u9645\u9700\u6c42\u914d\u7f6e\u5b57\u4f53\u6837\u5f0f\u5373\u53ef\uff0c\u65e2\u7136Android Studio\u5e2e\u52a9\u751f\u6210Type.kt\uff0c\u8bf4\u660e\u662f\u5b98\u65b9\u5e0c\u671b\u6211\u4eec\u5c06\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u4f46\u4e5f\u53ef\u4e0d\u9075\u5b88\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u7531\u4e8e\u6bcf\u79cd\u5b57\u4f53\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u7c97\u7ec6\u98ce\u683c\uff0c\u6211\u4eec\u5728\u5b57\u4f53\u6837\u5f0f\u914d\u7f6e\u65f6\u9700\u8981\u6307\u660e\u5b57\u4f53\u79cd\u7c7b\u4e0e\u7c97\u7ec6\u98ce\u683c\u3002 val nunitoSansFamily = FontFamily ( Font ( R . font . nunitosans_light , FontWeight . Light ), Font ( R . font . nunitosans_semibold , FontWeight . SemiBold ), Font ( R . font . nunitosans_bold , FontWeight . Bold ) ) val bloomTypography = Typography ( h1 = TextStyle ( fontSize = 18. sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), h2 = TextStyle ( fontSize = 14. sp , letterSpacing = 0.15 . sp , fontFamily = nunitoSansFamily , fontWeight = FontWeight . Bold ), .... ) \u4f7f\u7528\u7684\u8bdd\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4ec5\u9700\u5c06\u5b57\u4f53\u6837\u5f0f\u4f20\u5165MaterialTheme\u5373\u53ef\u3002 @Composable fun BloomTheme ( theme : BloomTheme = BloomTheme . LIGHT , content : @Composable () () -> Unit ) { MaterialTheme ( colors = if ( theme == BloomTheme . DARK ) BloomDarkColorPaltte else BloomLightColorPaltte , typography = bloomTypoGraphy , shapes = shapes , content = content ) } \u5728\u6211\u4eec\u7684\u89c6\u56fe\u7ec4\u4ef6\u4e2d\u4f7f\u7528style\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\u5373\u53ef\u3002 Text ( text = \"Beautiful home garden solutions\" , textAlign = TextAlign . Center , style = MaterialTheme . typography . subtitle1 , // I'm here color = MaterialTheme . colors . onPrimary )","title":"3. \u914d\u7f6e\u5b57\u4f53\u6837\u5f0f"},{"location":"theme/custom_your_theme/#4","text":"\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u7528\u4e0d\u540c\u7684\u591a\u5a92\u4f53\u8d44\u6e90\uff0c\u4f8b\u5982\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u7b49\u3002\u901a\u8fc7\u67e5\u9605MaterialTheme\u53c2\u6570\u5217\u8868\u6211\u4eec\u6ca1\u6709\u53d1\u73b0\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u7684\u53c2\u6570\u3002\u96be\u9053 Jetpack Compose \u4e0d\u5177\u5907\u8fd9\u6837\u7684\u80fd\u529b\uff1f\u7b54\u6848\u5f53\u7136\u662f\u5426\u5b9a\u7684\uff0cAndroid\u56e2\u961f\u5df2\u7ecf\u5145\u5206\u8003\u8651\u4e86\u5404\u79cd\u573a\u666f\uff0c\u53ea\u662f\u9488\u5bf9\u4e8e\u8fd9\u79cd\u9700\u6c42\u800c\u8a00\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u5b9a\u5236\u6269\u5c55\u3002 \u5728\u524d\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u4ecb\u7ecd\u4e86MaterialTheme\u5de5\u4f5c\u539f\u7406\uff0c\u60f3\u5fc5\u4f60\u4e5f\u731c\u5230\u4e86\uff0c\u5c31\u662f\u901a\u8fc7\u5b9a\u5236CompositionLocal\u65b9\u5f0f\u6765\u5b9e\u73b0\u56fe\u7247\u8d44\u6e90\u7684\u6269\u5c55\uff0c\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u9009\u7528\u5176\u5bf9\u5e94\u7684\u591a\u5a92\u4f53\u8d44\u6e90\u3002 open class WelcomeAssets private constructor ( var background : Int , var illos : Int , var logo : Int ) { object LightWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_light_welcome_bg , illos = R . drawable . ic_light_welcome_illos , logo = R . drawable . ic_light_logo ) object DarkWelcomeAssets : WelcomeAssets ( background = R . drawable . ic_dark_welcome_bg , illos = R . drawable . ic_dark_welcome_illos , logo = R . drawable . ic_dark_logo ) } internal var LocalWelcomeAssets = staticCompositionLocalOf { WelcomeAssets . LightWelcomeAssets as WelcomeAssets } \u4e8e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u5e0c\u671b\u80fd\u591f\u5728\u89c6\u56fe\u4e2d\u4ecd\u901a\u8fc7MaterialTheme\u6765\u8bbf\u95ee\u6211\u4eec\u7684\u56fe\u7247\u8d44\u6e90\uff0c\u90a3\u4e48\u5219\u53ef\u4ee5\u901a\u8fc7Kotlin\u6269\u5c55\u5c5e\u6027\u7684\u7279\u6027\u8fdb\u884c\u5b9e\u73b0(\u6269\u5c55\u5c5e\u6027\u662f\u6ca1\u6709\u5e55\u540e\u5b57\u6bb5\u7684\uff0c\u53ea\u80fd\u59d4\u6258\u5176\u4ed6\u5b9e\u4f8b)\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCompositionLocal\u53ea\u80fd\u5728composable(\u5e26\u6709Composable\u6ce8\u89e3\u7684lambda)\u4e2d\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u8fd9\u4e2a\u5c5e\u6027\u83b7\u53d6\u6dfb\u52a0@Composable\u4e0e@ReadOnlyComposable\u6ce8\u89e3\u3002 val MaterialTheme . welcomeAssets @Composable @ReadOnlyComposable get () = LocalWelcomeAssets . current \u8fd9\u6837\u6211\u4eec\u5728\u89c6\u56fe\u4e2d\u5c31\u53ef\u4ee5\u4ecd\u7136\u901a\u8fc7MaterialTheme\u6765\u83b7\u53d6\u6269\u5c55\u7684\u56fe\u7247\u8d44\u6e90\u4e86\u3002 Image ( painter = rememberVectorPainter ( image = ImageVector . vectorResource ( id = MaterialTheme . welcomeAssets . background )), contentDescription = \"weclome_bg\" , modifier = Modifier . fillMaxSize () ) \u65e2\u7136\u4e86\u89e3\u4e86\u56fe\u7247\u7684\u4e3b\u9898\u914d\u7f6e\uff0c\u5176\u4ed6\u591a\u5a92\u4f53\u8d44\u6e90\u7684\u4e3b\u9898\u914d\u7f6e\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u8bf7\u5145\u5206\u53d1\u6325\u4f60\u7684\u60f3\u8c61\u529b\u3002","title":"4. \u914d\u7f6e\u81ea\u5b9a\u4e49\u8d44\u6e90"},{"location":"theme/meet_material_theme/","text":"1. \u4ecb\u7ecd MaterialTheme \u662f Jetpack Compose \u6240\u63d0\u4f9b\u7684\u57fa\u4e8e Material Design \u98ce\u683c\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\uff0c\u901a\u8fc7\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\u7684\u914d\u7f6e\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u6240\u6709\u7ec4\u4ef6\u6839\u636e\u4e3b\u9898\u5207\u6362\u800c\u76f8\u5e94\u5f97\u5230\u6837\u5f0f\u6539\u53d8\u3002 \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Compose \u9879\u76ee\u65f6\uff0cAndroid Studio \u4f1a\u9ed8\u8ba4\u5e2e\u6211\u751f\u6210\u4e00\u4e2a Theme \u65b9\u6cd5(\u751f\u6210\u7684\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee\u540d\u79f0+Theme) class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { // \u770b\u8fd9\u91cc\uff0c\u6211\u521b\u5efa\u7684\u9879\u76ee\u540d\u79f0\u662f ComposeStudy \uff5e // \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u4f1a\u4ee5 lambda \u53c2\u6570\u5f62\u5f0f\u4f20\u5165\u5176\u4e2d\u3002 ComposeStudyTheme { Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u751f\u6210\u7684 Theme \u65b9\u6cd5\u4e3a\u6211\u4eec\u505a\u4e86\u54ea\u4e9b\u4e8b\u3002 @Composable fun ComposeStudyTheme ( darkTheme : Boolean = isSystemInDarkTheme (), content : @Composable () () -> Unit ) { val colors = if ( darkTheme ) { DarkColorPalette } else { LightColorPalette } MaterialTheme ( colors = colors , // \u989c\u8272 typography = Typography , // \u5b57\u4f53 shapes = Shapes , // \u5f62\u72b6 content = content // \u58f0\u660e\u7684\u89c6\u56fe ) } private val DarkColorPalette = darkColors ( primary = Purple200 , primaryVariant = Purple700 , secondary = Teal200 ) private val LightColorPalette = lightColors ( primary = Purple500 , primaryVariant = Purple700 , secondary = Teal200 ) \u5728\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4e86 MaterialTheme \u3002\u4f46\u662f\u5148\u522b\u6025\u6211\u4eec\u5f80\u4e0a\u770b\u770b\uff0c\u53ef\u4ee5\u770b\u5230 Android Studio \u9ed8\u8ba4\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f( Light \u4e0e Dark )\uff0c\u6839\u636e\u4f20\u5165\u5e03\u5c14\u503c\u7684\u4e0d\u540c\u800c\u9009\u62e9\u5176\u4e00\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5230MaterialTheme\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f\u5206\u522b\u4f7f\u7528\u7684\u662f darkColors \u4e0e lightColors \u4e24\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e24\u8005\u7684\u5b9e\u73b0\u3002 fun lightColors ( primary : Color = Color ( 0 xFF6200EE ), primaryVariant : Color = Color ( 0 xFF3700B3 ), secondary : Color = Color ( 0 xFF03DAC6 ), secondaryVariant : Color = Color ( 0 xFF018786 ), background : Color = Color . White , surface : Color = Color . White , error : Color = Color ( 0 xFFB00020 ), onPrimary : Color = Color . White , onSecondary : Color = Color . Black , onBackground : Color = Color . Black , onSurface : Color = Color . Black , onError : Color = Color . White ): Colors = Colors ( primary , primaryVariant , secondary , secondaryVariant , background , surface , error , onPrimary , onSecondary , onBackground , onSurface , onError , true ) \u53ef\u4ee5\u770b\u5230 lightColors \u5c06\u4f20\u5165\u53c2\u6570\u900f\u4f20\u5230\u4e86Colors\u6784\u9020\u5668\u4e2d\u4e86\uff0c\u800c Colors \u6784\u9020\u5668\u5c5e\u6027\u662f\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\uff0c lightColors \u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u8bb8\u591a\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u79cd\u8c03\u8272\u677f\u672c\u8d28\u4e0a\u53ea\u662fColors\u6210\u5458\u5c5e\u6027\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u61c2\u5f97\u4e86\u672c\u8d28\u5c31\u53ef\u4ee5\u8fdb\u884c\u5b9a\u5236\u4e3b\u9898\u6837\u5f0f\u7684\u914d\u7f6e\u4e86\u3002 2. \u7b80\u5355\u4f7f\u7528 MaterialTheme \u5b8c\u6210\u4e3b\u9898\u914d\u8272 \u63a5\u4e0b\u6765\u662f\u4f7f\u7528\u793a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524d\u9700\u6c42\u4e3a\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u5f97\u6211\u4eec\u5b9a\u5236\u7684\u6587\u672c\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u5f53\u4eae\u8272\u4e3b\u9898\u65f6\u663e\u793a\u4e3a\u7ea2\u8272\uff0c\u6697\u8272\u4e3b\u9898\u663e\u793a\u4e3a\u84dd\u8272\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Color \u7684 primary \u5c5e\u6027\u6765\u5b58\u50a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6210\u5458\u5c5e\u6027\u3002 @Composable fun CustomColorTheme ( isDark : Boolean , content : @Composable () () -> Unit ) { var BLUE = Color ( 0 xFF0000FF ) var RED = Color ( 0 xFFDC143C ) val colors = if ( isDark ) { darkColors ( primary = BLUE ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u84dd\u8272 } else { lightColors ( primary = RED ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u7ea2\u8272 } MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) } \u914d\u7f6e\u5b8c\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u4f7f\u7528\u4e86\uff0c\u5c06\u6211\u4eec\u89c6\u56fe\u4e2d\u7684 Text \u989c\u8272\u914d\u7f6e\u4e3a MaterialTheme.colors.primary \u3002 @Composable fun SampleText () { Text ( text = \"Hello World\" , color = MaterialTheme . colors . primary ) } @Preview ( showBackground = true ) @Composable fun DarkPreview () { CustomColorTheme ( isDark = true ) { SampleText (); } } @Preview ( showBackground = true ) @Composable fun LightPreview () { CustomColorTheme ( isDark = false ) { SampleText () } } \u6211\u4eec\u540c\u65f6\u521b\u5efa\u4e86\u4e24\u79cd\u4e3b\u9898\u7684\u9884\u89c8\uff0c\u901a\u8fc7 Android Studio \u7684 Preview \u7a97\u53e3\u5c31\u53ef\u4ee5\u9884\u89c8\u5230\u6240\u6709\u4e3b\u9898\u4e0b\u7684\u6548\u679c\u4e86\u3002","title":"\u521d\u8bc6 MaterialTheme"},{"location":"theme/meet_material_theme/#1","text":"MaterialTheme \u662f Jetpack Compose \u6240\u63d0\u4f9b\u7684\u57fa\u4e8e Material Design \u98ce\u683c\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\uff0c\u901a\u8fc7\u4e3b\u9898\u6837\u5f0f\u6a21\u7248\u7684\u914d\u7f6e\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u6240\u6709\u7ec4\u4ef6\u6839\u636e\u4e3b\u9898\u5207\u6362\u800c\u76f8\u5e94\u5f97\u5230\u6837\u5f0f\u6539\u53d8\u3002 \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Compose \u9879\u76ee\u65f6\uff0cAndroid Studio \u4f1a\u9ed8\u8ba4\u5e2e\u6211\u751f\u6210\u4e00\u4e2a Theme \u65b9\u6cd5(\u751f\u6210\u7684\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee\u540d\u79f0+Theme) class MainActivity : ComponentActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContent { // \u770b\u8fd9\u91cc\uff0c\u6211\u521b\u5efa\u7684\u9879\u76ee\u540d\u79f0\u662f ComposeStudy \uff5e // \u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u4f1a\u4ee5 lambda \u53c2\u6570\u5f62\u5f0f\u4f20\u5165\u5176\u4e2d\u3002 ComposeStudyTheme { Surface ( color = MaterialTheme . colors . background ) { Greeting ( \"Android\" ) } } } } } \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u751f\u6210\u7684 Theme \u65b9\u6cd5\u4e3a\u6211\u4eec\u505a\u4e86\u54ea\u4e9b\u4e8b\u3002 @Composable fun ComposeStudyTheme ( darkTheme : Boolean = isSystemInDarkTheme (), content : @Composable () () -> Unit ) { val colors = if ( darkTheme ) { DarkColorPalette } else { LightColorPalette } MaterialTheme ( colors = colors , // \u989c\u8272 typography = Typography , // \u5b57\u4f53 shapes = Shapes , // \u5f62\u72b6 content = content // \u58f0\u660e\u7684\u89c6\u56fe ) } private val DarkColorPalette = darkColors ( primary = Purple200 , primaryVariant = Purple700 , secondary = Teal200 ) private val LightColorPalette = lightColors ( primary = Purple500 , primaryVariant = Purple700 , secondary = Teal200 ) \u5728\u8fd9\u91cc\u6211\u4eec\u770b\u5230\u4e86 MaterialTheme \u3002\u4f46\u662f\u5148\u522b\u6025\u6211\u4eec\u5f80\u4e0a\u770b\u770b\uff0c\u53ef\u4ee5\u770b\u5230 Android Studio \u9ed8\u8ba4\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f( Light \u4e0e Dark )\uff0c\u6839\u636e\u4f20\u5165\u5e03\u5c14\u503c\u7684\u4e0d\u540c\u800c\u9009\u62e9\u5176\u4e00\uff0c\u5e76\u5c06\u5176\u4f20\u5165\u5230MaterialTheme\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u4e24\u79cd\u914d\u8272\u7684\u8c03\u8272\u677f\u5206\u522b\u4f7f\u7528\u7684\u662f darkColors \u4e0e lightColors \u4e24\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e24\u8005\u7684\u5b9e\u73b0\u3002 fun lightColors ( primary : Color = Color ( 0 xFF6200EE ), primaryVariant : Color = Color ( 0 xFF3700B3 ), secondary : Color = Color ( 0 xFF03DAC6 ), secondaryVariant : Color = Color ( 0 xFF018786 ), background : Color = Color . White , surface : Color = Color . White , error : Color = Color ( 0 xFFB00020 ), onPrimary : Color = Color . White , onSecondary : Color = Color . Black , onBackground : Color = Color . Black , onSurface : Color = Color . Black , onError : Color = Color . White ): Colors = Colors ( primary , primaryVariant , secondary , secondaryVariant , background , surface , error , onPrimary , onSecondary , onBackground , onSurface , onError , true ) \u53ef\u4ee5\u770b\u5230 lightColors \u5c06\u4f20\u5165\u53c2\u6570\u900f\u4f20\u5230\u4e86Colors\u6784\u9020\u5668\u4e2d\u4e86\uff0c\u800c Colors \u6784\u9020\u5668\u5c5e\u6027\u662f\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\uff0c lightColors \u5e2e\u52a9\u6211\u4eec\u751f\u6210\u4e86\u8bb8\u591a\u5c5e\u6027\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u53d1\u73b0\u4e24\u79cd\u8c03\u8272\u677f\u672c\u8d28\u4e0a\u53ea\u662fColors\u6210\u5458\u5c5e\u6027\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u61c2\u5f97\u4e86\u672c\u8d28\u5c31\u53ef\u4ee5\u8fdb\u884c\u5b9a\u5236\u4e3b\u9898\u6837\u5f0f\u7684\u914d\u7f6e\u4e86\u3002","title":"1. \u4ecb\u7ecd"},{"location":"theme/meet_material_theme/#2-materialtheme","text":"\u63a5\u4e0b\u6765\u662f\u4f7f\u7528\u793a\u4f8b\uff0c\u5047\u8bbe\u5f53\u524d\u9700\u6c42\u4e3a\u6839\u636e\u4e3b\u9898\u7684\u4e0d\u540c\u4f7f\u5f97\u6211\u4eec\u5b9a\u5236\u7684\u6587\u672c\u989c\u8272\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u5f53\u4eae\u8272\u4e3b\u9898\u65f6\u663e\u793a\u4e3a\u7ea2\u8272\uff0c\u6697\u8272\u4e3b\u9898\u663e\u793a\u4e3a\u84dd\u8272\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Color \u7684 primary \u5c5e\u6027\u6765\u5b58\u50a8\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6210\u5458\u5c5e\u6027\u3002 @Composable fun CustomColorTheme ( isDark : Boolean , content : @Composable () () -> Unit ) { var BLUE = Color ( 0 xFF0000FF ) var RED = Color ( 0 xFFDC143C ) val colors = if ( isDark ) { darkColors ( primary = BLUE ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u84dd\u8272 } else { lightColors ( primary = RED ) // \u5c06 primary \u8bbe\u7f6e\u4e3a\u7ea2\u8272 } MaterialTheme ( colors = colors , typography = Typography , shapes = Shapes , content = content ) } \u914d\u7f6e\u5b8c\u5c31\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe\u7cfb\u7edf\u4e2d\u4f7f\u7528\u4e86\uff0c\u5c06\u6211\u4eec\u89c6\u56fe\u4e2d\u7684 Text \u989c\u8272\u914d\u7f6e\u4e3a MaterialTheme.colors.primary \u3002 @Composable fun SampleText () { Text ( text = \"Hello World\" , color = MaterialTheme . colors . primary ) } @Preview ( showBackground = true ) @Composable fun DarkPreview () { CustomColorTheme ( isDark = true ) { SampleText (); } } @Preview ( showBackground = true ) @Composable fun LightPreview () { CustomColorTheme ( isDark = false ) { SampleText () } } \u6211\u4eec\u540c\u65f6\u521b\u5efa\u4e86\u4e24\u79cd\u4e3b\u9898\u7684\u9884\u89c8\uff0c\u901a\u8fc7 Android Studio \u7684 Preview \u7a97\u53e3\u5c31\u53ef\u4ee5\u9884\u89c8\u5230\u6240\u6709\u4e3b\u9898\u4e0b\u7684\u6548\u679c\u4e86\u3002","title":"2. \u7b80\u5355\u4f7f\u7528 MaterialTheme \u5b8c\u6210\u4e3b\u9898\u914d\u8272"},{"location":"theme/understanding_material_theme/","text":"1. MaterialTheme \u662f\u600e\u4e48\u505a\u5230\u7684 \u4e3a\u6df1\u5165\u7406\u89e3 MaterialTheme \u5de5\u4f5c\u539f\u7406\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e90\u7801\u4e00\u63a2\u7a76\u7adf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u4f20\u5165\u7684 content \u53c2\u6570\u5176\u5b9e\u662f\u58f0\u660e\u5728 Theme \u4e2d\u7684\u81ea\u5b9a\u4e49\u5e03\u5c40\u7cfb\u7edf\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda (\u5bf9\u4e8e\u8fd9\u7c7b\u5e26\u6709 Composable \u7684 lambda \u7b80\u79f0\u4e3a composable )\u3002 \u6211\u4eec\u6240\u5173\u6ce8\u7684 colors \u88ab remember \u4fee\u9970\u540e\u8d4b\u503c\u4e3a rememberedColors\u3002\u5982\u679c MaterialTheme \u8fd9\u4e2a composable \u53d1\u751f recompose \u65f6\u4fbf\u4f1a\u68c0\u67e5 colors \u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u4ece\u800c\u51b3\u5b9a\u66f4\u65b0\u3002 \u63a5\u4e0b\u6765\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\uff0c\u901a\u8fc7\u4e2d\u7f00 providers \u5c06 rememberedColors \u63d0\u4f9b\u7ed9\u4e86 LocalColors\u3002\u8ba9\u6211\u4eec\u56de\u5230\u81ea\u5b9a\u4e49\u89c6\u56fe\u4e2d\uff0c\u770b\u770b\u6211\u4eec\u662f\u5982\u4f55\u901a\u8fc7 MaterialTheme \u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u7684\u3002 object MaterialTheme { val colors : Colors @Composable @ReadOnlyComposable get () = LocalColors . current val typography : Typography @Composable @ReadOnlyComposable get () = LocalTypography . current val shapes : Shapes @Composable @ReadOnlyComposable get () = LocalShapes . current } \u53ef\u4ee5\u53d1\u73b0\u5728\u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\u7684 colors \u5c5e\u6027\uff0c\u95f4\u63a5\u4f7f\u7528\u4e86 LocalColors\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Theme \u4f7f\u7528\u7684\u662f MaterialTheme \u51fd\u6570\u4e3a LocalColors \u8d4b\u503c\uff0c\u800c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\uff0c\u95f4\u63a5\u4ece LocalColors \u4e2d\u83b7\u53d6\u5230\u503c\u3002\u6240\u4ee5 LocalColors \u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u5462\uff1f internal val LocalColors = staticCompositionLocalOf { lightColors () } \u901a\u8fc7\u58f0\u660e\u53ef\u4ee5\u53d1\u73b0\u4ed6\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CompositionLocal\uff0c\u5176\u521d\u59cb\u503c\u662f lightColors() \u8fd4\u56de\u7684 colors \u914d\u7f6e\u3002 MaterialTheme \u65b9\u6cd5\u4e2d\u901a\u8fc7 CompositionLocalProvider \u65b9\u6cd5\u4e3a\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe composable \u63d0\u4f9b\u4e86\u4e00\u4e9b CompositionLocal\uff0c\u5305\u542b\u4e86\u6240\u6709\u7684\u4e3b\u9898\u914d\u7f6e\u4fe1\u606f\u3002 2. CompositionLocal\u4ecb\u7ecd \u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728 composable \u6811\u4e2d\u5171\u4eab\u4e00\u4e9b\u6570\u636e\uff08\u4f8b\u5982\u4e3b\u9898\u914d\u7f6e\uff09\uff0c\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u5f53\u53c2\u6570\u8d8a\u6765\u8d8a\u591a\u65f6\uff0ccomposable \u53c2\u6570\u5217\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u96be\u4ee5\u8fdb\u884c\u7ef4\u62a4\u3002\u5f53 composable \u9700\u8981\u5f7c\u6b64\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u4e14\u5b9e\u73b0\u5404\u81ea\u7684\u79c1\u6709\u6027\u65f6\uff0c\u5982\u679c\u4ecd\u91c7\u7528\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5219\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e4b\u5916\u7684\u9ebb\u70e6\u4e0e\u5d29\u6e83\u3002 \u4e3a\u89e3\u51b3\u4e0a\u8ff0\u75db\u70b9\u95ee\u9898\uff0c Jetpack Compose \u63d0\u4f9b\u4e86 CompostionLocal \u7528\u6765\u5b8c\u6210 composable \u6811\u4e2d\u5171\u4eab\u6570\u636e\u65b9\u5f0f\u3002CompositionLocals \u662f\u5177\u6709\u5c42\u7ea7\u7684\uff0c\u53ef\u4ee5\u88ab\u9650\u5b9a\u5728\u4ee5\u67d0\u4e2a composable \u4f5c\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u5176\u9ed8\u8ba4\u4f1a\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u5f53\u7136\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a composable \u53ef\u4ee5\u5bf9\u8be5 CompositionLocals \u8fdb\u884c\u8986\u76d6\uff0c\u4ece\u800c\u4f7f\u5f97\u65b0\u503c\u4f1a\u5728\u8fd9\u4e2a composable \u4e2d\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012\u3002 Jetpack Compose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86compositionLocalOf \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a CompostionLocal \u5b9e\u4f8b\u3002 import androidx.compose.runtime.compositionLocalOf var LocalString = compositionLocalOf { \"Jetpack Compose\" } \u5728 composable \u6811\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\u4e3a CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f4d\u4e8e composable \u6811\u7684\u6839\u90e8\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u4efb\u4f55\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u5728\u591a\u4e2a\u4f4d\u7f6e\u4f7f\u7528\uff0c\u4ee5\u8986\u76d6\u5b50\u6811\u80fd\u591f\u83b7\u53d6\u5230\u7684\u503c\u3002\u6211\u4eec\u7684\u793a\u4f8b\u9009\u62e9\u5728 Column \u6240\u5305\u542b\u7684 composable \u4e2d\u4f7f\u7528 CompositionLocalProvider\u3002 import androidx.compose.runtime.CompositionLocalProvider setContent { CustomColorTheme ( true ) { Column { CompositionLocalProvider ( LocalString provides \"Hello World\" ) { Text ( text = LocalString . current , color = Color . Green ) CompositionLocalProvider ( LocalString provides \"Ruger McCarthy\" ) { Text ( text = LocalString . current , color = Color . Blue ) } } Text ( text = LocalString . current , color = Color . Red ) } } } \u5b9e\u9645\u6548\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u6240\u6709 composable \u5747\u4f9d\u8d56\u7684\u662f\u540c\u4e00\u4e2a CompositionLocal\uff0c\u800c\u5176\u83b7\u5f97\u5230\u7684\u5b9e\u9645\u7684\u503c\u5374\u662f\u4e0d\u4e00\u6837\u7684\u3002","title":"\u6df1\u5165\u7406\u89e3 MaterialTheme \u4e0e CompositionLocal"},{"location":"theme/understanding_material_theme/#1-materialtheme","text":"\u4e3a\u6df1\u5165\u7406\u89e3 MaterialTheme \u5de5\u4f5c\u539f\u7406\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u5165\u6e90\u7801\u4e00\u63a2\u7a76\u7adf\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\u4f20\u5165\u7684 content \u53c2\u6570\u5176\u5b9e\u662f\u58f0\u660e\u5728 Theme \u4e2d\u7684\u81ea\u5b9a\u4e49\u5e03\u5c40\u7cfb\u7edf\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u5e26\u6709 Composable \u6ce8\u89e3\u7684 lambda (\u5bf9\u4e8e\u8fd9\u7c7b\u5e26\u6709 Composable \u7684 lambda \u7b80\u79f0\u4e3a composable )\u3002 \u6211\u4eec\u6240\u5173\u6ce8\u7684 colors \u88ab remember \u4fee\u9970\u540e\u8d4b\u503c\u4e3a rememberedColors\u3002\u5982\u679c MaterialTheme \u8fd9\u4e2a composable \u53d1\u751f recompose \u65f6\u4fbf\u4f1a\u68c0\u67e5 colors \u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8\u4ece\u800c\u51b3\u5b9a\u66f4\u65b0\u3002 \u63a5\u4e0b\u6765\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\uff0c\u901a\u8fc7\u4e2d\u7f00 providers \u5c06 rememberedColors \u63d0\u4f9b\u7ed9\u4e86 LocalColors\u3002\u8ba9\u6211\u4eec\u56de\u5230\u81ea\u5b9a\u4e49\u89c6\u56fe\u4e2d\uff0c\u770b\u770b\u6211\u4eec\u662f\u5982\u4f55\u901a\u8fc7 MaterialTheme \u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u7684\u3002 object MaterialTheme { val colors : Colors @Composable @ReadOnlyComposable get () = LocalColors . current val typography : Typography @Composable @ReadOnlyComposable get () = LocalTypography . current val shapes : Shapes @Composable @ReadOnlyComposable get () = LocalShapes . current } \u53ef\u4ee5\u53d1\u73b0\u5728\u83b7\u53d6\u5230\u5f53\u524d\u4e3b\u9898\u914d\u8272\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\u7684 colors \u5c5e\u6027\uff0c\u95f4\u63a5\u4f7f\u7528\u4e86 LocalColors\u3002 \u603b\u7ed3\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49 Theme \u4f7f\u7528\u7684\u662f MaterialTheme \u51fd\u6570\u4e3a LocalColors \u8d4b\u503c\uff0c\u800c\u5728\u83b7\u53d6\u65f6\u4f7f\u7528\u7684\u662f MaterialTheme \u7c7b\u5355\u4f8b\uff0c\u95f4\u63a5\u4ece LocalColors \u4e2d\u83b7\u53d6\u5230\u503c\u3002\u6240\u4ee5 LocalColors \u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u5462\uff1f internal val LocalColors = staticCompositionLocalOf { lightColors () } \u901a\u8fc7\u58f0\u660e\u53ef\u4ee5\u53d1\u73b0\u4ed6\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a CompositionLocal\uff0c\u5176\u521d\u59cb\u503c\u662f lightColors() \u8fd4\u56de\u7684 colors \u914d\u7f6e\u3002 MaterialTheme \u65b9\u6cd5\u4e2d\u901a\u8fc7 CompositionLocalProvider \u65b9\u6cd5\u4e3a\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u89c6\u56fe composable \u63d0\u4f9b\u4e86\u4e00\u4e9b CompositionLocal\uff0c\u5305\u542b\u4e86\u6240\u6709\u7684\u4e3b\u9898\u914d\u7f6e\u4fe1\u606f\u3002","title":"1. MaterialTheme \u662f\u600e\u4e48\u505a\u5230\u7684"},{"location":"theme/understanding_material_theme/#2-compositionlocal","text":"\u5f88\u591a\u65f6\u5019\u6211\u4eec\u9700\u8981\u5728 composable \u6811\u4e2d\u5171\u4eab\u4e00\u4e9b\u6570\u636e\uff08\u4f8b\u5982\u4e3b\u9898\u914d\u7f6e\uff09\uff0c\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff0c\u5f53\u53c2\u6570\u8d8a\u6765\u8d8a\u591a\u65f6\uff0ccomposable \u53c2\u6570\u5217\u8868\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u81c3\u80bf\uff0c\u96be\u4ee5\u8fdb\u884c\u7ef4\u62a4\u3002\u5f53 composable \u9700\u8981\u5f7c\u6b64\u95f4\u4f20\u9012\u6570\u636e\uff0c\u5e76\u4e14\u5b9e\u73b0\u5404\u81ea\u7684\u79c1\u6709\u6027\u65f6\uff0c\u5982\u679c\u4ecd\u91c7\u7528\u663e\u5f0f\u53c2\u6570\u4f20\u9012\u7684\u65b9\u5f0f\u5219\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u6599\u4e4b\u5916\u7684\u9ebb\u70e6\u4e0e\u5d29\u6e83\u3002 \u4e3a\u89e3\u51b3\u4e0a\u8ff0\u75db\u70b9\u95ee\u9898\uff0c Jetpack Compose \u63d0\u4f9b\u4e86 CompostionLocal \u7528\u6765\u5b8c\u6210 composable \u6811\u4e2d\u5171\u4eab\u6570\u636e\u65b9\u5f0f\u3002CompositionLocals \u662f\u5177\u6709\u5c42\u7ea7\u7684\uff0c\u53ef\u4ee5\u88ab\u9650\u5b9a\u5728\u4ee5\u67d0\u4e2a composable \u4f5c\u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u5176\u9ed8\u8ba4\u4f1a\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u5f53\u7136\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u67d0\u4e2a composable \u53ef\u4ee5\u5bf9\u8be5 CompositionLocals \u8fdb\u884c\u8986\u76d6\uff0c\u4ece\u800c\u4f7f\u5f97\u65b0\u503c\u4f1a\u5728\u8fd9\u4e2a composable \u4e2d\u7ee7\u7eed\u5411\u4e0b\u4f20\u9012\u3002 Jetpack Compose \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86compositionLocalOf \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a CompostionLocal \u5b9e\u4f8b\u3002 import androidx.compose.runtime.compositionLocalOf var LocalString = compositionLocalOf { \"Jetpack Compose\" } \u5728 composable \u6811\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CompositionLocalProvider \u65b9\u6cd5\u4e3a CompositionLocal \u63d0\u4f9b\u4e00\u4e2a\u503c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u4f4d\u4e8e composable \u6811\u7684\u6839\u90e8\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f4d\u4e8e\u4efb\u4f55\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u5728\u591a\u4e2a\u4f4d\u7f6e\u4f7f\u7528\uff0c\u4ee5\u8986\u76d6\u5b50\u6811\u80fd\u591f\u83b7\u53d6\u5230\u7684\u503c\u3002\u6211\u4eec\u7684\u793a\u4f8b\u9009\u62e9\u5728 Column \u6240\u5305\u542b\u7684 composable \u4e2d\u4f7f\u7528 CompositionLocalProvider\u3002 import androidx.compose.runtime.CompositionLocalProvider setContent { CustomColorTheme ( true ) { Column { CompositionLocalProvider ( LocalString provides \"Hello World\" ) { Text ( text = LocalString . current , color = Color . Green ) CompositionLocalProvider ( LocalString provides \"Ruger McCarthy\" ) { Text ( text = LocalString . current , color = Color . Blue ) } } Text ( text = LocalString . current , color = Color . Red ) } } } \u5b9e\u9645\u6548\u679c\u53ef\u4ee5\u770b\u5230\uff0c\u867d\u7136\u6240\u6709 composable \u5747\u4f9d\u8d56\u7684\u662f\u540c\u4e00\u4e2a CompositionLocal\uff0c\u800c\u5176\u83b7\u5f97\u5230\u7684\u5b9e\u9645\u7684\u503c\u5374\u662f\u4e0d\u4e00\u6837\u7684\u3002","title":"2. CompositionLocal\u4ecb\u7ecd"}]}